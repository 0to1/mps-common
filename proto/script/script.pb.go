// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: proto/script/script.proto

// import "google/protobuf/timestamp.proto"

package go_micro_srv_task_script

import (
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Nop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Nop) Reset() {
	*x = Nop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_script_script_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nop) ProtoMessage() {}

func (x *Nop) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_script_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nop.ProtoReflect.Descriptor instead.
func (*Nop) Descriptor() ([]byte, []int) {
	return file_proto_script_script_proto_rawDescGZIP(), []int{0}
}

type Script struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CancelFunc  string `protobuf:"bytes,4,opt,name=cancelFunc,proto3" json:"cancelFunc,omitempty"`
	Content     string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Script) Reset() {
	*x = Script{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_script_script_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Script) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Script) ProtoMessage() {}

func (x *Script) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_script_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Script.ProtoReflect.Descriptor instead.
func (*Script) Descriptor() ([]byte, []int) {
	return file_proto_script_script_proto_rawDescGZIP(), []int{1}
}

func (x *Script) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Script) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Script) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Script) GetCancelFunc() string {
	if x != nil {
		return x.CancelFunc
	}
	return ""
}

func (x *Script) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateScript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *wrappers.Int32Value  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CancelFunc  *wrappers.StringValue `protobuf:"bytes,4,opt,name=cancelFunc,proto3" json:"cancelFunc,omitempty"`
	Content     *wrappers.StringValue `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UpdateScript) Reset() {
	*x = UpdateScript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_script_script_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScript) ProtoMessage() {}

func (x *UpdateScript) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_script_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScript.ProtoReflect.Descriptor instead.
func (*UpdateScript) Descriptor() ([]byte, []int) {
	return file_proto_script_script_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateScript) GetId() *wrappers.Int32Value {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateScript) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateScript) GetDescription() *wrappers.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *UpdateScript) GetCancelFunc() *wrappers.StringValue {
	if x != nil {
		return x.CancelFunc
	}
	return nil
}

func (x *UpdateScript) GetContent() *wrappers.StringValue {
	if x != nil {
		return x.Content
	}
	return nil
}

type UpdateScriptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Update *UpdateScript `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *UpdateScriptReq) Reset() {
	*x = UpdateScriptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_script_script_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateScriptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScriptReq) ProtoMessage() {}

func (x *UpdateScriptReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_script_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScriptReq.ProtoReflect.Descriptor instead.
func (*UpdateScriptReq) Descriptor() ([]byte, []int) {
	return file_proto_script_script_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateScriptReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateScriptReq) GetUpdate() *UpdateScript {
	if x != nil {
		return x.Update
	}
	return nil
}

type ScriptIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ScriptIndex) Reset() {
	*x = ScriptIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_script_script_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptIndex) ProtoMessage() {}

func (x *ScriptIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_script_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptIndex.ProtoReflect.Descriptor instead.
func (*ScriptIndex) Descriptor() ([]byte, []int) {
	return file_proto_script_script_proto_rawDescGZIP(), []int{4}
}

func (x *ScriptIndex) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Scripts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scripts    []*Script `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
	Totalpages uint32    `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Currpages  uint32    `protobuf:"varint,3,opt,name=currpages,proto3" json:"currpages,omitempty"`
	Totals     uint32    `protobuf:"varint,4,opt,name=totals,proto3" json:"totals,omitempty"`
}

func (x *Scripts) Reset() {
	*x = Scripts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_script_script_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scripts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scripts) ProtoMessage() {}

func (x *Scripts) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_script_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scripts.ProtoReflect.Descriptor instead.
func (*Scripts) Descriptor() ([]byte, []int) {
	return file_proto_script_script_proto_rawDescGZIP(), []int{5}
}

func (x *Scripts) GetScripts() []*Script {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *Scripts) GetTotalpages() uint32 {
	if x != nil {
		return x.Totalpages
	}
	return 0
}

func (x *Scripts) GetCurrpages() uint32 {
	if x != nil {
		return x.Currpages
	}
	return 0
}

func (x *Scripts) GetTotals() uint32 {
	if x != nil {
		return x.Totals
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_script_script_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_script_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_script_script_proto_rawDescGZIP(), []int{6}
}

type ScriptFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	And    []*ScriptFilter       `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	Or     []*ScriptFilter       `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	Id     *wrappers.Int32Value  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	IdIn   []int32               `protobuf:"varint,4,rep,packed,name=idIn,proto3" json:"idIn,omitempty"`
	Name   *wrappers.StringValue `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	NameIn []string              `protobuf:"bytes,6,rep,name=nameIn,proto3" json:"nameIn,omitempty"`
}

func (x *ScriptFilter) Reset() {
	*x = ScriptFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_script_script_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptFilter) ProtoMessage() {}

func (x *ScriptFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_script_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptFilter.ProtoReflect.Descriptor instead.
func (*ScriptFilter) Descriptor() ([]byte, []int) {
	return file_proto_script_script_proto_rawDescGZIP(), []int{7}
}

func (x *ScriptFilter) GetAnd() []*ScriptFilter {
	if x != nil {
		return x.And
	}
	return nil
}

func (x *ScriptFilter) GetOr() []*ScriptFilter {
	if x != nil {
		return x.Or
	}
	return nil
}

func (x *ScriptFilter) GetId() *wrappers.Int32Value {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ScriptFilter) GetIdIn() []int32 {
	if x != nil {
		return x.IdIn
	}
	return nil
}

func (x *ScriptFilter) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ScriptFilter) GetNameIn() []string {
	if x != nil {
		return x.NameIn
	}
	return nil
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   uint32        `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  uint32        `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Page    uint32        `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32        `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Filter  *ScriptFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_script_script_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_proto_script_script_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_proto_script_script_proto_rawDescGZIP(), []int{8}
}

func (x *Query) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Query) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Query) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Query) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *Query) GetFilter() *ScriptFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

var File_proto_script_script_proto protoreflect.FileDescriptor

var file_proto_script_script_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x05, 0x0a, 0x03, 0x4e, 0x6f, 0x70, 0x22, 0x88, 0x01, 0x0a,
	0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x61, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3e, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x1d, 0x0a, 0x0b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x9b, 0x01, 0x0a, 0x07, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x07,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x22, 0x0a, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x0c, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x03, 0x61, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x03, 0x61, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x02, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x02, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x49,
	0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x69, 0x64, 0x49, 0x6e, 0x12, 0x30, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x32, 0x9d, 0x04,
	0x0a, 0x0d, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x51, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x20, 0x2e, 0x67,
	0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x1a, 0x22,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61,
	0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x25, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72,
	0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x22, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x29, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73,
	0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x25, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x1a, 0x20, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x50, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x21, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x73, 0x12, 0x57, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x44, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x2e, 0x4e, 0x6f, 0x70, 0x1a, 0x25, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x27, 0x5a,
	0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x3b, 0x67, 0x6f,
	0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_script_script_proto_rawDescOnce sync.Once
	file_proto_script_script_proto_rawDescData = file_proto_script_script_proto_rawDesc
)

func file_proto_script_script_proto_rawDescGZIP() []byte {
	file_proto_script_script_proto_rawDescOnce.Do(func() {
		file_proto_script_script_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_script_script_proto_rawDescData)
	})
	return file_proto_script_script_proto_rawDescData
}

var file_proto_script_script_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_script_script_proto_goTypes = []interface{}{
	(*Nop)(nil),                  // 0: go.micro.srv.task.script.Nop
	(*Script)(nil),               // 1: go.micro.srv.task.script.Script
	(*UpdateScript)(nil),         // 2: go.micro.srv.task.script.UpdateScript
	(*UpdateScriptReq)(nil),      // 3: go.micro.srv.task.script.UpdateScriptReq
	(*ScriptIndex)(nil),          // 4: go.micro.srv.task.script.ScriptIndex
	(*Scripts)(nil),              // 5: go.micro.srv.task.script.Scripts
	(*Response)(nil),             // 6: go.micro.srv.task.script.Response
	(*ScriptFilter)(nil),         // 7: go.micro.srv.task.script.ScriptFilter
	(*Query)(nil),                // 8: go.micro.srv.task.script.Query
	(*wrappers.Int32Value)(nil),  // 9: google.protobuf.Int32Value
	(*wrappers.StringValue)(nil), // 10: google.protobuf.StringValue
}
var file_proto_script_script_proto_depIdxs = []int32{
	9,  // 0: go.micro.srv.task.script.UpdateScript.id:type_name -> google.protobuf.Int32Value
	10, // 1: go.micro.srv.task.script.UpdateScript.name:type_name -> google.protobuf.StringValue
	10, // 2: go.micro.srv.task.script.UpdateScript.description:type_name -> google.protobuf.StringValue
	10, // 3: go.micro.srv.task.script.UpdateScript.cancelFunc:type_name -> google.protobuf.StringValue
	10, // 4: go.micro.srv.task.script.UpdateScript.content:type_name -> google.protobuf.StringValue
	2,  // 5: go.micro.srv.task.script.UpdateScriptReq.update:type_name -> go.micro.srv.task.script.UpdateScript
	1,  // 6: go.micro.srv.task.script.Scripts.scripts:type_name -> go.micro.srv.task.script.Script
	7,  // 7: go.micro.srv.task.script.ScriptFilter.and:type_name -> go.micro.srv.task.script.ScriptFilter
	7,  // 8: go.micro.srv.task.script.ScriptFilter.or:type_name -> go.micro.srv.task.script.ScriptFilter
	9,  // 9: go.micro.srv.task.script.ScriptFilter.id:type_name -> google.protobuf.Int32Value
	10, // 10: go.micro.srv.task.script.ScriptFilter.name:type_name -> google.protobuf.StringValue
	7,  // 11: go.micro.srv.task.script.Query.filter:type_name -> go.micro.srv.task.script.ScriptFilter
	1,  // 12: go.micro.srv.task.script.ScriptService.AddScript:input_type -> go.micro.srv.task.script.Script
	4,  // 13: go.micro.srv.task.script.ScriptService.DeleteScript:input_type -> go.micro.srv.task.script.ScriptIndex
	3,  // 14: go.micro.srv.task.script.ScriptService.UpdateScript:input_type -> go.micro.srv.task.script.UpdateScriptReq
	4,  // 15: go.micro.srv.task.script.ScriptService.GetScript:input_type -> go.micro.srv.task.script.ScriptIndex
	8,  // 16: go.micro.srv.task.script.ScriptService.GetScripts:input_type -> go.micro.srv.task.script.Query
	0,  // 17: go.micro.srv.task.script.ScriptService.GetNextScriptID:input_type -> go.micro.srv.task.script.Nop
	6,  // 18: go.micro.srv.task.script.ScriptService.AddScript:output_type -> go.micro.srv.task.script.Response
	6,  // 19: go.micro.srv.task.script.ScriptService.DeleteScript:output_type -> go.micro.srv.task.script.Response
	6,  // 20: go.micro.srv.task.script.ScriptService.UpdateScript:output_type -> go.micro.srv.task.script.Response
	1,  // 21: go.micro.srv.task.script.ScriptService.GetScript:output_type -> go.micro.srv.task.script.Script
	5,  // 22: go.micro.srv.task.script.ScriptService.GetScripts:output_type -> go.micro.srv.task.script.Scripts
	4,  // 23: go.micro.srv.task.script.ScriptService.GetNextScriptID:output_type -> go.micro.srv.task.script.ScriptIndex
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_script_script_proto_init() }
func file_proto_script_script_proto_init() {
	if File_proto_script_script_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_script_script_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_script_script_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Script); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_script_script_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_script_script_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateScriptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_script_script_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_script_script_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scripts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_script_script_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_script_script_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_script_script_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_script_script_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_script_script_proto_goTypes,
		DependencyIndexes: file_proto_script_script_proto_depIdxs,
		MessageInfos:      file_proto_script_script_proto_msgTypes,
	}.Build()
	File_proto_script_script_proto = out.File
	file_proto_script_script_proto_rawDesc = nil
	file_proto_script_script_proto_goTypes = nil
	file_proto_script_script_proto_depIdxs = nil
}
