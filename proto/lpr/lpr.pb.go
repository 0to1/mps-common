// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: proto/lpr/lpr.proto

package go_micro_srv_lpr

import (
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{0}
}

func (x *LogResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Loglevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Loglevel) Reset() {
	*x = Loglevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Loglevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Loglevel) ProtoMessage() {}

func (x *Loglevel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Loglevel.ProtoReflect.Descriptor instead.
func (*Loglevel) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{1}
}

func (x *Loglevel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Loglevel) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type LogLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogLevelRequest) Reset() {
	*x = LogLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLevelRequest) ProtoMessage() {}

func (x *LogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLevelRequest.ProtoReflect.Descriptor instead.
func (*LogLevelRequest) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{2}
}

type IDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IDReq) Reset() {
	*x = IDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDReq) ProtoMessage() {}

func (x *IDReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDReq.ProtoReflect.Descriptor instead.
func (*IDReq) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{3}
}

func (x *IDReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LprRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ip          string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Port        int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *LprRequest) Reset() {
	*x = LprRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LprRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LprRequest) ProtoMessage() {}

func (x *LprRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LprRequest.ProtoReflect.Descriptor instead.
func (*LprRequest) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{4}
}

func (x *LprRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LprRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LprRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LprRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *LprRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type LprRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lprs []*LprRequest `protobuf:"bytes,1,rep,name=lprs,proto3" json:"lprs,omitempty"`
}

func (x *LprRequests) Reset() {
	*x = LprRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LprRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LprRequests) ProtoMessage() {}

func (x *LprRequests) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LprRequests.ProtoReflect.Descriptor instead.
func (*LprRequests) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{5}
}

func (x *LprRequests) GetLprs() []*LprRequest {
	if x != nil {
		return x.Lprs
	}
	return nil
}

type Lpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ip           string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Port         int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	LicensePlate string `protobuf:"bytes,5,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`
	Time         string `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	Status       bool   `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Description  string `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Lpr) Reset() {
	*x = Lpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lpr) ProtoMessage() {}

func (x *Lpr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lpr.ProtoReflect.Descriptor instead.
func (*Lpr) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{6}
}

func (x *Lpr) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Lpr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lpr) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Lpr) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Lpr) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *Lpr) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Lpr) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Lpr) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Lprs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lprs       []*Lpr `protobuf:"bytes,1,rep,name=lprs,proto3" json:"lprs,omitempty"`
	Totalpages uint32 `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Currpages  uint32 `protobuf:"varint,3,opt,name=currpages,proto3" json:"currpages,omitempty"`
	Totals     uint32 `protobuf:"varint,4,opt,name=totals,proto3" json:"totals,omitempty"`
}

func (x *Lprs) Reset() {
	*x = Lprs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lprs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lprs) ProtoMessage() {}

func (x *Lprs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lprs.ProtoReflect.Descriptor instead.
func (*Lprs) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{7}
}

func (x *Lprs) GetLprs() []*Lpr {
	if x != nil {
		return x.Lprs
	}
	return nil
}

func (x *Lprs) GetTotalpages() uint32 {
	if x != nil {
		return x.Totalpages
	}
	return 0
}

func (x *Lprs) GetCurrpages() uint32 {
	if x != nil {
		return x.Currpages
	}
	return 0
}

func (x *Lprs) GetTotals() uint32 {
	if x != nil {
		return x.Totals
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{8}
}

func (x *Response) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LprStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Images string `protobuf:"bytes,2,opt,name=images,proto3" json:"images,omitempty"`
}

func (x *LprStreamResponse) Reset() {
	*x = LprStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LprStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LprStreamResponse) ProtoMessage() {}

func (x *LprStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LprStreamResponse.ProtoReflect.Descriptor instead.
func (*LprStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{9}
}

func (x *LprStreamResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LprStreamResponse) GetImages() string {
	if x != nil {
		return x.Images
	}
	return ""
}

type LprFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	And    []*LprFilter          `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	Or     []*LprFilter          `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	IdIn   []uint32              `protobuf:"varint,3,rep,packed,name=idIn,proto3" json:"idIn,omitempty"`
	Name   *wrappers.StringValue `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	NameIn []string              `protobuf:"bytes,5,rep,name=nameIn,proto3" json:"nameIn,omitempty"`
	IpIn   []string              `protobuf:"bytes,6,rep,name=ipIn,proto3" json:"ipIn,omitempty"`
	PortIn []uint32              `protobuf:"varint,7,rep,packed,name=portIn,proto3" json:"portIn,omitempty"`
}

func (x *LprFilter) Reset() {
	*x = LprFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LprFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LprFilter) ProtoMessage() {}

func (x *LprFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LprFilter.ProtoReflect.Descriptor instead.
func (*LprFilter) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{10}
}

func (x *LprFilter) GetAnd() []*LprFilter {
	if x != nil {
		return x.And
	}
	return nil
}

func (x *LprFilter) GetOr() []*LprFilter {
	if x != nil {
		return x.Or
	}
	return nil
}

func (x *LprFilter) GetIdIn() []uint32 {
	if x != nil {
		return x.IdIn
	}
	return nil
}

func (x *LprFilter) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *LprFilter) GetNameIn() []string {
	if x != nil {
		return x.NameIn
	}
	return nil
}

func (x *LprFilter) GetIpIn() []string {
	if x != nil {
		return x.IpIn
	}
	return nil
}

func (x *LprFilter) GetPortIn() []uint32 {
	if x != nil {
		return x.PortIn
	}
	return nil
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   uint32     `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  uint32     `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Page    uint32     `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32     `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Filter  *LprFilter `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{11}
}

func (x *Query) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Query) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Query) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Query) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *Query) GetFilter() *LprFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type License struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	License string `protobuf:"bytes,2,opt,name=license,proto3" json:"license,omitempty"` //车牌识别结果
}

func (x *License) Reset() {
	*x = License{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{12}
}

func (x *License) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *License) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

type Licenses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lprs       []*License `protobuf:"bytes,1,rep,name=lprs,proto3" json:"lprs,omitempty"`
	Totalpages uint32     `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Totals     uint32     `protobuf:"varint,3,opt,name=totals,proto3" json:"totals,omitempty"`
}

func (x *Licenses) Reset() {
	*x = Licenses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lpr_lpr_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Licenses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Licenses) ProtoMessage() {}

func (x *Licenses) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lpr_lpr_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Licenses.ProtoReflect.Descriptor instead.
func (*Licenses) Descriptor() ([]byte, []int) {
	return file_proto_lpr_lpr_proto_rawDescGZIP(), []int{13}
}

func (x *Licenses) GetLprs() []*License {
	if x != nil {
		return x.Lprs
	}
	return nil
}

func (x *Licenses) GetTotalpages() uint32 {
	if x != nil {
		return x.Totalpages
	}
	return 0
}

func (x *Licenses) GetTotals() uint32 {
	if x != nil {
		return x.Totals
	}
	return 0
}

var File_proto_lpr_lpr_proto protoreflect.FileDescriptor

var file_proto_lpr_lpr_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x70, 0x72, 0x2f, 0x6c, 0x70, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x05, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x0a,
	0x4c, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0b, 0x4c, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x70, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x04, 0x6c, 0x70, 0x72, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x03, 0x4c, 0x70, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x04, 0x4c, 0x70, 0x72, 0x73,
	0x12, 0x29, 0x0a, 0x04, 0x6c, 0x70, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70,
	0x72, 0x2e, 0x4c, 0x70, 0x72, 0x52, 0x04, 0x6c, 0x70, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x75, 0x72, 0x72, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x75, 0x72, 0x72, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x73, 0x22, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a,
	0x11, 0x4c, 0x70, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x09, 0x4c,
	0x70, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x03, 0x61, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x70, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x03, 0x61, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x02, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x70, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x02, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x49, 0x6e, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x04, 0x69, 0x64, 0x49, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61,
	0x6d, 0x65, 0x49, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x49, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x70, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x22, 0x98,
	0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x65, 0x72,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x70, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x07, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x71,
	0x0a, 0x08, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x70,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x6c, 0x70, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x73, 0x32, 0xe0, 0x07, 0x0a, 0x0a, 0x4c, 0x70, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x42, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x4c, 0x70, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x70,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x70, 0x72, 0x73, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c,
	0x70, 0x72, 0x2e, 0x4c, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0x1a,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4c, 0x70, 0x72, 0x12, 0x17, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x6c, 0x70, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x70, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x70, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x70, 0x72, 0x73, 0x12, 0x17,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x70, 0x72, 0x73, 0x12,
	0x52, 0x0a, 0x09, 0x4c, 0x70, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x2e, 0x67,
	0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e,
	0x4c, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x70,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x51, 0x0a, 0x0a, 0x4c, 0x70, 0x72, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x70, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c,
	0x70, 0x72, 0x2e, 0x4c, 0x70, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x3c, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x17, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c,
	0x70, 0x72, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x17, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72,
	0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x6c, 0x70, 0x72, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72,
	0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x2e, 0x67, 0x6f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c,
	0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70,
	0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x48, 0x0a, 0x0b, 0x53, 0x65,
	0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x6f, 0x67,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x6c, 0x70, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1c, 0x5a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x70,
	0x72, 0x3b, 0x67, 0x6f, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x6c,
	0x70, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_lpr_lpr_proto_rawDescOnce sync.Once
	file_proto_lpr_lpr_proto_rawDescData = file_proto_lpr_lpr_proto_rawDesc
)

func file_proto_lpr_lpr_proto_rawDescGZIP() []byte {
	file_proto_lpr_lpr_proto_rawDescOnce.Do(func() {
		file_proto_lpr_lpr_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_lpr_lpr_proto_rawDescData)
	})
	return file_proto_lpr_lpr_proto_rawDescData
}

var file_proto_lpr_lpr_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_lpr_lpr_proto_goTypes = []interface{}{
	(*LogResponse)(nil),          // 0: go.micro.srv.lpr.LogResponse
	(*Loglevel)(nil),             // 1: go.micro.srv.lpr.Loglevel
	(*LogLevelRequest)(nil),      // 2: go.micro.srv.lpr.LogLevelRequest
	(*IDReq)(nil),                // 3: go.micro.srv.lpr.IDReq
	(*LprRequest)(nil),           // 4: go.micro.srv.lpr.LprRequest
	(*LprRequests)(nil),          // 5: go.micro.srv.lpr.LprRequests
	(*Lpr)(nil),                  // 6: go.micro.srv.lpr.Lpr
	(*Lprs)(nil),                 // 7: go.micro.srv.lpr.Lprs
	(*Response)(nil),             // 8: go.micro.srv.lpr.Response
	(*LprStreamResponse)(nil),    // 9: go.micro.srv.lpr.LprStreamResponse
	(*LprFilter)(nil),            // 10: go.micro.srv.lpr.LprFilter
	(*Query)(nil),                // 11: go.micro.srv.lpr.Query
	(*License)(nil),              // 12: go.micro.srv.lpr.License
	(*Licenses)(nil),             // 13: go.micro.srv.lpr.Licenses
	(*wrappers.StringValue)(nil), // 14: google.protobuf.StringValue
}
var file_proto_lpr_lpr_proto_depIdxs = []int32{
	4,  // 0: go.micro.srv.lpr.LprRequests.lprs:type_name -> go.micro.srv.lpr.LprRequest
	6,  // 1: go.micro.srv.lpr.Lprs.lprs:type_name -> go.micro.srv.lpr.Lpr
	10, // 2: go.micro.srv.lpr.LprFilter.and:type_name -> go.micro.srv.lpr.LprFilter
	10, // 3: go.micro.srv.lpr.LprFilter.or:type_name -> go.micro.srv.lpr.LprFilter
	14, // 4: go.micro.srv.lpr.LprFilter.name:type_name -> google.protobuf.StringValue
	10, // 5: go.micro.srv.lpr.Query.filter:type_name -> go.micro.srv.lpr.LprFilter
	12, // 6: go.micro.srv.lpr.Licenses.lprs:type_name -> go.micro.srv.lpr.License
	4,  // 7: go.micro.srv.lpr.LprService.AddLpr:input_type -> go.micro.srv.lpr.LprRequest
	5,  // 8: go.micro.srv.lpr.LprService.AddLprs:input_type -> go.micro.srv.lpr.LprRequests
	3,  // 9: go.micro.srv.lpr.LprService.DeleteLpr:input_type -> go.micro.srv.lpr.IDReq
	4,  // 10: go.micro.srv.lpr.LprService.ConfigLpr:input_type -> go.micro.srv.lpr.LprRequest
	11, // 11: go.micro.srv.lpr.LprService.GetLprs:input_type -> go.micro.srv.lpr.Query
	4,  // 12: go.micro.srv.lpr.LprService.LprStream:input_type -> go.micro.srv.lpr.LprRequest
	4,  // 13: go.micro.srv.lpr.LprService.LprsStream:input_type -> go.micro.srv.lpr.LprRequest
	3,  // 14: go.micro.srv.lpr.LprService.Start:input_type -> go.micro.srv.lpr.IDReq
	3,  // 15: go.micro.srv.lpr.LprService.Close:input_type -> go.micro.srv.lpr.IDReq
	3,  // 16: go.micro.srv.lpr.LprService.GetLicense:input_type -> go.micro.srv.lpr.IDReq
	3,  // 17: go.micro.srv.lpr.LprService.ClearLicense:input_type -> go.micro.srv.lpr.IDReq
	11, // 18: go.micro.srv.lpr.LprService.GetLicenses:input_type -> go.micro.srv.lpr.Query
	2,  // 19: go.micro.srv.lpr.LprService.GetLogLevel:input_type -> go.micro.srv.lpr.LogLevelRequest
	1,  // 20: go.micro.srv.lpr.LprService.SetLogLevel:input_type -> go.micro.srv.lpr.Loglevel
	8,  // 21: go.micro.srv.lpr.LprService.AddLpr:output_type -> go.micro.srv.lpr.Response
	8,  // 22: go.micro.srv.lpr.LprService.AddLprs:output_type -> go.micro.srv.lpr.Response
	8,  // 23: go.micro.srv.lpr.LprService.DeleteLpr:output_type -> go.micro.srv.lpr.Response
	8,  // 24: go.micro.srv.lpr.LprService.ConfigLpr:output_type -> go.micro.srv.lpr.Response
	7,  // 25: go.micro.srv.lpr.LprService.GetLprs:output_type -> go.micro.srv.lpr.Lprs
	9,  // 26: go.micro.srv.lpr.LprService.LprStream:output_type -> go.micro.srv.lpr.LprStreamResponse
	9,  // 27: go.micro.srv.lpr.LprService.LprsStream:output_type -> go.micro.srv.lpr.LprStreamResponse
	8,  // 28: go.micro.srv.lpr.LprService.Start:output_type -> go.micro.srv.lpr.Response
	8,  // 29: go.micro.srv.lpr.LprService.Close:output_type -> go.micro.srv.lpr.Response
	12, // 30: go.micro.srv.lpr.LprService.GetLicense:output_type -> go.micro.srv.lpr.License
	12, // 31: go.micro.srv.lpr.LprService.ClearLicense:output_type -> go.micro.srv.lpr.License
	13, // 32: go.micro.srv.lpr.LprService.GetLicenses:output_type -> go.micro.srv.lpr.Licenses
	1,  // 33: go.micro.srv.lpr.LprService.GetLogLevel:output_type -> go.micro.srv.lpr.Loglevel
	0,  // 34: go.micro.srv.lpr.LprService.SetLogLevel:output_type -> go.micro.srv.lpr.LogResponse
	21, // [21:35] is the sub-list for method output_type
	7,  // [7:21] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_lpr_lpr_proto_init() }
func file_proto_lpr_lpr_proto_init() {
	if File_proto_lpr_lpr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_lpr_lpr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Loglevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LprRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LprRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lprs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LprStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LprFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*License); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lpr_lpr_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Licenses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_lpr_lpr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lpr_lpr_proto_goTypes,
		DependencyIndexes: file_proto_lpr_lpr_proto_depIdxs,
		MessageInfos:      file_proto_lpr_lpr_proto_msgTypes,
	}.Build()
	File_proto_lpr_lpr_proto = out.File
	file_proto_lpr_lpr_proto_rawDesc = nil
	file_proto_lpr_lpr_proto_goTypes = nil
	file_proto_lpr_lpr_proto_depIdxs = nil
}
