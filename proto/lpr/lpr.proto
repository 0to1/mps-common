syntax = "proto3";

package go.micro.srv.lpr;

import "google/protobuf/wrappers.proto";

option go_package = "proto/lpr;go_micro_srv_lpr";

service LprService {
  //设置车牌识别摄像头
  rpc AddLpr(LprRequest) returns (Response);
  //批量添加
  rpc AddLprs(LprRequests) returns (Response);
  rpc DeleteLpr(IDReq) returns (Response);
  rpc ConfigLpr(LprRequest) returns (Response);
  rpc GetLprs(Query) returns (Lprs);

  //返回单个摄像头的图片流数据
  rpc LprStream(stream LprRequest) returns (stream LprStreamResponse);
  //返回所有图片流数据
  rpc LprsStream(LprRequest) returns (stream LprStreamResponse);
  //根据出入口id编号 开启视频
  rpc Start(IDReq) returns (Response);
  //根据出入口id编号 关闭视频
  rpc Close(IDReq) returns (Response);
  //根据出入口id编号 返回车牌识别结果
  rpc GetLicense(IDReq) returns (License);
  //根据条件查询车牌识别结果
  rpc GetLicenses(Query) returns (Licenses);
}

message IDReq { int32 id = 1; }

message LprRequest {
  int32 id = 1;
  string name = 2;
  string ip = 3;
  int32 port = 4;
}

message LprRequests { repeated LprRequest lprs = 1; }

message Lpr {
  int32 id = 1;
  string name = 2;
  string ip = 3;
  int32 port = 4;
}

message Lprs { repeated Lpr lprs = 1; }

message Response { int32 id = 1; }

message LprStreamResponse {
  int32 id = 1;
  string images = 2;
}

message LprFilter {
  repeated LprFilter and = 1;
  repeated LprFilter or = 2;
  repeated uint32 idIn = 3;
  google.protobuf.StringValue name = 4;
  repeated string nameIn = 5;
  repeated string ipIn = 6;
  repeated uint32 portIn = 7;
}

message Query {
  uint32 limit = 1;
  uint32 offset = 2;
  uint32 page = 3;
  uint32 perPage = 4;
  LprFilter filter = 7;
}

message License {
  int32 id = 1;
  string license = 2; //车牌识别结果
}

message Licenses {
  repeated License lprs = 1;
  uint32 totalpages = 2;
  uint32 totals = 3;
}