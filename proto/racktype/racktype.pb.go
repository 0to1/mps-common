// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/racktype/racktype.proto

package go_micro_srv_racktype

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RackType struct {
	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Length uint32 `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	Width  uint32 `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Layers uint32 `protobuf:"varint,7,opt,name=layers,proto3" json:"layers,omitempty"`
	// 拣货面(A、B两面或者只有一面)
	PickingSurface uint32 `protobuf:"varint,9,opt,name=pickingSurface,proto3" json:"pickingSurface,omitempty"`
	Description    string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	//储位数量
	Cells                []*RackCell `protobuf:"bytes,12,rep,name=cells,proto3" json:"cells,omitempty"`
	CellOption           string      `protobuf:"bytes,13,opt,name=cellOption,proto3" json:"cellOption,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RackType) Reset()         { *m = RackType{} }
func (m *RackType) String() string { return proto.CompactTextString(m) }
func (*RackType) ProtoMessage()    {}
func (*RackType) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{0}
}

func (m *RackType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackType.Unmarshal(m, b)
}
func (m *RackType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackType.Marshal(b, m, deterministic)
}
func (m *RackType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackType.Merge(m, src)
}
func (m *RackType) XXX_Size() int {
	return xxx_messageInfo_RackType.Size(m)
}
func (m *RackType) XXX_DiscardUnknown() {
	xxx_messageInfo_RackType.DiscardUnknown(m)
}

var xxx_messageInfo_RackType proto.InternalMessageInfo

func (m *RackType) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RackType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RackType) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *RackType) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *RackType) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *RackType) GetLayers() uint32 {
	if m != nil {
		return m.Layers
	}
	return 0
}

func (m *RackType) GetPickingSurface() uint32 {
	if m != nil {
		return m.PickingSurface
	}
	return 0
}

func (m *RackType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RackType) GetCells() []*RackCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *RackType) GetCellOption() string {
	if m != nil {
		return m.CellOption
	}
	return ""
}

type RackCell struct {
	CellType             uint32   `protobuf:"varint,1,opt,name=cellType,proto3" json:"cellType,omitempty"`
	Row                  uint32   `protobuf:"varint,2,opt,name=row,proto3" json:"row,omitempty"`
	Column               uint32   `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RackCell) Reset()         { *m = RackCell{} }
func (m *RackCell) String() string { return proto.CompactTextString(m) }
func (*RackCell) ProtoMessage()    {}
func (*RackCell) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{1}
}

func (m *RackCell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackCell.Unmarshal(m, b)
}
func (m *RackCell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackCell.Marshal(b, m, deterministic)
}
func (m *RackCell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackCell.Merge(m, src)
}
func (m *RackCell) XXX_Size() int {
	return xxx_messageInfo_RackCell.Size(m)
}
func (m *RackCell) XXX_DiscardUnknown() {
	xxx_messageInfo_RackCell.DiscardUnknown(m)
}

var xxx_messageInfo_RackCell proto.InternalMessageInfo

func (m *RackCell) GetCellType() uint32 {
	if m != nil {
		return m.CellType
	}
	return 0
}

func (m *RackCell) GetRow() uint32 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *RackCell) GetColumn() uint32 {
	if m != nil {
		return m.Column
	}
	return 0
}

type CellType struct {
	Id                   uint32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Length               uint32            `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	Width                uint32            `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height               uint32            `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Description          string            `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	IsValid              bool              `protobuf:"varint,9,opt,name=isValid,proto3" json:"isValid,omitempty"`
	Properties           map[string]string `protobuf:"bytes,10,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CellType) Reset()         { *m = CellType{} }
func (m *CellType) String() string { return proto.CompactTextString(m) }
func (*CellType) ProtoMessage()    {}
func (*CellType) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{2}
}

func (m *CellType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellType.Unmarshal(m, b)
}
func (m *CellType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellType.Marshal(b, m, deterministic)
}
func (m *CellType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellType.Merge(m, src)
}
func (m *CellType) XXX_Size() int {
	return xxx_messageInfo_CellType.Size(m)
}
func (m *CellType) XXX_DiscardUnknown() {
	xxx_messageInfo_CellType.DiscardUnknown(m)
}

var xxx_messageInfo_CellType proto.InternalMessageInfo

func (m *CellType) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CellType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CellType) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *CellType) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *CellType) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *CellType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CellType) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *CellType) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

type UpdateRackTypeReq struct {
	Id                   uint32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Update               *UpdateRackType `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateRackTypeReq) Reset()         { *m = UpdateRackTypeReq{} }
func (m *UpdateRackTypeReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRackTypeReq) ProtoMessage()    {}
func (*UpdateRackTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{3}
}

func (m *UpdateRackTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRackTypeReq.Unmarshal(m, b)
}
func (m *UpdateRackTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRackTypeReq.Marshal(b, m, deterministic)
}
func (m *UpdateRackTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRackTypeReq.Merge(m, src)
}
func (m *UpdateRackTypeReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRackTypeReq.Size(m)
}
func (m *UpdateRackTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRackTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRackTypeReq proto.InternalMessageInfo

func (m *UpdateRackTypeReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRackTypeReq) GetUpdate() *UpdateRackType {
	if m != nil {
		return m.Update
	}
	return nil
}

type UpdateRackType struct {
	Id                   *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Length               *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=length,proto3" json:"length,omitempty"`
	Width                *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=width,proto3" json:"width,omitempty"`
	Height               *wrappers.UInt32Value `protobuf:"bytes,6,opt,name=height,proto3" json:"height,omitempty"`
	Layers               *wrappers.UInt32Value `protobuf:"bytes,7,opt,name=layers,proto3" json:"layers,omitempty"`
	PickingSurface       *wrappers.UInt32Value `protobuf:"bytes,8,opt,name=pickingSurface,proto3" json:"pickingSurface,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Cells                []*RackCell           `protobuf:"bytes,12,rep,name=cells,proto3" json:"cells,omitempty"`
	CellOption           string                `protobuf:"bytes,13,opt,name=cellOption,proto3" json:"cellOption,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateRackType) Reset()         { *m = UpdateRackType{} }
func (m *UpdateRackType) String() string { return proto.CompactTextString(m) }
func (*UpdateRackType) ProtoMessage()    {}
func (*UpdateRackType) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{4}
}

func (m *UpdateRackType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRackType.Unmarshal(m, b)
}
func (m *UpdateRackType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRackType.Marshal(b, m, deterministic)
}
func (m *UpdateRackType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRackType.Merge(m, src)
}
func (m *UpdateRackType) XXX_Size() int {
	return xxx_messageInfo_UpdateRackType.Size(m)
}
func (m *UpdateRackType) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRackType.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRackType proto.InternalMessageInfo

func (m *UpdateRackType) GetId() *wrappers.UInt32Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UpdateRackType) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UpdateRackType) GetLength() *wrappers.UInt32Value {
	if m != nil {
		return m.Length
	}
	return nil
}

func (m *UpdateRackType) GetWidth() *wrappers.UInt32Value {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *UpdateRackType) GetHeight() *wrappers.UInt32Value {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *UpdateRackType) GetLayers() *wrappers.UInt32Value {
	if m != nil {
		return m.Layers
	}
	return nil
}

func (m *UpdateRackType) GetPickingSurface() *wrappers.UInt32Value {
	if m != nil {
		return m.PickingSurface
	}
	return nil
}

func (m *UpdateRackType) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UpdateRackType) GetCells() []*RackCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *UpdateRackType) GetCellOption() string {
	if m != nil {
		return m.CellOption
	}
	return ""
}

type UpdateCellTypeReq struct {
	Id                   uint32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Update               *UpdateCellType `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateCellTypeReq) Reset()         { *m = UpdateCellTypeReq{} }
func (m *UpdateCellTypeReq) String() string { return proto.CompactTextString(m) }
func (*UpdateCellTypeReq) ProtoMessage()    {}
func (*UpdateCellTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{5}
}

func (m *UpdateCellTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCellTypeReq.Unmarshal(m, b)
}
func (m *UpdateCellTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCellTypeReq.Marshal(b, m, deterministic)
}
func (m *UpdateCellTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCellTypeReq.Merge(m, src)
}
func (m *UpdateCellTypeReq) XXX_Size() int {
	return xxx_messageInfo_UpdateCellTypeReq.Size(m)
}
func (m *UpdateCellTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCellTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCellTypeReq proto.InternalMessageInfo

func (m *UpdateCellTypeReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateCellTypeReq) GetUpdate() *UpdateCellType {
	if m != nil {
		return m.Update
	}
	return nil
}

type UpdateCellType struct {
	Id                   *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Length               *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=length,proto3" json:"length,omitempty"`
	Width                *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=width,proto3" json:"width,omitempty"`
	Height               *wrappers.UInt32Value `protobuf:"bytes,6,opt,name=height,proto3" json:"height,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	IsValid              *wrappers.BoolValue   `protobuf:"bytes,10,opt,name=isValid,proto3" json:"isValid,omitempty"`
	Properties           map[string]string     `protobuf:"bytes,11,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateCellType) Reset()         { *m = UpdateCellType{} }
func (m *UpdateCellType) String() string { return proto.CompactTextString(m) }
func (*UpdateCellType) ProtoMessage()    {}
func (*UpdateCellType) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{6}
}

func (m *UpdateCellType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCellType.Unmarshal(m, b)
}
func (m *UpdateCellType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCellType.Marshal(b, m, deterministic)
}
func (m *UpdateCellType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCellType.Merge(m, src)
}
func (m *UpdateCellType) XXX_Size() int {
	return xxx_messageInfo_UpdateCellType.Size(m)
}
func (m *UpdateCellType) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCellType.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCellType proto.InternalMessageInfo

func (m *UpdateCellType) GetId() *wrappers.UInt32Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UpdateCellType) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UpdateCellType) GetLength() *wrappers.UInt32Value {
	if m != nil {
		return m.Length
	}
	return nil
}

func (m *UpdateCellType) GetWidth() *wrappers.UInt32Value {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *UpdateCellType) GetHeight() *wrappers.UInt32Value {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *UpdateCellType) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UpdateCellType) GetIsValid() *wrappers.BoolValue {
	if m != nil {
		return m.IsValid
	}
	return nil
}

func (m *UpdateCellType) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

type IDReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDReq) Reset()         { *m = IDReq{} }
func (m *IDReq) String() string { return proto.CompactTextString(m) }
func (*IDReq) ProtoMessage()    {}
func (*IDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{7}
}

func (m *IDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDReq.Unmarshal(m, b)
}
func (m *IDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDReq.Marshal(b, m, deterministic)
}
func (m *IDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDReq.Merge(m, src)
}
func (m *IDReq) XXX_Size() int {
	return xxx_messageInfo_IDReq.Size(m)
}
func (m *IDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IDReq.DiscardUnknown(m)
}

var xxx_messageInfo_IDReq proto.InternalMessageInfo

func (m *IDReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{8}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type RackTypeQuery struct {
	Limit                uint32          `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32          `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Page                 uint32          `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              uint32          `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Filter               *RackTypeFilter `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RackTypeQuery) Reset()         { *m = RackTypeQuery{} }
func (m *RackTypeQuery) String() string { return proto.CompactTextString(m) }
func (*RackTypeQuery) ProtoMessage()    {}
func (*RackTypeQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{9}
}

func (m *RackTypeQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackTypeQuery.Unmarshal(m, b)
}
func (m *RackTypeQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackTypeQuery.Marshal(b, m, deterministic)
}
func (m *RackTypeQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackTypeQuery.Merge(m, src)
}
func (m *RackTypeQuery) XXX_Size() int {
	return xxx_messageInfo_RackTypeQuery.Size(m)
}
func (m *RackTypeQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_RackTypeQuery.DiscardUnknown(m)
}

var xxx_messageInfo_RackTypeQuery proto.InternalMessageInfo

func (m *RackTypeQuery) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RackTypeQuery) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *RackTypeQuery) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *RackTypeQuery) GetPerPage() uint32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *RackTypeQuery) GetFilter() *RackTypeFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type CellTypeQuery struct {
	Limit                uint32          `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32          `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Page                 uint32          `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              uint32          `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Filter               *CellTypeFilter `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CellTypeQuery) Reset()         { *m = CellTypeQuery{} }
func (m *CellTypeQuery) String() string { return proto.CompactTextString(m) }
func (*CellTypeQuery) ProtoMessage()    {}
func (*CellTypeQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{10}
}

func (m *CellTypeQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellTypeQuery.Unmarshal(m, b)
}
func (m *CellTypeQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellTypeQuery.Marshal(b, m, deterministic)
}
func (m *CellTypeQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellTypeQuery.Merge(m, src)
}
func (m *CellTypeQuery) XXX_Size() int {
	return xxx_messageInfo_CellTypeQuery.Size(m)
}
func (m *CellTypeQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_CellTypeQuery.DiscardUnknown(m)
}

var xxx_messageInfo_CellTypeQuery proto.InternalMessageInfo

func (m *CellTypeQuery) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *CellTypeQuery) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *CellTypeQuery) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *CellTypeQuery) GetPerPage() uint32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *CellTypeQuery) GetFilter() *CellTypeFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type RackTypeFilter struct {
	And                  []*RackTypeFilter     `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	Or                   []*RackTypeFilter     `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	IdIn                 []uint32              `protobuf:"varint,3,rep,packed,name=idIn,proto3" json:"idIn,omitempty"`
	NameIn               []string              `protobuf:"bytes,4,rep,name=nameIn,proto3" json:"nameIn,omitempty"`
	Id                   *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RackTypeFilter) Reset()         { *m = RackTypeFilter{} }
func (m *RackTypeFilter) String() string { return proto.CompactTextString(m) }
func (*RackTypeFilter) ProtoMessage()    {}
func (*RackTypeFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{11}
}

func (m *RackTypeFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackTypeFilter.Unmarshal(m, b)
}
func (m *RackTypeFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackTypeFilter.Marshal(b, m, deterministic)
}
func (m *RackTypeFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackTypeFilter.Merge(m, src)
}
func (m *RackTypeFilter) XXX_Size() int {
	return xxx_messageInfo_RackTypeFilter.Size(m)
}
func (m *RackTypeFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_RackTypeFilter.DiscardUnknown(m)
}

var xxx_messageInfo_RackTypeFilter proto.InternalMessageInfo

func (m *RackTypeFilter) GetAnd() []*RackTypeFilter {
	if m != nil {
		return m.And
	}
	return nil
}

func (m *RackTypeFilter) GetOr() []*RackTypeFilter {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *RackTypeFilter) GetIdIn() []uint32 {
	if m != nil {
		return m.IdIn
	}
	return nil
}

func (m *RackTypeFilter) GetNameIn() []string {
	if m != nil {
		return m.NameIn
	}
	return nil
}

func (m *RackTypeFilter) GetId() *wrappers.UInt32Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RackTypeFilter) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

type CellTypeFilter struct {
	And                  []*CellTypeFilter     `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	Or                   []*CellTypeFilter     `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	IdIn                 []uint32              `protobuf:"varint,3,rep,packed,name=idIn,proto3" json:"idIn,omitempty"`
	NameIn               []string              `protobuf:"bytes,4,rep,name=nameIn,proto3" json:"nameIn,omitempty"`
	Id                   *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CellTypeFilter) Reset()         { *m = CellTypeFilter{} }
func (m *CellTypeFilter) String() string { return proto.CompactTextString(m) }
func (*CellTypeFilter) ProtoMessage()    {}
func (*CellTypeFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{12}
}

func (m *CellTypeFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellTypeFilter.Unmarshal(m, b)
}
func (m *CellTypeFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellTypeFilter.Marshal(b, m, deterministic)
}
func (m *CellTypeFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellTypeFilter.Merge(m, src)
}
func (m *CellTypeFilter) XXX_Size() int {
	return xxx_messageInfo_CellTypeFilter.Size(m)
}
func (m *CellTypeFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_CellTypeFilter.DiscardUnknown(m)
}

var xxx_messageInfo_CellTypeFilter proto.InternalMessageInfo

func (m *CellTypeFilter) GetAnd() []*CellTypeFilter {
	if m != nil {
		return m.And
	}
	return nil
}

func (m *CellTypeFilter) GetOr() []*CellTypeFilter {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *CellTypeFilter) GetIdIn() []uint32 {
	if m != nil {
		return m.IdIn
	}
	return nil
}

func (m *CellTypeFilter) GetNameIn() []string {
	if m != nil {
		return m.NameIn
	}
	return nil
}

func (m *CellTypeFilter) GetId() *wrappers.UInt32Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CellTypeFilter) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

type RackTypes struct {
	RackTypes            []*RackType `protobuf:"bytes,1,rep,name=rackTypes,proto3" json:"rackTypes,omitempty"`
	Totalpages           uint32      `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Currpages            uint32      `protobuf:"varint,3,opt,name=currpages,proto3" json:"currpages,omitempty"`
	Totals               uint32      `protobuf:"varint,4,opt,name=totals,proto3" json:"totals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RackTypes) Reset()         { *m = RackTypes{} }
func (m *RackTypes) String() string { return proto.CompactTextString(m) }
func (*RackTypes) ProtoMessage()    {}
func (*RackTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{13}
}

func (m *RackTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackTypes.Unmarshal(m, b)
}
func (m *RackTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackTypes.Marshal(b, m, deterministic)
}
func (m *RackTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackTypes.Merge(m, src)
}
func (m *RackTypes) XXX_Size() int {
	return xxx_messageInfo_RackTypes.Size(m)
}
func (m *RackTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_RackTypes.DiscardUnknown(m)
}

var xxx_messageInfo_RackTypes proto.InternalMessageInfo

func (m *RackTypes) GetRackTypes() []*RackType {
	if m != nil {
		return m.RackTypes
	}
	return nil
}

func (m *RackTypes) GetTotalpages() uint32 {
	if m != nil {
		return m.Totalpages
	}
	return 0
}

func (m *RackTypes) GetCurrpages() uint32 {
	if m != nil {
		return m.Currpages
	}
	return 0
}

func (m *RackTypes) GetTotals() uint32 {
	if m != nil {
		return m.Totals
	}
	return 0
}

type CellTypes struct {
	CellTypes            []*CellType `protobuf:"bytes,1,rep,name=cellTypes,proto3" json:"cellTypes,omitempty"`
	Totalpages           uint32      `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Currpages            uint32      `protobuf:"varint,3,opt,name=currpages,proto3" json:"currpages,omitempty"`
	Totals               uint32      `protobuf:"varint,4,opt,name=totals,proto3" json:"totals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CellTypes) Reset()         { *m = CellTypes{} }
func (m *CellTypes) String() string { return proto.CompactTextString(m) }
func (*CellTypes) ProtoMessage()    {}
func (*CellTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_38278f44396eae42, []int{14}
}

func (m *CellTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CellTypes.Unmarshal(m, b)
}
func (m *CellTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CellTypes.Marshal(b, m, deterministic)
}
func (m *CellTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CellTypes.Merge(m, src)
}
func (m *CellTypes) XXX_Size() int {
	return xxx_messageInfo_CellTypes.Size(m)
}
func (m *CellTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_CellTypes.DiscardUnknown(m)
}

var xxx_messageInfo_CellTypes proto.InternalMessageInfo

func (m *CellTypes) GetCellTypes() []*CellType {
	if m != nil {
		return m.CellTypes
	}
	return nil
}

func (m *CellTypes) GetTotalpages() uint32 {
	if m != nil {
		return m.Totalpages
	}
	return 0
}

func (m *CellTypes) GetCurrpages() uint32 {
	if m != nil {
		return m.Currpages
	}
	return 0
}

func (m *CellTypes) GetTotals() uint32 {
	if m != nil {
		return m.Totals
	}
	return 0
}

func init() {
	proto.RegisterType((*RackType)(nil), "go.micro.srv.racktype.RackType")
	proto.RegisterType((*RackCell)(nil), "go.micro.srv.racktype.RackCell")
	proto.RegisterType((*CellType)(nil), "go.micro.srv.racktype.CellType")
	proto.RegisterMapType((map[string]string)(nil), "go.micro.srv.racktype.CellType.PropertiesEntry")
	proto.RegisterType((*UpdateRackTypeReq)(nil), "go.micro.srv.racktype.UpdateRackTypeReq")
	proto.RegisterType((*UpdateRackType)(nil), "go.micro.srv.racktype.UpdateRackType")
	proto.RegisterType((*UpdateCellTypeReq)(nil), "go.micro.srv.racktype.UpdateCellTypeReq")
	proto.RegisterType((*UpdateCellType)(nil), "go.micro.srv.racktype.UpdateCellType")
	proto.RegisterMapType((map[string]string)(nil), "go.micro.srv.racktype.UpdateCellType.PropertiesEntry")
	proto.RegisterType((*IDReq)(nil), "go.micro.srv.racktype.IDReq")
	proto.RegisterType((*Response)(nil), "go.micro.srv.racktype.Response")
	proto.RegisterType((*RackTypeQuery)(nil), "go.micro.srv.racktype.RackTypeQuery")
	proto.RegisterType((*CellTypeQuery)(nil), "go.micro.srv.racktype.CellTypeQuery")
	proto.RegisterType((*RackTypeFilter)(nil), "go.micro.srv.racktype.RackTypeFilter")
	proto.RegisterType((*CellTypeFilter)(nil), "go.micro.srv.racktype.CellTypeFilter")
	proto.RegisterType((*RackTypes)(nil), "go.micro.srv.racktype.RackTypes")
	proto.RegisterType((*CellTypes)(nil), "go.micro.srv.racktype.CellTypes")
}

func init() { proto.RegisterFile("proto/racktype/racktype.proto", fileDescriptor_38278f44396eae42) }

var fileDescriptor_38278f44396eae42 = []byte{
	// 972 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x56, 0x9c, 0x26, 0x9b, 0x9c, 0x6c, 0xb3, 0x30, 0xe2, 0xc7, 0x8a, 0xca, 0x6e, 0x14, 0xed,
	0xa2, 0x5c, 0x20, 0x17, 0x65, 0x5b, 0x81, 0x90, 0x8a, 0x04, 0x5b, 0x40, 0x95, 0x90, 0x5a, 0x5c,
	0xda, 0x1b, 0xae, 0x5c, 0x7b, 0xe2, 0x8e, 0xea, 0x7a, 0xcc, 0x78, 0xd2, 0x2a, 0xef, 0xc0, 0x23,
	0x70, 0x81, 0xc4, 0x1d, 0x12, 0xef, 0xc0, 0x7b, 0xf0, 0x32, 0x68, 0x7e, 0x63, 0x3b, 0xed, 0xda,
	0xa5, 0xec, 0xaa, 0x12, 0x77, 0x73, 0xc6, 0xe7, 0x3b, 0x3e, 0xe7, 0x3b, 0xdf, 0x9c, 0x19, 0xf8,
	0x28, 0x63, 0x94, 0xd3, 0x6d, 0x16, 0x84, 0x17, 0x7c, 0x99, 0x61, 0xbb, 0xf0, 0xe4, 0x3e, 0x7a,
	0x3f, 0xa6, 0xde, 0x25, 0x09, 0x19, 0xf5, 0x72, 0x76, 0xe5, 0x99, 0x8f, 0xa3, 0xa7, 0x31, 0xa5,
	0x71, 0x82, 0xb7, 0xa5, 0xd3, 0xd9, 0x62, 0xbe, 0x7d, 0xcd, 0x82, 0x2c, 0xc3, 0x2c, 0x57, 0xb0,
	0xc9, 0x9f, 0x0e, 0xf4, 0xfc, 0x20, 0xbc, 0xf8, 0x71, 0x99, 0x61, 0x34, 0x04, 0x87, 0x44, 0x6e,
	0x6b, 0xdc, 0x9a, 0x6e, 0xfa, 0x0e, 0x89, 0x10, 0x82, 0x8d, 0x34, 0xb8, 0xc4, 0xae, 0x33, 0x6e,
	0x4d, 0xfb, 0xbe, 0x5c, 0xa3, 0x0f, 0xa0, 0x9b, 0xe0, 0x34, 0xe6, 0xe7, 0xee, 0x86, 0xf4, 0xd3,
	0x16, 0x7a, 0x0f, 0x3a, 0xd7, 0x24, 0xe2, 0xe7, 0x6e, 0x47, 0x6e, 0x2b, 0x43, 0x78, 0x9f, 0x63,
	0x12, 0x9f, 0x73, 0xb7, 0xab, 0xbc, 0x95, 0x25, 0xa3, 0x04, 0x4b, 0xcc, 0x72, 0xf7, 0x91, 0x8e,
	0x22, 0x2d, 0xf4, 0x31, 0x0c, 0x33, 0x12, 0x5e, 0x90, 0x34, 0x3e, 0x5e, 0xb0, 0x79, 0x10, 0x62,
	0xb7, 0x2f, 0xbf, 0x57, 0x76, 0xd1, 0x18, 0x06, 0x11, 0xce, 0x43, 0x46, 0x32, 0x4e, 0x68, 0xea,
	0x82, 0x4c, 0xb0, 0xb8, 0x85, 0x76, 0xa1, 0x13, 0xe2, 0x24, 0xc9, 0xdd, 0xc7, 0xe3, 0xf6, 0x74,
	0x30, 0x7b, 0xe6, 0xdd, 0xc8, 0x8f, 0x27, 0x6a, 0x7f, 0x85, 0x93, 0xc4, 0x57, 0xde, 0xe8, 0x29,
	0x80, 0x58, 0x1c, 0xaa, 0xb8, 0x9b, 0x32, 0x6e, 0x61, 0x67, 0x72, 0xa4, 0xe8, 0x12, 0x10, 0x34,
	0x82, 0x9e, 0xf8, 0x22, 0xa8, 0xd3, 0xa4, 0x59, 0x1b, 0xbd, 0x03, 0x6d, 0x46, 0xaf, 0x25, 0x73,
	0x9b, 0xbe, 0x58, 0x8a, 0x92, 0x43, 0x9a, 0x2c, 0x2e, 0x53, 0xb7, 0xad, 0x4a, 0x56, 0xd6, 0xe4,
	0x2f, 0x07, 0x7a, 0xaf, 0x0c, 0xec, 0xed, 0x75, 0xa0, 0xc2, 0x60, 0x6f, 0x9d, 0x41, 0x17, 0x1e,
	0x91, 0xfc, 0x34, 0x48, 0x48, 0x24, 0x9b, 0xd0, 0xf3, 0x8d, 0x89, 0x0e, 0x01, 0x32, 0x46, 0x33,
	0xcc, 0x38, 0xc1, 0xb9, 0x0b, 0x92, 0xe0, 0xed, 0x5b, 0x08, 0x36, 0xa5, 0x79, 0x47, 0x16, 0xf1,
	0x4d, 0xca, 0xd9, 0xd2, 0x2f, 0x84, 0x18, 0xed, 0xc1, 0x93, 0xca, 0x67, 0x41, 0xe0, 0x05, 0x5e,
	0x4a, 0x2a, 0xfa, 0xbe, 0x58, 0x8a, 0xfa, 0xae, 0x82, 0x64, 0x61, 0xc8, 0x50, 0xc6, 0x17, 0xce,
	0xe7, 0xad, 0xc9, 0x19, 0xbc, 0x7b, 0x92, 0x45, 0x01, 0xc7, 0x46, 0xc9, 0x3e, 0xfe, 0x79, 0x8d,
	0xca, 0x3d, 0xe8, 0x2e, 0xa4, 0x93, 0xc4, 0x0f, 0x66, 0x2f, 0x6e, 0x49, 0xb8, 0x12, 0x49, 0x83,
	0x26, 0xbf, 0x6f, 0xc0, 0xb0, 0xfc, 0x09, 0x7d, 0x62, 0xff, 0x30, 0x98, 0x6d, 0x79, 0xea, 0xa0,
	0x79, 0xe6, 0xa0, 0x79, 0x27, 0x07, 0x29, 0x7f, 0x39, 0x3b, 0x15, 0x49, 0xca, 0xff, 0x7f, 0x5a,
	0x68, 0xe5, 0x4d, 0xfe, 0xc7, 0x9c, 0x91, 0x34, 0x56, 0xfe, 0xaa, 0xd1, 0x3b, 0xa5, 0x46, 0xd7,
	0xfd, 0xc3, 0xc8, 0x60, 0x56, 0x94, 0x41, 0x1d, 0x48, 0x8b, 0x64, 0xa7, 0x24, 0x92, 0xda, 0x3f,
	0x69, 0x09, 0xed, 0x94, 0x0e, 0x71, 0x7d, 0x7e, 0xea, 0x88, 0xef, 0xaf, 0x1d, 0xf1, 0x5e, 0x03,
	0x74, 0x75, 0x00, 0x7c, 0x59, 0x96, 0x6f, 0xbf, 0x01, 0xa9, 0x6f, 0x63, 0x3c, 0x58, 0x25, 0x1a,
	0xd9, 0xdf, 0x5f, 0x89, 0x36, 0x92, 0x51, 0xe2, 0xaf, 0x56, 0x89, 0x76, 0x6c, 0xfc, 0xdf, 0x95,
	0x78, 0x5f, 0x35, 0xec, 0xac, 0x46, 0x1d, 0x48, 0xec, 0x68, 0x0d, 0xfb, 0x35, 0xa5, 0x89, 0x42,
	0xda, 0x31, 0x78, 0x52, 0x1a, 0x83, 0x03, 0x29, 0xa4, 0xdd, 0x46, 0xbd, 0x7c, 0x93, 0xc3, 0xf0,
	0x43, 0xe8, 0x1c, 0xec, 0xdf, 0x20, 0xbb, 0x09, 0x40, 0xcf, 0xc7, 0x79, 0x46, 0xd3, 0x1c, 0x4f,
	0xfe, 0x68, 0xc1, 0xa6, 0x99, 0x63, 0x3f, 0x2c, 0x30, 0x93, 0x01, 0x13, 0x72, 0x49, 0xb8, 0x06,
	0x28, 0x43, 0xdc, 0x1e, 0x74, 0x3e, 0xcf, 0x31, 0xd7, 0x37, 0x99, 0xb6, 0xc4, 0xbd, 0x94, 0x05,
	0x31, 0xd6, 0x57, 0x99, 0x5c, 0x8b, 0xfb, 0x22, 0xc3, 0xec, 0x48, 0x6c, 0xab, 0x8b, 0xc9, 0x98,
	0x42, 0xf0, 0x73, 0x92, 0x70, 0xcc, 0xf4, 0xa0, 0x78, 0xf1, 0x9a, 0xd3, 0x26, 0x32, 0xfa, 0x56,
	0x3a, 0xfb, 0x1a, 0x24, 0x93, 0x35, 0xcc, 0x3d, 0x9c, 0x64, 0x4d, 0x46, 0x95, 0x64, 0x7f, 0x71,
	0x60, 0x58, 0xae, 0x03, 0x7d, 0x06, 0xed, 0x20, 0x15, 0x9d, 0x68, 0x37, 0xaf, 0x5d, 0x20, 0xd0,
	0x2e, 0x38, 0x94, 0xb9, 0xce, 0x5d, 0x70, 0x0e, 0x65, 0xa2, 0x5e, 0x12, 0x1d, 0x88, 0x77, 0x46,
	0x5b, 0xd4, 0x2b, 0xd6, 0x82, 0x1b, 0x71, 0x92, 0x0f, 0x52, 0x77, 0x63, 0xdc, 0x9e, 0xf6, 0x7d,
	0x6d, 0xe9, 0xc9, 0xd1, 0xb9, 0xe3, 0xe4, 0xe8, 0x36, 0x9d, 0x1c, 0x92, 0x8e, 0x32, 0x53, 0xcd,
	0xe8, 0xa8, 0xb0, 0xdb, 0x98, 0x8e, 0x0a, 0xee, 0xa1, 0xd1, 0xf1, 0x5b, 0x0b, 0xfa, 0xa6, 0x63,
	0x39, 0xda, 0x83, 0x3e, 0x33, 0x86, 0xe6, 0xe3, 0x59, 0x4d, 0x9b, 0xfd, 0x15, 0x42, 0x5c, 0x46,
	0x9c, 0xf2, 0x20, 0x11, 0x82, 0xce, 0xb5, 0xe6, 0x0b, 0x3b, 0x68, 0x0b, 0xfa, 0xe1, 0x82, 0x31,
	0xf5, 0x59, 0x89, 0x7f, 0xb5, 0x21, 0x28, 0x90, 0xbe, 0xb9, 0x79, 0x46, 0x2a, 0x4b, 0xa6, 0x68,
	0x58, 0x94, 0x29, 0x9a, 0x37, 0x6d, 0x5d, 0x8a, 0xf6, 0xa2, 0x5a, 0x21, 0xde, 0x4c, 0x8a, 0xb3,
	0xbf, 0xbb, 0xf0, 0xc4, 0x10, 0x72, 0x8c, 0xd9, 0x15, 0x09, 0x31, 0x3a, 0x84, 0xc1, 0x57, 0x51,
	0x64, 0xdf, 0x66, 0x75, 0x3c, 0x8e, 0x6e, 0x75, 0xd0, 0x23, 0x12, 0x1d, 0xc2, 0x70, 0x1f, 0x27,
	0xb8, 0xf0, 0xde, 0xdb, 0xba, 0x05, 0x22, 0xc7, 0x6d, 0x7d, 0xc0, 0x9f, 0xd6, 0x1e, 0x90, 0xd3,
	0x66, 0x4f, 0xd0, 0x26, 0xc1, 0x4f, 0xe1, 0xf1, 0x77, 0x98, 0xaf, 0xa4, 0xf5, 0xbc, 0xa6, 0x7e,
	0x39, 0x47, 0x47, 0xe3, 0x1a, 0xaf, 0x1c, 0x7d, 0x0f, 0x83, 0x42, 0xdc, 0x7f, 0x4b, 0x81, 0x81,
	0xab, 0x26, 0xd9, 0x67, 0x4b, 0x9d, 0x92, 0xee, 0xd0, 0x24, 0x1b, 0xf3, 0xbf, 0x6a, 0x92, 0x0d,
	0x38, 0x6d, 0xf6, 0x3a, 0x6b, 0x12, 0x5c, 0x91, 0x79, 0xcf, 0x54, 0x2d, 0x5c, 0xb5, 0x7c, 0x75,
	0x54, 0x9f, 0xd7, 0x00, 0x5e, 0xdf, 0x72, 0x1b, 0xe7, 0xac, 0x2b, 0xe7, 0xd7, 0xcb, 0x7f, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x4d, 0x1b, 0x47, 0x12, 0x71, 0x10, 0x00, 0x00,
}
