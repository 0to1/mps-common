// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: proto/area/area.proto

package go_micro_srv_area

import (
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{0}
}

func (x *LogResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Loglevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *Loglevel) Reset() {
	*x = Loglevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Loglevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Loglevel) ProtoMessage() {}

func (x *Loglevel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Loglevel.ProtoReflect.Descriptor instead.
func (*Loglevel) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{1}
}

func (x *Loglevel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Loglevel) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type LogLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogLevelRequest) Reset() {
	*x = LogLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLevelRequest) ProtoMessage() {}

func (x *LogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLevelRequest.ProtoReflect.Descriptor instead.
func (*LogLevelRequest) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{2}
}

type AreaType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Properties  string `protobuf:"bytes,4,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *AreaType) Reset() {
	*x = AreaType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaType) ProtoMessage() {}

func (x *AreaType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaType.ProtoReflect.Descriptor instead.
func (*AreaType) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{3}
}

func (x *AreaType) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AreaType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AreaType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AreaType) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type UpdateAreaType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Properties  string                `protobuf:"bytes,4,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *UpdateAreaType) Reset() {
	*x = UpdateAreaType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAreaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAreaType) ProtoMessage() {}

func (x *UpdateAreaType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAreaType.ProtoReflect.Descriptor instead.
func (*UpdateAreaType) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAreaType) GetId() *wrappers.UInt32Value {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateAreaType) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateAreaType) GetDescription() *wrappers.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *UpdateAreaType) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type AreaTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaTypes  []*AreaType `protobuf:"bytes,1,rep,name=areaTypes,proto3" json:"areaTypes,omitempty"`
	Totalpages uint32      `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Currpages  uint32      `protobuf:"varint,3,opt,name=currpages,proto3" json:"currpages,omitempty"`
	Totals     uint32      `protobuf:"varint,4,opt,name=totals,proto3" json:"totals,omitempty"`
}

func (x *AreaTypes) Reset() {
	*x = AreaTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaTypes) ProtoMessage() {}

func (x *AreaTypes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaTypes.ProtoReflect.Descriptor instead.
func (*AreaTypes) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{5}
}

func (x *AreaTypes) GetAreaTypes() []*AreaType {
	if x != nil {
		return x.AreaTypes
	}
	return nil
}

func (x *AreaTypes) GetTotalpages() uint32 {
	if x != nil {
		return x.Totalpages
	}
	return 0
}

func (x *AreaTypes) GetCurrpages() uint32 {
	if x != nil {
		return x.Currpages
	}
	return 0
}

func (x *AreaTypes) GetTotals() uint32 {
	if x != nil {
		return x.Totals
	}
	return 0
}

type Area struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区域ID
	Id uint32 `protobuf:"varint,20,opt,name=id,proto3" json:"id,omitempty"`
	// 父级区域ID
	ParentAreaID uint32 `protobuf:"varint,21,opt,name=parentAreaID,proto3" json:"parentAreaID,omitempty"`
	// 区域类型
	Type *AreaType `protobuf:"bytes,22,opt,name=type,proto3" json:"type,omitempty"`
	//区域的货位列表，待仔细考虑
	Racklots []uint32 `protobuf:"varint,23,rep,packed,name=racklots,proto3" json:"racklots,omitempty"`
	// 区域任务容量
	OrderCapacity uint32 `protobuf:"varint,25,opt,name=orderCapacity,proto3" json:"orderCapacity,omitempty"`
	//是否允许入库
	IsInbound bool `protobuf:"varint,28,opt,name=isInbound,proto3" json:"isInbound,omitempty"`
	//是否允许出库
	IsOutbound bool `protobuf:"varint,29,opt,name=isOutbound,proto3" json:"isOutbound,omitempty"`
	IsValid    bool `protobuf:"varint,32,opt,name=isValid,proto3" json:"isValid,omitempty"`
	// 子级区域ID
	ChildAreaIDs []uint32 `protobuf:"varint,27,rep,packed,name=childAreaIDs,proto3" json:"childAreaIDs,omitempty"`
	Properties   string   `protobuf:"bytes,31,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Area) Reset() {
	*x = Area{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Area) ProtoMessage() {}

func (x *Area) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Area.ProtoReflect.Descriptor instead.
func (*Area) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{6}
}

func (x *Area) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Area) GetParentAreaID() uint32 {
	if x != nil {
		return x.ParentAreaID
	}
	return 0
}

func (x *Area) GetType() *AreaType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Area) GetRacklots() []uint32 {
	if x != nil {
		return x.Racklots
	}
	return nil
}

func (x *Area) GetOrderCapacity() uint32 {
	if x != nil {
		return x.OrderCapacity
	}
	return 0
}

func (x *Area) GetIsInbound() bool {
	if x != nil {
		return x.IsInbound
	}
	return false
}

func (x *Area) GetIsOutbound() bool {
	if x != nil {
		return x.IsOutbound
	}
	return false
}

func (x *Area) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *Area) GetChildAreaIDs() []uint32 {
	if x != nil {
		return x.ChildAreaIDs
	}
	return nil
}

func (x *Area) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type UpdateArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 区域任务容量
	Id *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 区域任务容量
	OrderCapacity *wrappers.UInt32Value `protobuf:"bytes,25,opt,name=orderCapacity,proto3" json:"orderCapacity,omitempty"`
	//是否有效
	IsValid *wrappers.BoolValue `protobuf:"bytes,27,opt,name=isValid,proto3" json:"isValid,omitempty"`
	//是否允许入库
	IsInbound *wrappers.BoolValue `protobuf:"bytes,28,opt,name=isInbound,proto3" json:"isInbound,omitempty"`
	//是否允许出库
	IsOutbound *wrappers.BoolValue `protobuf:"bytes,29,opt,name=isOutbound,proto3" json:"isOutbound,omitempty"`
	// 父区域
	ParentAreaID *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=parentAreaID,proto3" json:"parentAreaID,omitempty"`
	// 区域类型
	Type *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	//区域的货位列表，待仔细考虑
	Racklots   []uint32 `protobuf:"varint,23,rep,packed,name=racklots,proto3" json:"racklots,omitempty"`
	Properties string   `protobuf:"bytes,31,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *UpdateArea) Reset() {
	*x = UpdateArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArea) ProtoMessage() {}

func (x *UpdateArea) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArea.ProtoReflect.Descriptor instead.
func (*UpdateArea) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateArea) GetId() *wrappers.UInt32Value {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateArea) GetOrderCapacity() *wrappers.UInt32Value {
	if x != nil {
		return x.OrderCapacity
	}
	return nil
}

func (x *UpdateArea) GetIsValid() *wrappers.BoolValue {
	if x != nil {
		return x.IsValid
	}
	return nil
}

func (x *UpdateArea) GetIsInbound() *wrappers.BoolValue {
	if x != nil {
		return x.IsInbound
	}
	return nil
}

func (x *UpdateArea) GetIsOutbound() *wrappers.BoolValue {
	if x != nil {
		return x.IsOutbound
	}
	return nil
}

func (x *UpdateArea) GetParentAreaID() *wrappers.UInt32Value {
	if x != nil {
		return x.ParentAreaID
	}
	return nil
}

func (x *UpdateArea) GetType() *wrappers.UInt32Value {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *UpdateArea) GetRacklots() []uint32 {
	if x != nil {
		return x.Racklots
	}
	return nil
}

func (x *UpdateArea) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type UpdateAreaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Area *UpdateArea `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *UpdateAreaReq) Reset() {
	*x = UpdateAreaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAreaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAreaReq) ProtoMessage() {}

func (x *UpdateAreaReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAreaReq.ProtoReflect.Descriptor instead.
func (*UpdateAreaReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAreaReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAreaReq) GetArea() *UpdateArea {
	if x != nil {
		return x.Area
	}
	return nil
}

type UpdateAreaTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Area *UpdateAreaType `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *UpdateAreaTypeReq) Reset() {
	*x = UpdateAreaTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAreaTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAreaTypeReq) ProtoMessage() {}

func (x *UpdateAreaTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAreaTypeReq.ProtoReflect.Descriptor instead.
func (*UpdateAreaTypeReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAreaTypeReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAreaTypeReq) GetArea() *UpdateAreaType {
	if x != nil {
		return x.Area
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{10}
}

type AreaIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AreaIDReq) Reset() {
	*x = AreaIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaIDReq) ProtoMessage() {}

func (x *AreaIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaIDReq.ProtoReflect.Descriptor instead.
func (*AreaIDReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{11}
}

func (x *AreaIDReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AreaFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	And           []*AreaFilter         `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	Or            []*AreaFilter         `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	IdIn          []uint32              `protobuf:"varint,3,rep,packed,name=idIn,proto3" json:"idIn,omitempty"`
	ChildAreaIDIn []uint32              `protobuf:"varint,4,rep,packed,name=childAreaIDIn,proto3" json:"childAreaIDIn,omitempty"`
	RacklotIDIn   []uint32              `protobuf:"varint,5,rep,packed,name=racklotIDIn,proto3" json:"racklotIDIn,omitempty"`
	IsInbound     *wrappers.BoolValue   `protobuf:"bytes,6,opt,name=isInbound,proto3" json:"isInbound,omitempty"`
	IsOutbound    *wrappers.BoolValue   `protobuf:"bytes,7,opt,name=isOutbound,proto3" json:"isOutbound,omitempty"`
	IsValid       *wrappers.BoolValue   `protobuf:"bytes,8,opt,name=isValid,proto3" json:"isValid,omitempty"`
	ParentAreaID  *wrappers.UInt32Value `protobuf:"bytes,9,opt,name=parentAreaID,proto3" json:"parentAreaID,omitempty"`
	Type          *AreaTypeFilter       `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	Properties    []*AreaPropertyFilter `protobuf:"bytes,12,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *AreaFilter) Reset() {
	*x = AreaFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaFilter) ProtoMessage() {}

func (x *AreaFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaFilter.ProtoReflect.Descriptor instead.
func (*AreaFilter) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{12}
}

func (x *AreaFilter) GetAnd() []*AreaFilter {
	if x != nil {
		return x.And
	}
	return nil
}

func (x *AreaFilter) GetOr() []*AreaFilter {
	if x != nil {
		return x.Or
	}
	return nil
}

func (x *AreaFilter) GetIdIn() []uint32 {
	if x != nil {
		return x.IdIn
	}
	return nil
}

func (x *AreaFilter) GetChildAreaIDIn() []uint32 {
	if x != nil {
		return x.ChildAreaIDIn
	}
	return nil
}

func (x *AreaFilter) GetRacklotIDIn() []uint32 {
	if x != nil {
		return x.RacklotIDIn
	}
	return nil
}

func (x *AreaFilter) GetIsInbound() *wrappers.BoolValue {
	if x != nil {
		return x.IsInbound
	}
	return nil
}

func (x *AreaFilter) GetIsOutbound() *wrappers.BoolValue {
	if x != nil {
		return x.IsOutbound
	}
	return nil
}

func (x *AreaFilter) GetIsValid() *wrappers.BoolValue {
	if x != nil {
		return x.IsValid
	}
	return nil
}

func (x *AreaFilter) GetParentAreaID() *wrappers.UInt32Value {
	if x != nil {
		return x.ParentAreaID
	}
	return nil
}

func (x *AreaFilter) GetType() *AreaTypeFilter {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *AreaFilter) GetProperties() []*AreaPropertyFilter {
	if x != nil {
		return x.Properties
	}
	return nil
}

type AreaTypeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	And    []*AreaTypeFilter     `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	Or     []*AreaTypeFilter     `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	IdIn   []uint32              `protobuf:"varint,3,rep,packed,name=idIn,proto3" json:"idIn,omitempty"`
	NameIn []string              `protobuf:"bytes,4,rep,name=nameIn,proto3" json:"nameIn,omitempty"`
	Id     *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Name   *wrappers.StringValue `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AreaTypeFilter) Reset() {
	*x = AreaTypeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaTypeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaTypeFilter) ProtoMessage() {}

func (x *AreaTypeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaTypeFilter.ProtoReflect.Descriptor instead.
func (*AreaTypeFilter) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{13}
}

func (x *AreaTypeFilter) GetAnd() []*AreaTypeFilter {
	if x != nil {
		return x.And
	}
	return nil
}

func (x *AreaTypeFilter) GetOr() []*AreaTypeFilter {
	if x != nil {
		return x.Or
	}
	return nil
}

func (x *AreaTypeFilter) GetIdIn() []uint32 {
	if x != nil {
		return x.IdIn
	}
	return nil
}

func (x *AreaTypeFilter) GetNameIn() []string {
	if x != nil {
		return x.NameIn
	}
	return nil
}

func (x *AreaTypeFilter) GetId() *wrappers.UInt32Value {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AreaTypeFilter) GetName() *wrappers.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

type AreaPropertyFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Type  string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *AreaPropertyFilter) Reset() {
	*x = AreaPropertyFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaPropertyFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaPropertyFilter) ProtoMessage() {}

func (x *AreaPropertyFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaPropertyFilter.ProtoReflect.Descriptor instead.
func (*AreaPropertyFilter) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{14}
}

func (x *AreaPropertyFilter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AreaPropertyFilter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AreaPropertyFilter) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type AreaQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   uint32      `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  uint32      `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Page    uint32      `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32      `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Filter  *AreaFilter `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *AreaQuery) Reset() {
	*x = AreaQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaQuery) ProtoMessage() {}

func (x *AreaQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaQuery.ProtoReflect.Descriptor instead.
func (*AreaQuery) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{15}
}

func (x *AreaQuery) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AreaQuery) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AreaQuery) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AreaQuery) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *AreaQuery) GetFilter() *AreaFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type AreaTypeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   uint32          `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  uint32          `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Page    uint32          `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint32          `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Filter  *AreaTypeFilter `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *AreaTypeQuery) Reset() {
	*x = AreaTypeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaTypeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaTypeQuery) ProtoMessage() {}

func (x *AreaTypeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaTypeQuery.ProtoReflect.Descriptor instead.
func (*AreaTypeQuery) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{16}
}

func (x *AreaTypeQuery) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AreaTypeQuery) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AreaTypeQuery) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AreaTypeQuery) GetPerPage() uint32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *AreaTypeQuery) GetFilter() *AreaTypeFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type Areas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Areas      []*Area `protobuf:"bytes,1,rep,name=areas,proto3" json:"areas,omitempty"`
	Totalpages uint32  `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Currpages  uint32  `protobuf:"varint,3,opt,name=currpages,proto3" json:"currpages,omitempty"`
	Totals     uint32  `protobuf:"varint,4,opt,name=totals,proto3" json:"totals,omitempty"`
}

func (x *Areas) Reset() {
	*x = Areas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Areas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Areas) ProtoMessage() {}

func (x *Areas) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Areas.ProtoReflect.Descriptor instead.
func (*Areas) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{17}
}

func (x *Areas) GetAreas() []*Area {
	if x != nil {
		return x.Areas
	}
	return nil
}

func (x *Areas) GetTotalpages() uint32 {
	if x != nil {
		return x.Totalpages
	}
	return 0
}

func (x *Areas) GetCurrpages() uint32 {
	if x != nil {
		return x.Currpages
	}
	return 0
}

func (x *Areas) GetTotals() uint32 {
	if x != nil {
		return x.Totals
	}
	return 0
}

type TypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type int32  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TypeReq) Reset() {
	*x = TypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeReq) ProtoMessage() {}

func (x *TypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeReq.ProtoReflect.Descriptor instead.
func (*TypeReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{18}
}

func (x *TypeReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TypeReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TypeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FlagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Flag bool   `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
}

func (x *FlagReq) Reset() {
	*x = FlagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagReq) ProtoMessage() {}

func (x *FlagReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagReq.ProtoReflect.Descriptor instead.
func (*FlagReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{19}
}

func (x *FlagReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlagReq) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

type CapReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cap uint32 `protobuf:"varint,2,opt,name=cap,proto3" json:"cap,omitempty"`
}

func (x *CapReq) Reset() {
	*x = CapReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapReq) ProtoMessage() {}

func (x *CapReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapReq.ProtoReflect.Descriptor instead.
func (*CapReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{20}
}

func (x *CapReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CapReq) GetCap() uint32 {
	if x != nil {
		return x.Cap
	}
	return 0
}

type RacklotsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Racklots []uint32 `protobuf:"varint,2,rep,packed,name=racklots,proto3" json:"racklots,omitempty"`
}

func (x *RacklotsReq) Reset() {
	*x = RacklotsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RacklotsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RacklotsReq) ProtoMessage() {}

func (x *RacklotsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RacklotsReq.ProtoReflect.Descriptor instead.
func (*RacklotsReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{21}
}

func (x *RacklotsReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RacklotsReq) GetRacklots() []uint32 {
	if x != nil {
		return x.Racklots
	}
	return nil
}

type TaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskID uint32 `protobuf:"varint,2,opt,name=taskID,proto3" json:"taskID,omitempty"`
}

func (x *TaskReq) Reset() {
	*x = TaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskReq) ProtoMessage() {}

func (x *TaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskReq.ProtoReflect.Descriptor instead.
func (*TaskReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{22}
}

func (x *TaskReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskReq) GetTaskID() uint32 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type PropertiesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Properties string `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *PropertiesReq) Reset() {
	*x = PropertiesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertiesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertiesReq) ProtoMessage() {}

func (x *PropertiesReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertiesReq.ProtoReflect.Descriptor instead.
func (*PropertiesReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{23}
}

func (x *PropertiesReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PropertiesReq) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Type  string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{24}
}

func (x *Property) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Property) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Property) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ParentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentAreaID uint32 `protobuf:"varint,2,opt,name=parentAreaID,proto3" json:"parentAreaID,omitempty"`
}

func (x *ParentReq) Reset() {
	*x = ParentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentReq) ProtoMessage() {}

func (x *ParentReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentReq.ProtoReflect.Descriptor instead.
func (*ParentReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{25}
}

func (x *ParentReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ParentReq) GetParentAreaID() uint32 {
	if x != nil {
		return x.ParentAreaID
	}
	return 0
}

type ChildsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChildAreaIDs []uint32 `protobuf:"varint,2,rep,packed,name=childAreaIDs,proto3" json:"childAreaIDs,omitempty"`
}

func (x *ChildsReq) Reset() {
	*x = ChildsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_area_area_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildsReq) ProtoMessage() {}

func (x *ChildsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_area_area_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildsReq.ProtoReflect.Descriptor instead.
func (*ChildsReq) Descriptor() ([]byte, []int) {
	return file_proto_area_area_proto_rawDescGZIP(), []int{26}
}

func (x *ChildsReq) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChildsReq) GetChildAreaIDs() []uint32 {
	if x != nil {
		return x.ChildAreaIDs
	}
	return nil
}

var File_proto_area_area_proto protoreflect.FileDescriptor

var file_proto_area_area_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x72, 0x65, 0x61, 0x2f, 0x61, 0x72, 0x65,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x0b, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a,
	0x08, 0x4c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x09,
	0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x72, 0x65,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61,
	0x2e, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x72, 0x65, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x22, 0xc9, 0x02, 0x0a, 0x04, 0x41,
	0x72, 0x65, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x63, 0x6b,
	0x6c, 0x6f, 0x74, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x61, 0x63, 0x6b,
	0x6c, 0x6f, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4f, 0x75,
	0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x44, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xda, 0x03, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x69, 0x73, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x69, 0x73,
	0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x69, 0x73, 0x4f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x63, 0x6b, 0x6c,
	0x6f, 0x74, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x61, 0x63, 0x6b, 0x6c,
	0x6f, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65,
	0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72,
	0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65,
	0x61, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x5a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1b, 0x0a, 0x09, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb4, 0x04, 0x0a,
	0x0a, 0x41, 0x72, 0x65, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x03, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65,
	0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x03, 0x61, 0x6e, 0x64, 0x12, 0x2d, 0x0a, 0x02,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65,
	0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x02, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x64, 0x49, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x69, 0x64, 0x49, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x49, 0x6e,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x74,
	0x49, 0x44, 0x49, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x61, 0x63, 0x6b,
	0x6c, 0x6f, 0x74, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x69, 0x73, 0x49, 0x6e, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x69, 0x73, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x34, 0x0a,
	0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65,
	0x61, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x84, 0x02, 0x0a, 0x0e, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x03, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x03, 0x61, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x02, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x02, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x64, 0x49, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x69, 0x64,
	0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x12, 0x41, 0x72,
	0x65, 0x61, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9e, 0x01, 0x0a,
	0x09, 0x41, 0x72, 0x65, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa6, 0x01,
	0x0a, 0x0d, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e,
	0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x05, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x12, 0x2d, 0x0a, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61,
	0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x05, 0x61, 0x72, 0x65, 0x61, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x72, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x73, 0x22, 0x41, 0x0a, 0x07, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x07, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x22, 0x2a, 0x0a, 0x06, 0x43, 0x61, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x63, 0x61, 0x70, 0x22, 0x39, 0x0a, 0x0b, 0x52, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x31,
	0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x22, 0x3f, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x46, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x09, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x22, 0x3f, 0x0a, 0x09, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x73, 0x32, 0xac, 0x0c, 0x0a,
	0x0b, 0x41, 0x72, 0x65, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x12, 0x42,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x72, 0x65, 0x61, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41,
	0x72, 0x65, 0x61, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x18, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65,
	0x61, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x41, 0x72, 0x65, 0x61, 0x12, 0x17, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65,
	0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65,
	0x61, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1c,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72,
	0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67,
	0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72,
	0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x6f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e,
	0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1b,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72,
	0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65,
	0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72,
	0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x1a,
	0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61,
	0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x52, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e,
	0x52, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52,
	0x61, 0x63, 0x6b, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x41, 0x72, 0x65, 0x61, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x19, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x43, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72,
	0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65,
	0x61, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76,
	0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x08, 0x53, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x1a, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x41, 0x72, 0x65, 0x61, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72,
	0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72,
	0x65, 0x61, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72,
	0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x4c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x4a, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72,
	0x65, 0x61, 0x2e, 0x4c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x1e, 0x2e, 0x67, 0x6f,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x61, 0x72, 0x65, 0x61, 0x2e,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1e, 0x5a, 0x1c, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x72, 0x65, 0x61, 0x3b, 0x67, 0x6f, 0x5f, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_area_area_proto_rawDescOnce sync.Once
	file_proto_area_area_proto_rawDescData = file_proto_area_area_proto_rawDesc
)

func file_proto_area_area_proto_rawDescGZIP() []byte {
	file_proto_area_area_proto_rawDescOnce.Do(func() {
		file_proto_area_area_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_area_area_proto_rawDescData)
	})
	return file_proto_area_area_proto_rawDescData
}

var file_proto_area_area_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_proto_area_area_proto_goTypes = []interface{}{
	(*LogResponse)(nil),          // 0: go.micro.srv.area.LogResponse
	(*Loglevel)(nil),             // 1: go.micro.srv.area.Loglevel
	(*LogLevelRequest)(nil),      // 2: go.micro.srv.area.LogLevelRequest
	(*AreaType)(nil),             // 3: go.micro.srv.area.AreaType
	(*UpdateAreaType)(nil),       // 4: go.micro.srv.area.UpdateAreaType
	(*AreaTypes)(nil),            // 5: go.micro.srv.area.AreaTypes
	(*Area)(nil),                 // 6: go.micro.srv.area.Area
	(*UpdateArea)(nil),           // 7: go.micro.srv.area.UpdateArea
	(*UpdateAreaReq)(nil),        // 8: go.micro.srv.area.UpdateAreaReq
	(*UpdateAreaTypeReq)(nil),    // 9: go.micro.srv.area.UpdateAreaTypeReq
	(*Response)(nil),             // 10: go.micro.srv.area.Response
	(*AreaIDReq)(nil),            // 11: go.micro.srv.area.AreaIDReq
	(*AreaFilter)(nil),           // 12: go.micro.srv.area.AreaFilter
	(*AreaTypeFilter)(nil),       // 13: go.micro.srv.area.AreaTypeFilter
	(*AreaPropertyFilter)(nil),   // 14: go.micro.srv.area.AreaPropertyFilter
	(*AreaQuery)(nil),            // 15: go.micro.srv.area.AreaQuery
	(*AreaTypeQuery)(nil),        // 16: go.micro.srv.area.AreaTypeQuery
	(*Areas)(nil),                // 17: go.micro.srv.area.Areas
	(*TypeReq)(nil),              // 18: go.micro.srv.area.TypeReq
	(*FlagReq)(nil),              // 19: go.micro.srv.area.FlagReq
	(*CapReq)(nil),               // 20: go.micro.srv.area.CapReq
	(*RacklotsReq)(nil),          // 21: go.micro.srv.area.RacklotsReq
	(*TaskReq)(nil),              // 22: go.micro.srv.area.TaskReq
	(*PropertiesReq)(nil),        // 23: go.micro.srv.area.PropertiesReq
	(*Property)(nil),             // 24: go.micro.srv.area.Property
	(*ParentReq)(nil),            // 25: go.micro.srv.area.ParentReq
	(*ChildsReq)(nil),            // 26: go.micro.srv.area.ChildsReq
	(*wrappers.UInt32Value)(nil), // 27: google.protobuf.UInt32Value
	(*wrappers.StringValue)(nil), // 28: google.protobuf.StringValue
	(*wrappers.BoolValue)(nil),   // 29: google.protobuf.BoolValue
}
var file_proto_area_area_proto_depIdxs = []int32{
	27, // 0: go.micro.srv.area.UpdateAreaType.id:type_name -> google.protobuf.UInt32Value
	28, // 1: go.micro.srv.area.UpdateAreaType.name:type_name -> google.protobuf.StringValue
	28, // 2: go.micro.srv.area.UpdateAreaType.description:type_name -> google.protobuf.StringValue
	3,  // 3: go.micro.srv.area.AreaTypes.areaTypes:type_name -> go.micro.srv.area.AreaType
	3,  // 4: go.micro.srv.area.Area.type:type_name -> go.micro.srv.area.AreaType
	27, // 5: go.micro.srv.area.UpdateArea.id:type_name -> google.protobuf.UInt32Value
	27, // 6: go.micro.srv.area.UpdateArea.orderCapacity:type_name -> google.protobuf.UInt32Value
	29, // 7: go.micro.srv.area.UpdateArea.isValid:type_name -> google.protobuf.BoolValue
	29, // 8: go.micro.srv.area.UpdateArea.isInbound:type_name -> google.protobuf.BoolValue
	29, // 9: go.micro.srv.area.UpdateArea.isOutbound:type_name -> google.protobuf.BoolValue
	27, // 10: go.micro.srv.area.UpdateArea.parentAreaID:type_name -> google.protobuf.UInt32Value
	27, // 11: go.micro.srv.area.UpdateArea.type:type_name -> google.protobuf.UInt32Value
	7,  // 12: go.micro.srv.area.UpdateAreaReq.area:type_name -> go.micro.srv.area.UpdateArea
	4,  // 13: go.micro.srv.area.UpdateAreaTypeReq.area:type_name -> go.micro.srv.area.UpdateAreaType
	12, // 14: go.micro.srv.area.AreaFilter.and:type_name -> go.micro.srv.area.AreaFilter
	12, // 15: go.micro.srv.area.AreaFilter.or:type_name -> go.micro.srv.area.AreaFilter
	29, // 16: go.micro.srv.area.AreaFilter.isInbound:type_name -> google.protobuf.BoolValue
	29, // 17: go.micro.srv.area.AreaFilter.isOutbound:type_name -> google.protobuf.BoolValue
	29, // 18: go.micro.srv.area.AreaFilter.isValid:type_name -> google.protobuf.BoolValue
	27, // 19: go.micro.srv.area.AreaFilter.parentAreaID:type_name -> google.protobuf.UInt32Value
	13, // 20: go.micro.srv.area.AreaFilter.type:type_name -> go.micro.srv.area.AreaTypeFilter
	14, // 21: go.micro.srv.area.AreaFilter.properties:type_name -> go.micro.srv.area.AreaPropertyFilter
	13, // 22: go.micro.srv.area.AreaTypeFilter.and:type_name -> go.micro.srv.area.AreaTypeFilter
	13, // 23: go.micro.srv.area.AreaTypeFilter.or:type_name -> go.micro.srv.area.AreaTypeFilter
	27, // 24: go.micro.srv.area.AreaTypeFilter.id:type_name -> google.protobuf.UInt32Value
	28, // 25: go.micro.srv.area.AreaTypeFilter.name:type_name -> google.protobuf.StringValue
	12, // 26: go.micro.srv.area.AreaQuery.filter:type_name -> go.micro.srv.area.AreaFilter
	13, // 27: go.micro.srv.area.AreaTypeQuery.filter:type_name -> go.micro.srv.area.AreaTypeFilter
	6,  // 28: go.micro.srv.area.Areas.areas:type_name -> go.micro.srv.area.Area
	11, // 29: go.micro.srv.area.AreaService.GetArea:input_type -> go.micro.srv.area.AreaIDReq
	15, // 30: go.micro.srv.area.AreaService.GetAreas:input_type -> go.micro.srv.area.AreaQuery
	6,  // 31: go.micro.srv.area.AreaService.AddArea:input_type -> go.micro.srv.area.Area
	8,  // 32: go.micro.srv.area.AreaService.UpdateArea:input_type -> go.micro.srv.area.UpdateAreaReq
	11, // 33: go.micro.srv.area.AreaService.DeleteArea:input_type -> go.micro.srv.area.AreaIDReq
	16, // 34: go.micro.srv.area.AreaService.GetAreaTypes:input_type -> go.micro.srv.area.AreaTypeQuery
	3,  // 35: go.micro.srv.area.AreaService.GetAreaType:input_type -> go.micro.srv.area.AreaType
	3,  // 36: go.micro.srv.area.AreaService.AddAreaType:input_type -> go.micro.srv.area.AreaType
	9,  // 37: go.micro.srv.area.AreaService.UpdateAreaType:input_type -> go.micro.srv.area.UpdateAreaTypeReq
	3,  // 38: go.micro.srv.area.AreaService.DeleteAreaType:input_type -> go.micro.srv.area.AreaType
	21, // 39: go.micro.srv.area.AreaService.AddRacklots:input_type -> go.micro.srv.area.RacklotsReq
	21, // 40: go.micro.srv.area.AreaService.DeleteRacklots:input_type -> go.micro.srv.area.RacklotsReq
	26, // 41: go.micro.srv.area.AreaService.AddChildAreas:input_type -> go.micro.srv.area.ChildsReq
	23, // 42: go.micro.srv.area.AreaService.AddProperties:input_type -> go.micro.srv.area.PropertiesReq
	20, // 43: go.micro.srv.area.AreaService.SetOrderCapacity:input_type -> go.micro.srv.area.CapReq
	19, // 44: go.micro.srv.area.AreaService.SetInbound:input_type -> go.micro.srv.area.FlagReq
	19, // 45: go.micro.srv.area.AreaService.SetOutbound:input_type -> go.micro.srv.area.FlagReq
	19, // 46: go.micro.srv.area.AreaService.SetValid:input_type -> go.micro.srv.area.FlagReq
	25, // 47: go.micro.srv.area.AreaService.SetParentArea:input_type -> go.micro.srv.area.ParentReq
	2,  // 48: go.micro.srv.area.AreaService.GetLogLevel:input_type -> go.micro.srv.area.LogLevelRequest
	1,  // 49: go.micro.srv.area.AreaService.SetLogLevel:input_type -> go.micro.srv.area.Loglevel
	6,  // 50: go.micro.srv.area.AreaService.GetArea:output_type -> go.micro.srv.area.Area
	17, // 51: go.micro.srv.area.AreaService.GetAreas:output_type -> go.micro.srv.area.Areas
	10, // 52: go.micro.srv.area.AreaService.AddArea:output_type -> go.micro.srv.area.Response
	10, // 53: go.micro.srv.area.AreaService.UpdateArea:output_type -> go.micro.srv.area.Response
	10, // 54: go.micro.srv.area.AreaService.DeleteArea:output_type -> go.micro.srv.area.Response
	5,  // 55: go.micro.srv.area.AreaService.GetAreaTypes:output_type -> go.micro.srv.area.AreaTypes
	3,  // 56: go.micro.srv.area.AreaService.GetAreaType:output_type -> go.micro.srv.area.AreaType
	10, // 57: go.micro.srv.area.AreaService.AddAreaType:output_type -> go.micro.srv.area.Response
	10, // 58: go.micro.srv.area.AreaService.UpdateAreaType:output_type -> go.micro.srv.area.Response
	10, // 59: go.micro.srv.area.AreaService.DeleteAreaType:output_type -> go.micro.srv.area.Response
	10, // 60: go.micro.srv.area.AreaService.AddRacklots:output_type -> go.micro.srv.area.Response
	10, // 61: go.micro.srv.area.AreaService.DeleteRacklots:output_type -> go.micro.srv.area.Response
	10, // 62: go.micro.srv.area.AreaService.AddChildAreas:output_type -> go.micro.srv.area.Response
	10, // 63: go.micro.srv.area.AreaService.AddProperties:output_type -> go.micro.srv.area.Response
	10, // 64: go.micro.srv.area.AreaService.SetOrderCapacity:output_type -> go.micro.srv.area.Response
	10, // 65: go.micro.srv.area.AreaService.SetInbound:output_type -> go.micro.srv.area.Response
	10, // 66: go.micro.srv.area.AreaService.SetOutbound:output_type -> go.micro.srv.area.Response
	10, // 67: go.micro.srv.area.AreaService.SetValid:output_type -> go.micro.srv.area.Response
	10, // 68: go.micro.srv.area.AreaService.SetParentArea:output_type -> go.micro.srv.area.Response
	1,  // 69: go.micro.srv.area.AreaService.GetLogLevel:output_type -> go.micro.srv.area.Loglevel
	0,  // 70: go.micro.srv.area.AreaService.SetLogLevel:output_type -> go.micro.srv.area.LogResponse
	50, // [50:71] is the sub-list for method output_type
	29, // [29:50] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_proto_area_area_proto_init() }
func file_proto_area_area_proto_init() {
	if File_proto_area_area_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_area_area_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Loglevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAreaType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Area); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAreaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAreaTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaTypeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaPropertyFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaTypeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Areas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RacklotsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertiesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_area_area_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_area_area_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_area_area_proto_goTypes,
		DependencyIndexes: file_proto_area_area_proto_depIdxs,
		MessageInfos:      file_proto_area_area_proto_msgTypes,
	}.Build()
	File_proto_area_area_proto = out.File
	file_proto_area_area_proto_rawDesc = nil
	file_proto_area_area_proto_goTypes = nil
	file_proto_area_area_proto_depIdxs = nil
}
