syntax = "proto3";

// import "google/protobuf/any.proto";
// import "google/protobuf/timestamp.proto";

// import "timestamp/timestamp.proto";
// import "any/any.proto";

package go.micro.srv.task;
import "google/protobuf/wrappers.proto";

service TaskService {
  //新任务
  rpc New(NewTaskReq) returns (Response);
  // 暂停任务
  rpc Pause(TaskID) returns (Response);
  // 取消任务
  rpc Cancel(TaskID) returns (Response);

  rpc BatchNew(NewTasksReq) returns (Response);

  rpc BatchCancel(TaskIDs) returns(Response);

  // 增加任务参数
  rpc AddParameters(Parameters) returns (Parameters);
  // 修改任务参数
  rpc ModifyParameters(Parameters) returns (Parameters);
  // 删除任务参数
  rpc DeleteParameters(ParameterKeys) returns (Parameters);

  // 根据查询条件获取任务
  rpc GetOneTask(TaskID) returns (TaskInfo);
  // 根据查询条件获取历史任务
  rpc GetOneHistory(TaskID) returns (TaskInfo);
  // 根据查询条件获取任务
  rpc GetTasks(Query) returns (TaskInfos);
  // 根据查询条件获取历史任务
  rpc GetHistories(Query) returns (TaskInfos);

  // 调用python脚本的函数
  rpc Call(CallOptions) returns (CallResponse);
  // 执行python脚本
  rpc Execute(ExecuteOptions) returns (ExecuteResponse);
}

message NewTaskReq {
  uint32 taskID = 1;
  uint32 priority = 2;
  uint32 scriptIndex = 3;
  repeated Parameter parameters = 4;
  string description = 5;
}

message NewTasksReq {
  repeated NewTaskReq tasks= 1;
}

message Response {}

message Path { string path = 1; }

message TaskID { uint32 id = 1; }

message TaskIDs {repeated  uint32 ids = 1;}

message TaskPropertiesFilter {
  string key  = 1;
  string value = 2; 
}


// id_in:[Int!]
// orderIndex:Int
// schedulerStatus:Int
// priority:Int
// scriptIndex:Int
// begin_gt:Time
// begin_lt:Time
// end_gt:Time
// end_lt:Time
// originStation:Int
// targetStation:Int
// agvID:Int
// agvInitPoint:Int
// materialIDs:Int
// errorCode:Int
// error:String

message TaskFilter {
  repeated TaskFilter and = 1;
  repeated TaskFilter or = 2;                              
  google.protobuf.Int32Value id = 3;
  repeated int32 idIn = 4;  
  google.protobuf.StringValue nameIn = 5;
  repeated string name = 6;
  google.protobuf.Int32Value orderIndex = 7;
  google.protobuf.Int32Value priority  = 8;
  google.protobuf.Int32Value scriptIndex = 9;
  google.protobuf.StringValue beginLt = 10; 
  google.protobuf.StringValue beginGt = 11;
  google.protobuf.StringValue endLt = 12; 
  google.protobuf.StringValue endGt = 13;
  google.protobuf.Int32Value originStation  = 14;
  google.protobuf.Int32Value targetStation = 15;
  google.protobuf.Int32Value agvID  = 16;
  google.protobuf.Int32Value agvInitPoint = 17;
  google.protobuf.Int64Value materialID = 18;
  google.protobuf.Int32Value errorCode = 19;
  TaskPropertiesFilter  propertiesFilter = 20;    
}

message Query {
  uint32 limit = 1;
  uint32 offset = 2;
  uint32 page = 3;
  uint32 perPage = 4;
  TaskFilter filter = 5;
}

message Parameter {
  string type = 1;  //参数类型，支持string, int, float三种类型，默认为string类型
  string key = 2;
  string value = 3;
}

message Parameters {
  uint32 taskID = 1;
  string parameters = 2;
}

message ParameterKeys {
  uint32 taskID = 1;
  repeated string keys = 2;
}

message TaskInfo {
  uint32 taskID = 1;
  uint32 orderIndex = 2;
  uint32 schedulerStatus = 3;
  uint32 type = 4;
  uint32 priority = 5;
  uint32 scriptIndex = 6;
  repeated Parameter parameters = 7;
  string beginTime = 8;
  string endTime = 9;
  uint32 originStation = 10;
  uint32 targetStation = 11;
  uint32 agvID = 12;
  uint32 agvInitPoint = 13;
  repeated uint32 materials = 14;
  string sMsgScript = 15;
  int32 errorCode = 16;
  string error = 17;
  string description = 18;
}

message TaskInfos {
  repeated TaskInfo tasks = 1;
  uint32 totalpages = 2;
  uint32 currpages = 3;
  uint32 totals = 4;
}

message CallOptions {
  string module = 1;
  string function = 2;
  repeated Parameter parameters = 3;
}

message CallResponse {
  string result = 1;
  // google.protobuf.Any result = 1;
  string errorMessage = 2;
}

message ExecuteOptions {
  uint32 taskID = 1;
  uint32 priority = 2;
  uint32 scriptIndex = 3;
  repeated Parameter parameters = 4;
  string description = 5;
}

message ExecuteResponse {
}