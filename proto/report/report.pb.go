// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.2
// source: proto/report/report.proto

// import "google/protobuf/any.proto";
// import "google/protobuf/timestamp.proto";

package go_micro_srv_report

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID    uint32 `protobuf:"varint,1,opt,name=taskID,proto3" json:"taskID,omitempty"`
	AgvID     uint32 `protobuf:"varint,2,opt,name=agvID,proto3" json:"agvID,omitempty"`
	BeginTime string `protobuf:"bytes,3,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime   string `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	DelayTime uint32 `protobuf:"varint,5,opt,name=delayTime,proto3" json:"delayTime,omitempty"`
	WorkTime  uint32 `protobuf:"varint,6,opt,name=workTime,proto3" json:"workTime,omitempty"`
	BlockTime uint32 `protobuf:"varint,7,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetTaskID() uint32 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Task) GetAgvID() uint32 {
	if x != nil {
		return x.AgvID
	}
	return 0
}

func (x *Task) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *Task) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Task) GetDelayTime() uint32 {
	if x != nil {
		return x.DelayTime
	}
	return 0
}

func (x *Task) GetWorkTime() uint32 {
	if x != nil {
		return x.WorkTime
	}
	return 0
}

func (x *Task) GetBlockTime() uint32 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

type Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialID int64  `protobuf:"varint,1,opt,name=materialID,proto3" json:"materialID,omitempty"`
	BeginTime  string `protobuf:"bytes,3,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime    string `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Properties string `protobuf:"bytes,5,opt,name=properties,proto3" json:"properties,omitempty"`
}

func (x *Material) Reset() {
	*x = Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Material) ProtoMessage() {}

func (x *Material) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Material.ProtoReflect.Descriptor instead.
func (*Material) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{1}
}

func (x *Material) GetMaterialID() int64 {
	if x != nil {
		return x.MaterialID
	}
	return 0
}

func (x *Material) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *Material) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Material) GetProperties() string {
	if x != nil {
		return x.Properties
	}
	return ""
}

type Agv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Agv) Reset() {
	*x = Agv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agv) ProtoMessage() {}

func (x *Agv) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agv.ProtoReflect.Descriptor instead.
func (*Agv) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{2}
}

type TaskReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Code      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Type      uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *TaskReportReq) Reset() {
	*x = TaskReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskReportReq) ProtoMessage() {}

func (x *TaskReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskReportReq.ProtoReflect.Descriptor instead.
func (*TaskReportReq) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{3}
}

func (x *TaskReportReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TaskReportReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TaskReportReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TaskReportReq) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ReportItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReportItem) Reset() {
	*x = ReportItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportItem) ProtoMessage() {}

func (x *ReportItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportItem.ProtoReflect.Descriptor instead.
func (*ReportItem) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{4}
}

func (x *ReportItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReportItem) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AgvReportItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*ReportItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	AgvID     uint32        `protobuf:"varint,3,opt,name=agvID,proto3" json:"agvID,omitempty"`
	MaxTime   uint32        `protobuf:"varint,6,opt,name=maxTime,proto3" json:"maxTime,omitempty"`
	MaxTimeID uint32        `protobuf:"varint,7,opt,name=maxTimeID,proto3" json:"maxTimeID,omitempty"`
	MinTime   uint32        `protobuf:"varint,8,opt,name=minTime,proto3" json:"minTime,omitempty"`
	MinTimeID uint32        `protobuf:"varint,9,opt,name=minTimeID,proto3" json:"minTimeID,omitempty"`
	AvgTime   float64       `protobuf:"fixed64,10,opt,name=avgTime,proto3" json:"avgTime,omitempty"`
}

func (x *AgvReportItem) Reset() {
	*x = AgvReportItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgvReportItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgvReportItem) ProtoMessage() {}

func (x *AgvReportItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgvReportItem.ProtoReflect.Descriptor instead.
func (*AgvReportItem) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{5}
}

func (x *AgvReportItem) GetItems() []*ReportItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AgvReportItem) GetAgvID() uint32 {
	if x != nil {
		return x.AgvID
	}
	return 0
}

func (x *AgvReportItem) GetMaxTime() uint32 {
	if x != nil {
		return x.MaxTime
	}
	return 0
}

func (x *AgvReportItem) GetMaxTimeID() uint32 {
	if x != nil {
		return x.MaxTimeID
	}
	return 0
}

func (x *AgvReportItem) GetMinTime() uint32 {
	if x != nil {
		return x.MinTime
	}
	return 0
}

func (x *AgvReportItem) GetMinTimeID() uint32 {
	if x != nil {
		return x.MinTimeID
	}
	return 0
}

func (x *AgvReportItem) GetAvgTime() float64 {
	if x != nil {
		return x.AvgTime
	}
	return 0
}

type TaskReportItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item       []*ReportItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	Tasks      []*Task       `protobuf:"bytes,11,rep,name=tasks,proto3" json:"tasks,omitempty"`
	TotalCount uint32        `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Max        uint32        `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Min        uint32        `protobuf:"varint,4,opt,name=min,proto3" json:"min,omitempty"`
	Avg        float64       `protobuf:"fixed64,5,opt,name=avg,proto3" json:"avg,omitempty"`
	MaxTime    uint32        `protobuf:"varint,6,opt,name=maxTime,proto3" json:"maxTime,omitempty"`
	MaxTimeID  uint32        `protobuf:"varint,7,opt,name=maxTimeID,proto3" json:"maxTimeID,omitempty"`
	MinTime    uint32        `protobuf:"varint,8,opt,name=minTime,proto3" json:"minTime,omitempty"`
	MinTimeID  uint32        `protobuf:"varint,9,opt,name=minTimeID,proto3" json:"minTimeID,omitempty"`
	AvgTime    float64       `protobuf:"fixed64,10,opt,name=avgTime,proto3" json:"avgTime,omitempty"`
}

func (x *TaskReportItems) Reset() {
	*x = TaskReportItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskReportItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskReportItems) ProtoMessage() {}

func (x *TaskReportItems) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskReportItems.ProtoReflect.Descriptor instead.
func (*TaskReportItems) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{6}
}

func (x *TaskReportItems) GetItem() []*ReportItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *TaskReportItems) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *TaskReportItems) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *TaskReportItems) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *TaskReportItems) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *TaskReportItems) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *TaskReportItems) GetMaxTime() uint32 {
	if x != nil {
		return x.MaxTime
	}
	return 0
}

func (x *TaskReportItems) GetMaxTimeID() uint32 {
	if x != nil {
		return x.MaxTimeID
	}
	return 0
}

func (x *TaskReportItems) GetMinTime() uint32 {
	if x != nil {
		return x.MinTime
	}
	return 0
}

func (x *TaskReportItems) GetMinTimeID() uint32 {
	if x != nil {
		return x.MinTimeID
	}
	return 0
}

func (x *TaskReportItems) GetAvgTime() float64 {
	if x != nil {
		return x.AvgTime
	}
	return 0
}

type MaterialReportItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item       []*ReportItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	Materials  []*Material   `protobuf:"bytes,11,rep,name=materials,proto3" json:"materials,omitempty"`
	TotalCount uint32        `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Max        uint32        `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Min        uint32        `protobuf:"varint,4,opt,name=min,proto3" json:"min,omitempty"`
	Avg        float64       `protobuf:"fixed64,5,opt,name=avg,proto3" json:"avg,omitempty"`
}

func (x *MaterialReportItems) Reset() {
	*x = MaterialReportItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialReportItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialReportItems) ProtoMessage() {}

func (x *MaterialReportItems) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialReportItems.ProtoReflect.Descriptor instead.
func (*MaterialReportItems) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{7}
}

func (x *MaterialReportItems) GetItem() []*ReportItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *MaterialReportItems) GetMaterials() []*Material {
	if x != nil {
		return x.Materials
	}
	return nil
}

func (x *MaterialReportItems) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *MaterialReportItems) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *MaterialReportItems) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *MaterialReportItems) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

type AgvTaskReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string   `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string   `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Code      string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	AgvIDs    []uint32 `protobuf:"varint,4,rep,packed,name=agvIDs,proto3" json:"agvIDs,omitempty"`
}

func (x *AgvTaskReportReq) Reset() {
	*x = AgvTaskReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgvTaskReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgvTaskReportReq) ProtoMessage() {}

func (x *AgvTaskReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgvTaskReportReq.ProtoReflect.Descriptor instead.
func (*AgvTaskReportReq) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{8}
}

func (x *AgvTaskReportReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AgvTaskReportReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AgvTaskReportReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AgvTaskReportReq) GetAgvIDs() []uint32 {
	if x != nil {
		return x.AgvIDs
	}
	return nil
}

type AgvTaskReportItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*AgvReportItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount uint32           `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Max        uint32           `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Min        uint32           `protobuf:"varint,4,opt,name=min,proto3" json:"min,omitempty"`
	Avg        float64          `protobuf:"fixed64,5,opt,name=avg,proto3" json:"avg,omitempty"`
}

func (x *AgvTaskReportItems) Reset() {
	*x = AgvTaskReportItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgvTaskReportItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgvTaskReportItems) ProtoMessage() {}

func (x *AgvTaskReportItems) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgvTaskReportItems.ProtoReflect.Descriptor instead.
func (*AgvTaskReportItems) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{9}
}

func (x *AgvTaskReportItems) GetItems() []*AgvReportItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AgvTaskReportItems) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AgvTaskReportItems) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *AgvTaskReportItems) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *AgvTaskReportItems) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

type MaterialReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Code      string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Type      uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *MaterialReportReq) Reset() {
	*x = MaterialReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialReportReq) ProtoMessage() {}

func (x *MaterialReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialReportReq.ProtoReflect.Descriptor instead.
func (*MaterialReportReq) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{10}
}

func (x *MaterialReportReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *MaterialReportReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *MaterialReportReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MaterialReportReq) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type TaskTimeReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *TaskTimeReportReq) Reset() {
	*x = TaskTimeReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskTimeReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTimeReportReq) ProtoMessage() {}

func (x *TaskTimeReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTimeReportReq.ProtoReflect.Descriptor instead.
func (*TaskTimeReportReq) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{11}
}

func (x *TaskTimeReportReq) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TaskTimeReportReq) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type TimeReportItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items     []*AgvTimeReportItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	MaxTime   uint32               `protobuf:"varint,6,opt,name=maxTime,proto3" json:"maxTime,omitempty"`
	MaxTimeID uint32               `protobuf:"varint,7,opt,name=maxTimeID,proto3" json:"maxTimeID,omitempty"`
	MinTime   uint32               `protobuf:"varint,8,opt,name=minTime,proto3" json:"minTime,omitempty"`
	MinTimeID uint32               `protobuf:"varint,9,opt,name=minTimeID,proto3" json:"minTimeID,omitempty"`
	AvgTime   float64              `protobuf:"fixed64,10,opt,name=avgTime,proto3" json:"avgTime,omitempty"`
}

func (x *TimeReportItems) Reset() {
	*x = TimeReportItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeReportItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeReportItems) ProtoMessage() {}

func (x *TimeReportItems) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeReportItems.ProtoReflect.Descriptor instead.
func (*TimeReportItems) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{12}
}

func (x *TimeReportItems) GetItems() []*AgvTimeReportItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *TimeReportItems) GetMaxTime() uint32 {
	if x != nil {
		return x.MaxTime
	}
	return 0
}

func (x *TimeReportItems) GetMaxTimeID() uint32 {
	if x != nil {
		return x.MaxTimeID
	}
	return 0
}

func (x *TimeReportItems) GetMinTime() uint32 {
	if x != nil {
		return x.MinTime
	}
	return 0
}

func (x *TimeReportItems) GetMinTimeID() uint32 {
	if x != nil {
		return x.MinTimeID
	}
	return 0
}

func (x *TimeReportItems) GetAvgTime() float64 {
	if x != nil {
		return x.AvgTime
	}
	return 0
}

type AgvTimeReportItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgvID     uint32  `protobuf:"varint,3,opt,name=agvID,proto3" json:"agvID,omitempty"`
	MaxTime   uint32  `protobuf:"varint,6,opt,name=maxTime,proto3" json:"maxTime,omitempty"`
	MaxTimeID uint32  `protobuf:"varint,7,opt,name=maxTimeID,proto3" json:"maxTimeID,omitempty"`
	MinTime   uint32  `protobuf:"varint,8,opt,name=minTime,proto3" json:"minTime,omitempty"`
	MinTimeID uint32  `protobuf:"varint,9,opt,name=minTimeID,proto3" json:"minTimeID,omitempty"`
	AvgTime   float64 `protobuf:"fixed64,10,opt,name=avgTime,proto3" json:"avgTime,omitempty"`
}

func (x *AgvTimeReportItem) Reset() {
	*x = AgvTimeReportItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_report_report_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgvTimeReportItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgvTimeReportItem) ProtoMessage() {}

func (x *AgvTimeReportItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_report_report_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgvTimeReportItem.ProtoReflect.Descriptor instead.
func (*AgvTimeReportItem) Descriptor() ([]byte, []int) {
	return file_proto_report_report_proto_rawDescGZIP(), []int{13}
}

func (x *AgvTimeReportItem) GetAgvID() uint32 {
	if x != nil {
		return x.AgvID
	}
	return 0
}

func (x *AgvTimeReportItem) GetMaxTime() uint32 {
	if x != nil {
		return x.MaxTime
	}
	return 0
}

func (x *AgvTimeReportItem) GetMaxTimeID() uint32 {
	if x != nil {
		return x.MaxTimeID
	}
	return 0
}

func (x *AgvTimeReportItem) GetMinTime() uint32 {
	if x != nil {
		return x.MinTime
	}
	return 0
}

func (x *AgvTimeReportItem) GetMinTimeID() uint32 {
	if x != nil {
		return x.MinTimeID
	}
	return 0
}

func (x *AgvTimeReportItem) GetAvgTime() float64 {
	if x != nil {
		return x.AvgTime
	}
	return 0
}

var File_proto_report_report_proto protoreflect.FileDescriptor

var file_proto_report_report_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x22, 0xc4, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x76, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x67, 0x76, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x05, 0x0a, 0x03,
	0x41, 0x67, 0x76, 0x22, 0x6f, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x36, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe6, 0x01, 0x0a,
	0x0d, 0x41, 0x67, 0x76, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x35,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x76, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x67, 0x76, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x76, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x76,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd7, 0x02, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x2f,
	0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x61,
	0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x61, 0x76, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x76, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xdd, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x0a, 0x09,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x76, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x76, 0x67, 0x22,
	0x76, 0x0a, 0x10, 0x41, 0x67, 0x76, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x67, 0x76, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x06, 0x61, 0x67, 0x76, 0x49, 0x44, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x41, 0x67, 0x76, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x38,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x41, 0x67, 0x76, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x76, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x61, 0x76, 0x67, 0x22, 0x73,
	0x0a, 0x11, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xd9, 0x01, 0x0a, 0x0f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x67, 0x76, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x49,
	0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x76, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb3, 0x01, 0x0a,
	0x11, 0x41, 0x67, 0x76, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x76, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x67, 0x76, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x67, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x76, 0x67, 0x54, 0x69,
	0x6d, 0x65, 0x32, 0x98, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x62, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x67, 0x76, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x25, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x67, 0x76, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x41, 0x67, 0x76, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x65, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x61, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x26, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x72, 0x76, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x22, 0x5a,
	0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x3b, 0x67, 0x6f,
	0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x73, 0x72, 0x76, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_report_report_proto_rawDescOnce sync.Once
	file_proto_report_report_proto_rawDescData = file_proto_report_report_proto_rawDesc
)

func file_proto_report_report_proto_rawDescGZIP() []byte {
	file_proto_report_report_proto_rawDescOnce.Do(func() {
		file_proto_report_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_report_report_proto_rawDescData)
	})
	return file_proto_report_report_proto_rawDescData
}

var file_proto_report_report_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_report_report_proto_goTypes = []interface{}{
	(*Task)(nil),                // 0: go.micro.srv.report.Task
	(*Material)(nil),            // 1: go.micro.srv.report.Material
	(*Agv)(nil),                 // 2: go.micro.srv.report.Agv
	(*TaskReportReq)(nil),       // 3: go.micro.srv.report.TaskReportReq
	(*ReportItem)(nil),          // 4: go.micro.srv.report.ReportItem
	(*AgvReportItem)(nil),       // 5: go.micro.srv.report.AgvReportItem
	(*TaskReportItems)(nil),     // 6: go.micro.srv.report.TaskReportItems
	(*MaterialReportItems)(nil), // 7: go.micro.srv.report.MaterialReportItems
	(*AgvTaskReportReq)(nil),    // 8: go.micro.srv.report.AgvTaskReportReq
	(*AgvTaskReportItems)(nil),  // 9: go.micro.srv.report.AgvTaskReportItems
	(*MaterialReportReq)(nil),   // 10: go.micro.srv.report.MaterialReportReq
	(*TaskTimeReportReq)(nil),   // 11: go.micro.srv.report.TaskTimeReportReq
	(*TimeReportItems)(nil),     // 12: go.micro.srv.report.TimeReportItems
	(*AgvTimeReportItem)(nil),   // 13: go.micro.srv.report.AgvTimeReportItem
}
var file_proto_report_report_proto_depIdxs = []int32{
	4,  // 0: go.micro.srv.report.AgvReportItem.items:type_name -> go.micro.srv.report.ReportItem
	4,  // 1: go.micro.srv.report.TaskReportItems.item:type_name -> go.micro.srv.report.ReportItem
	0,  // 2: go.micro.srv.report.TaskReportItems.tasks:type_name -> go.micro.srv.report.Task
	4,  // 3: go.micro.srv.report.MaterialReportItems.item:type_name -> go.micro.srv.report.ReportItem
	1,  // 4: go.micro.srv.report.MaterialReportItems.materials:type_name -> go.micro.srv.report.Material
	5,  // 5: go.micro.srv.report.AgvTaskReportItems.items:type_name -> go.micro.srv.report.AgvReportItem
	13, // 6: go.micro.srv.report.TimeReportItems.items:type_name -> go.micro.srv.report.AgvTimeReportItem
	3,  // 7: go.micro.srv.report.ReportService.GetTaskReport:input_type -> go.micro.srv.report.TaskReportReq
	8,  // 8: go.micro.srv.report.ReportService.GetAgvTaskReport:input_type -> go.micro.srv.report.AgvTaskReportReq
	10, // 9: go.micro.srv.report.ReportService.GetMaterialReport:input_type -> go.micro.srv.report.MaterialReportReq
	11, // 10: go.micro.srv.report.ReportService.GetTaskTimeReport:input_type -> go.micro.srv.report.TaskTimeReportReq
	6,  // 11: go.micro.srv.report.ReportService.GetTaskReport:output_type -> go.micro.srv.report.TaskReportItems
	9,  // 12: go.micro.srv.report.ReportService.GetAgvTaskReport:output_type -> go.micro.srv.report.AgvTaskReportItems
	7,  // 13: go.micro.srv.report.ReportService.GetMaterialReport:output_type -> go.micro.srv.report.MaterialReportItems
	12, // 14: go.micro.srv.report.ReportService.GetTaskTimeReport:output_type -> go.micro.srv.report.TimeReportItems
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_report_report_proto_init() }
func file_proto_report_report_proto_init() {
	if File_proto_report_report_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_report_report_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgvReportItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskReportItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialReportItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgvTaskReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgvTaskReportItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskTimeReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeReportItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_report_report_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgvTimeReportItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_report_report_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_report_report_proto_goTypes,
		DependencyIndexes: file_proto_report_report_proto_depIdxs,
		MessageInfos:      file_proto_report_report_proto_msgTypes,
	}.Build()
	File_proto_report_report_proto = out.File
	file_proto_report_report_proto_rawDesc = nil
	file_proto_report_report_proto_goTypes = nil
	file_proto_report_report_proto_depIdxs = nil
}
