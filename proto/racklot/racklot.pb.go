// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/racklot/racklot.proto

package go_micro_srv_racklot

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IDReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDReq) Reset()         { *m = IDReq{} }
func (m *IDReq) String() string { return proto.CompactTextString(m) }
func (*IDReq) ProtoMessage()    {}
func (*IDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{0}
}

func (m *IDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDReq.Unmarshal(m, b)
}
func (m *IDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDReq.Marshal(b, m, deterministic)
}
func (m *IDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDReq.Merge(m, src)
}
func (m *IDReq) XXX_Size() int {
	return xxx_messageInfo_IDReq.Size(m)
}
func (m *IDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IDReq.DiscardUnknown(m)
}

var xxx_messageInfo_IDReq proto.InternalMessageInfo

func (m *IDReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// RacklotType 货位类型
type RacklotType struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Length               uint32   `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	Width                uint32   `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Properties           string   `protobuf:"bytes,6,opt,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotType) Reset()         { *m = RacklotType{} }
func (m *RacklotType) String() string { return proto.CompactTextString(m) }
func (*RacklotType) ProtoMessage()    {}
func (*RacklotType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{1}
}

func (m *RacklotType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotType.Unmarshal(m, b)
}
func (m *RacklotType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotType.Marshal(b, m, deterministic)
}
func (m *RacklotType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotType.Merge(m, src)
}
func (m *RacklotType) XXX_Size() int {
	return xxx_messageInfo_RacklotType.Size(m)
}
func (m *RacklotType) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotType.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotType proto.InternalMessageInfo

func (m *RacklotType) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RacklotType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RacklotType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RacklotType) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *RacklotType) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *RacklotType) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

type UpdateRacklotType struct {
	Id                   *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Length               *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=length,proto3" json:"length,omitempty"`
	Width                *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=width,proto3" json:"width,omitempty"`
	Properties           string                `protobuf:"bytes,6,opt,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateRacklotType) Reset()         { *m = UpdateRacklotType{} }
func (m *UpdateRacklotType) String() string { return proto.CompactTextString(m) }
func (*UpdateRacklotType) ProtoMessage()    {}
func (*UpdateRacklotType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{2}
}

func (m *UpdateRacklotType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRacklotType.Unmarshal(m, b)
}
func (m *UpdateRacklotType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRacklotType.Marshal(b, m, deterministic)
}
func (m *UpdateRacklotType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRacklotType.Merge(m, src)
}
func (m *UpdateRacklotType) XXX_Size() int {
	return xxx_messageInfo_UpdateRacklotType.Size(m)
}
func (m *UpdateRacklotType) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRacklotType.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRacklotType proto.InternalMessageInfo

func (m *UpdateRacklotType) GetId() *wrappers.UInt32Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UpdateRacklotType) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *UpdateRacklotType) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UpdateRacklotType) GetLength() *wrappers.UInt32Value {
	if m != nil {
		return m.Length
	}
	return nil
}

func (m *UpdateRacklotType) GetWidth() *wrappers.UInt32Value {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *UpdateRacklotType) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

type UpdateRacklotTypeReq struct {
	Id                   uint32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Update               *UpdateRacklotType `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateRacklotTypeReq) Reset()         { *m = UpdateRacklotTypeReq{} }
func (m *UpdateRacklotTypeReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRacklotTypeReq) ProtoMessage()    {}
func (*UpdateRacklotTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{3}
}

func (m *UpdateRacklotTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRacklotTypeReq.Unmarshal(m, b)
}
func (m *UpdateRacklotTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRacklotTypeReq.Marshal(b, m, deterministic)
}
func (m *UpdateRacklotTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRacklotTypeReq.Merge(m, src)
}
func (m *UpdateRacklotTypeReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRacklotTypeReq.Size(m)
}
func (m *UpdateRacklotTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRacklotTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRacklotTypeReq proto.InternalMessageInfo

func (m *UpdateRacklotTypeReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRacklotTypeReq) GetUpdate() *UpdateRacklotType {
	if m != nil {
		return m.Update
	}
	return nil
}

type RacklotTypes struct {
	RacklotTypes         []*RacklotType `protobuf:"bytes,1,rep,name=racklotTypes,proto3" json:"racklotTypes,omitempty"`
	Totals               uint32         `protobuf:"varint,4,opt,name=totals,proto3" json:"totals,omitempty"`
	Totalpages           uint32         `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Currpages            uint32         `protobuf:"varint,3,opt,name=currpages,proto3" json:"currpages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RacklotTypes) Reset()         { *m = RacklotTypes{} }
func (m *RacklotTypes) String() string { return proto.CompactTextString(m) }
func (*RacklotTypes) ProtoMessage()    {}
func (*RacklotTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{4}
}

func (m *RacklotTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotTypes.Unmarshal(m, b)
}
func (m *RacklotTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotTypes.Marshal(b, m, deterministic)
}
func (m *RacklotTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotTypes.Merge(m, src)
}
func (m *RacklotTypes) XXX_Size() int {
	return xxx_messageInfo_RacklotTypes.Size(m)
}
func (m *RacklotTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotTypes.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotTypes proto.InternalMessageInfo

func (m *RacklotTypes) GetRacklotTypes() []*RacklotType {
	if m != nil {
		return m.RacklotTypes
	}
	return nil
}

func (m *RacklotTypes) GetTotals() uint32 {
	if m != nil {
		return m.Totals
	}
	return 0
}

func (m *RacklotTypes) GetTotalpages() uint32 {
	if m != nil {
		return m.Totalpages
	}
	return 0
}

func (m *RacklotTypes) GetCurrpages() uint32 {
	if m != nil {
		return m.Currpages
	}
	return 0
}

// MultipleGroup 货位重列组
type MultipleGroup struct {
	RacklotID            uint32   `protobuf:"varint,1,opt,name=racklotID,proto3" json:"racklotID,omitempty"`
	Group                uint32   `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	Item                 uint32   `protobuf:"varint,3,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultipleGroup) Reset()         { *m = MultipleGroup{} }
func (m *MultipleGroup) String() string { return proto.CompactTextString(m) }
func (*MultipleGroup) ProtoMessage()    {}
func (*MultipleGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{5}
}

func (m *MultipleGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultipleGroup.Unmarshal(m, b)
}
func (m *MultipleGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultipleGroup.Marshal(b, m, deterministic)
}
func (m *MultipleGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultipleGroup.Merge(m, src)
}
func (m *MultipleGroup) XXX_Size() int {
	return xxx_messageInfo_MultipleGroup.Size(m)
}
func (m *MultipleGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MultipleGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MultipleGroup proto.InternalMessageInfo

func (m *MultipleGroup) GetRacklotID() uint32 {
	if m != nil {
		return m.RacklotID
	}
	return 0
}

func (m *MultipleGroup) GetGroup() uint32 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *MultipleGroup) GetItem() uint32 {
	if m != nil {
		return m.Item
	}
	return 0
}

// Racklot 货位
type Racklot struct {
	Id     uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type   *RacklotType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	X      uint32       `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	Y      uint32       `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	Angle  float32      `protobuf:"fixed32,5,opt,name=angle,proto3" json:"angle,omitempty"`
	Length uint32       `protobuf:"varint,6,opt,name=length,proto3" json:"length,omitempty"`
	Width  uint32       `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	// 站台重列分组信息
	MultiGroup  *MultipleGroup `protobuf:"bytes,8,opt,name=multiGroup,proto3" json:"multiGroup,omitempty"`
	Description string         `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	// 站台是否有效，被禁用则无效，启用则有效，默认为有效
	IsValid bool `protobuf:"varint,11,opt,name=isValid,proto3" json:"isValid,omitempty"`
	// 关联的货架ID，在货位上没有放置货架时为空
	RackID uint32 `protobuf:"varint,12,opt,name=rackID,proto3" json:"rackID,omitempty"`
	//是否被占用
	IsOccupied           bool     `protobuf:"varint,13,opt,name=isOccupied,proto3" json:"isOccupied,omitempty"`
	StationID            uint32   `protobuf:"varint,15,opt,name=stationID,proto3" json:"stationID,omitempty"`
	IsInbound            bool     `protobuf:"varint,16,opt,name=isInbound,proto3" json:"isInbound,omitempty"`
	IsOutbound           bool     `protobuf:"varint,17,opt,name=isOutbound,proto3" json:"isOutbound,omitempty"`
	AreaIDs              []uint32 `protobuf:"varint,18,rep,packed,name=areaIDs,proto3" json:"areaIDs,omitempty"`
	Properties           string   `protobuf:"bytes,19,opt,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Racklot) Reset()         { *m = Racklot{} }
func (m *Racklot) String() string { return proto.CompactTextString(m) }
func (*Racklot) ProtoMessage()    {}
func (*Racklot) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{6}
}

func (m *Racklot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Racklot.Unmarshal(m, b)
}
func (m *Racklot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Racklot.Marshal(b, m, deterministic)
}
func (m *Racklot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Racklot.Merge(m, src)
}
func (m *Racklot) XXX_Size() int {
	return xxx_messageInfo_Racklot.Size(m)
}
func (m *Racklot) XXX_DiscardUnknown() {
	xxx_messageInfo_Racklot.DiscardUnknown(m)
}

var xxx_messageInfo_Racklot proto.InternalMessageInfo

func (m *Racklot) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Racklot) GetType() *RacklotType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Racklot) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Racklot) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Racklot) GetAngle() float32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

func (m *Racklot) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Racklot) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Racklot) GetMultiGroup() *MultipleGroup {
	if m != nil {
		return m.MultiGroup
	}
	return nil
}

func (m *Racklot) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Racklot) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *Racklot) GetRackID() uint32 {
	if m != nil {
		return m.RackID
	}
	return 0
}

func (m *Racklot) GetIsOccupied() bool {
	if m != nil {
		return m.IsOccupied
	}
	return false
}

func (m *Racklot) GetStationID() uint32 {
	if m != nil {
		return m.StationID
	}
	return 0
}

func (m *Racklot) GetIsInbound() bool {
	if m != nil {
		return m.IsInbound
	}
	return false
}

func (m *Racklot) GetIsOutbound() bool {
	if m != nil {
		return m.IsOutbound
	}
	return false
}

func (m *Racklot) GetAreaIDs() []uint32 {
	if m != nil {
		return m.AreaIDs
	}
	return nil
}

func (m *Racklot) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

type UpdateRacklotReq struct {
	Id                   uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Racklot              *UpdateRacklot `protobuf:"bytes,2,opt,name=racklot,proto3" json:"racklot,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateRacklotReq) Reset()         { *m = UpdateRacklotReq{} }
func (m *UpdateRacklotReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRacklotReq) ProtoMessage()    {}
func (*UpdateRacklotReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{7}
}

func (m *UpdateRacklotReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRacklotReq.Unmarshal(m, b)
}
func (m *UpdateRacklotReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRacklotReq.Marshal(b, m, deterministic)
}
func (m *UpdateRacklotReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRacklotReq.Merge(m, src)
}
func (m *UpdateRacklotReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRacklotReq.Size(m)
}
func (m *UpdateRacklotReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRacklotReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRacklotReq proto.InternalMessageInfo

func (m *UpdateRacklotReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRacklotReq) GetRacklot() *UpdateRacklot {
	if m != nil {
		return m.Racklot
	}
	return nil
}

type UpdateRacklot struct {
	// 区域ID
	Id *wrappers.UInt32Value `protobuf:"bytes,20,opt,name=id,proto3" json:"id,omitempty"`
	//
	X      *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y      *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	Angle  *wrappers.FloatValue  `protobuf:"bytes,3,opt,name=angle,proto3" json:"angle,omitempty"`
	Length *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=length,proto3" json:"length,omitempty"`
	Width  *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=width,proto3" json:"width,omitempty"`
	Group  *wrappers.UInt32Value `protobuf:"bytes,7,opt,name=group,proto3" json:"group,omitempty"`
	Item   *wrappers.UInt32Value `protobuf:"bytes,8,opt,name=item,proto3" json:"item,omitempty"`
	//
	RacklotType *wrappers.UInt32Value `protobuf:"bytes,24,opt,name=racklotType,proto3" json:"racklotType,omitempty"`
	StationID   *wrappers.UInt32Value `protobuf:"bytes,25,opt,name=stationID,proto3" json:"stationID,omitempty"`
	RackID      *wrappers.UInt32Value `protobuf:"bytes,26,opt,name=rackID,proto3" json:"rackID,omitempty"`
	//是否有效
	IsValid              *wrappers.BoolValue   `protobuf:"bytes,27,opt,name=isValid,proto3" json:"isValid,omitempty"`
	IsInbound            *wrappers.BoolValue   `protobuf:"bytes,28,opt,name=isInbound,proto3" json:"isInbound,omitempty"`
	IsOutbound           *wrappers.BoolValue   `protobuf:"bytes,29,opt,name=isOutbound,proto3" json:"isOutbound,omitempty"`
	IsOccupied           *wrappers.BoolValue   `protobuf:"bytes,31,opt,name=isOccupied,proto3" json:"isOccupied,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,30,opt,name=description,proto3" json:"description,omitempty"`
	Properties           string                `protobuf:"bytes,6,opt,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateRacklot) Reset()         { *m = UpdateRacklot{} }
func (m *UpdateRacklot) String() string { return proto.CompactTextString(m) }
func (*UpdateRacklot) ProtoMessage()    {}
func (*UpdateRacklot) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{8}
}

func (m *UpdateRacklot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRacklot.Unmarshal(m, b)
}
func (m *UpdateRacklot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRacklot.Marshal(b, m, deterministic)
}
func (m *UpdateRacklot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRacklot.Merge(m, src)
}
func (m *UpdateRacklot) XXX_Size() int {
	return xxx_messageInfo_UpdateRacklot.Size(m)
}
func (m *UpdateRacklot) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRacklot.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRacklot proto.InternalMessageInfo

func (m *UpdateRacklot) GetId() *wrappers.UInt32Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UpdateRacklot) GetX() *wrappers.UInt32Value {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *UpdateRacklot) GetY() *wrappers.UInt32Value {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *UpdateRacklot) GetAngle() *wrappers.FloatValue {
	if m != nil {
		return m.Angle
	}
	return nil
}

func (m *UpdateRacklot) GetLength() *wrappers.UInt32Value {
	if m != nil {
		return m.Length
	}
	return nil
}

func (m *UpdateRacklot) GetWidth() *wrappers.UInt32Value {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *UpdateRacklot) GetGroup() *wrappers.UInt32Value {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *UpdateRacklot) GetItem() *wrappers.UInt32Value {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *UpdateRacklot) GetRacklotType() *wrappers.UInt32Value {
	if m != nil {
		return m.RacklotType
	}
	return nil
}

func (m *UpdateRacklot) GetStationID() *wrappers.UInt32Value {
	if m != nil {
		return m.StationID
	}
	return nil
}

func (m *UpdateRacklot) GetRackID() *wrappers.UInt32Value {
	if m != nil {
		return m.RackID
	}
	return nil
}

func (m *UpdateRacklot) GetIsValid() *wrappers.BoolValue {
	if m != nil {
		return m.IsValid
	}
	return nil
}

func (m *UpdateRacklot) GetIsInbound() *wrappers.BoolValue {
	if m != nil {
		return m.IsInbound
	}
	return nil
}

func (m *UpdateRacklot) GetIsOutbound() *wrappers.BoolValue {
	if m != nil {
		return m.IsOutbound
	}
	return nil
}

func (m *UpdateRacklot) GetIsOccupied() *wrappers.BoolValue {
	if m != nil {
		return m.IsOccupied
	}
	return nil
}

func (m *UpdateRacklot) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *UpdateRacklot) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

type UpdateRacklotsReq struct {
	Ids                  []uint32       `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Update               *UpdateRacklot `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateRacklotsReq) Reset()         { *m = UpdateRacklotsReq{} }
func (m *UpdateRacklotsReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRacklotsReq) ProtoMessage()    {}
func (*UpdateRacklotsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{9}
}

func (m *UpdateRacklotsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRacklotsReq.Unmarshal(m, b)
}
func (m *UpdateRacklotsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRacklotsReq.Marshal(b, m, deterministic)
}
func (m *UpdateRacklotsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRacklotsReq.Merge(m, src)
}
func (m *UpdateRacklotsReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRacklotsReq.Size(m)
}
func (m *UpdateRacklotsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRacklotsReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRacklotsReq proto.InternalMessageInfo

func (m *UpdateRacklotsReq) GetIds() []uint32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *UpdateRacklotsReq) GetUpdate() *UpdateRacklot {
	if m != nil {
		return m.Update
	}
	return nil
}

type DeleteRacklotsReq struct {
	Ids                  []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	StationIDs           []uint32 `protobuf:"varint,2,rep,packed,name=stationIDs,proto3" json:"stationIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRacklotsReq) Reset()         { *m = DeleteRacklotsReq{} }
func (m *DeleteRacklotsReq) String() string { return proto.CompactTextString(m) }
func (*DeleteRacklotsReq) ProtoMessage()    {}
func (*DeleteRacklotsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{10}
}

func (m *DeleteRacklotsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRacklotsReq.Unmarshal(m, b)
}
func (m *DeleteRacklotsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRacklotsReq.Marshal(b, m, deterministic)
}
func (m *DeleteRacklotsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRacklotsReq.Merge(m, src)
}
func (m *DeleteRacklotsReq) XXX_Size() int {
	return xxx_messageInfo_DeleteRacklotsReq.Size(m)
}
func (m *DeleteRacklotsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRacklotsReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRacklotsReq proto.InternalMessageInfo

func (m *DeleteRacklotsReq) GetIds() []uint32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *DeleteRacklotsReq) GetStationIDs() []uint32 {
	if m != nil {
		return m.StationIDs
	}
	return nil
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{11}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type AddResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResp) Reset()         { *m = AddResp{} }
func (m *AddResp) String() string { return proto.CompactTextString(m) }
func (*AddResp) ProtoMessage()    {}
func (*AddResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{12}
}

func (m *AddResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResp.Unmarshal(m, b)
}
func (m *AddResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResp.Marshal(b, m, deterministic)
}
func (m *AddResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResp.Merge(m, src)
}
func (m *AddResp) XXX_Size() int {
	return xxx_messageInfo_AddResp.Size(m)
}
func (m *AddResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddResp proto.InternalMessageInfo

type RacklotIDReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotIDReq) Reset()         { *m = RacklotIDReq{} }
func (m *RacklotIDReq) String() string { return proto.CompactTextString(m) }
func (*RacklotIDReq) ProtoMessage()    {}
func (*RacklotIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{13}
}

func (m *RacklotIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotIDReq.Unmarshal(m, b)
}
func (m *RacklotIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotIDReq.Marshal(b, m, deterministic)
}
func (m *RacklotIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotIDReq.Merge(m, src)
}
func (m *RacklotIDReq) XXX_Size() int {
	return xxx_messageInfo_RacklotIDReq.Size(m)
}
func (m *RacklotIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotIDReq proto.InternalMessageInfo

func (m *RacklotIDReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResp) Reset()         { *m = DeleteResp{} }
func (m *DeleteResp) String() string { return proto.CompactTextString(m) }
func (*DeleteResp) ProtoMessage()    {}
func (*DeleteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{14}
}

func (m *DeleteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResp.Unmarshal(m, b)
}
func (m *DeleteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResp.Marshal(b, m, deterministic)
}
func (m *DeleteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResp.Merge(m, src)
}
func (m *DeleteResp) XXX_Size() int {
	return xxx_messageInfo_DeleteResp.Size(m)
}
func (m *DeleteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResp proto.InternalMessageInfo

type UpdateResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResp) Reset()         { *m = UpdateResp{} }
func (m *UpdateResp) String() string { return proto.CompactTextString(m) }
func (*UpdateResp) ProtoMessage()    {}
func (*UpdateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{15}
}

func (m *UpdateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResp.Unmarshal(m, b)
}
func (m *UpdateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResp.Marshal(b, m, deterministic)
}
func (m *UpdateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResp.Merge(m, src)
}
func (m *UpdateResp) XXX_Size() int {
	return xxx_messageInfo_UpdateResp.Size(m)
}
func (m *UpdateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResp proto.InternalMessageInfo

type Racklots struct {
	Racklots             []*Racklot `protobuf:"bytes,1,rep,name=racklots,proto3" json:"racklots,omitempty"`
	Totals               uint32     `protobuf:"varint,4,opt,name=totals,proto3" json:"totals,omitempty"`
	Totalpages           uint32     `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Currpages            uint32     `protobuf:"varint,3,opt,name=currpages,proto3" json:"currpages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Racklots) Reset()         { *m = Racklots{} }
func (m *Racklots) String() string { return proto.CompactTextString(m) }
func (*Racklots) ProtoMessage()    {}
func (*Racklots) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{16}
}

func (m *Racklots) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Racklots.Unmarshal(m, b)
}
func (m *Racklots) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Racklots.Marshal(b, m, deterministic)
}
func (m *Racklots) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Racklots.Merge(m, src)
}
func (m *Racklots) XXX_Size() int {
	return xxx_messageInfo_Racklots.Size(m)
}
func (m *Racklots) XXX_DiscardUnknown() {
	xxx_messageInfo_Racklots.DiscardUnknown(m)
}

var xxx_messageInfo_Racklots proto.InternalMessageInfo

func (m *Racklots) GetRacklots() []*Racklot {
	if m != nil {
		return m.Racklots
	}
	return nil
}

func (m *Racklots) GetTotals() uint32 {
	if m != nil {
		return m.Totals
	}
	return 0
}

func (m *Racklots) GetTotalpages() uint32 {
	if m != nil {
		return m.Totalpages
	}
	return 0
}

func (m *Racklots) GetCurrpages() uint32 {
	if m != nil {
		return m.Currpages
	}
	return 0
}

type RackIDReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RackID               uint32   `protobuf:"varint,2,opt,name=rackID,proto3" json:"rackID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RackIDReq) Reset()         { *m = RackIDReq{} }
func (m *RackIDReq) String() string { return proto.CompactTextString(m) }
func (*RackIDReq) ProtoMessage()    {}
func (*RackIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{17}
}

func (m *RackIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackIDReq.Unmarshal(m, b)
}
func (m *RackIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackIDReq.Marshal(b, m, deterministic)
}
func (m *RackIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackIDReq.Merge(m, src)
}
func (m *RackIDReq) XXX_Size() int {
	return xxx_messageInfo_RackIDReq.Size(m)
}
func (m *RackIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RackIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_RackIDReq proto.InternalMessageInfo

func (m *RackIDReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RackIDReq) GetRackID() uint32 {
	if m != nil {
		return m.RackID
	}
	return 0
}

type RackIDsReq struct {
	RackID               []*RackIDReq `protobuf:"bytes,1,rep,name=rackID,proto3" json:"rackID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RackIDsReq) Reset()         { *m = RackIDsReq{} }
func (m *RackIDsReq) String() string { return proto.CompactTextString(m) }
func (*RackIDsReq) ProtoMessage()    {}
func (*RackIDsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{18}
}

func (m *RackIDsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackIDsReq.Unmarshal(m, b)
}
func (m *RackIDsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackIDsReq.Marshal(b, m, deterministic)
}
func (m *RackIDsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackIDsReq.Merge(m, src)
}
func (m *RackIDsReq) XXX_Size() int {
	return xxx_messageInfo_RackIDsReq.Size(m)
}
func (m *RackIDsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RackIDsReq.DiscardUnknown(m)
}

var xxx_messageInfo_RackIDsReq proto.InternalMessageInfo

func (m *RackIDsReq) GetRackID() []*RackIDReq {
	if m != nil {
		return m.RackID
	}
	return nil
}

type RacklotIDsReq struct {
	Ids                  []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotIDsReq) Reset()         { *m = RacklotIDsReq{} }
func (m *RacklotIDsReq) String() string { return proto.CompactTextString(m) }
func (*RacklotIDsReq) ProtoMessage()    {}
func (*RacklotIDsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{19}
}

func (m *RacklotIDsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotIDsReq.Unmarshal(m, b)
}
func (m *RacklotIDsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotIDsReq.Marshal(b, m, deterministic)
}
func (m *RacklotIDsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotIDsReq.Merge(m, src)
}
func (m *RacklotIDsReq) XXX_Size() int {
	return xxx_messageInfo_RacklotIDsReq.Size(m)
}
func (m *RacklotIDsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotIDsReq.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotIDsReq proto.InternalMessageInfo

func (m *RacklotIDsReq) GetIds() []uint32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type RacklotGroupsReq struct {
	GroupID              uint32   `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	RacklotIDs           []uint32 `protobuf:"varint,2,rep,packed,name=racklotIDs,proto3" json:"racklotIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotGroupsReq) Reset()         { *m = RacklotGroupsReq{} }
func (m *RacklotGroupsReq) String() string { return proto.CompactTextString(m) }
func (*RacklotGroupsReq) ProtoMessage()    {}
func (*RacklotGroupsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{20}
}

func (m *RacklotGroupsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotGroupsReq.Unmarshal(m, b)
}
func (m *RacklotGroupsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotGroupsReq.Marshal(b, m, deterministic)
}
func (m *RacklotGroupsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotGroupsReq.Merge(m, src)
}
func (m *RacklotGroupsReq) XXX_Size() int {
	return xxx_messageInfo_RacklotGroupsReq.Size(m)
}
func (m *RacklotGroupsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotGroupsReq.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotGroupsReq proto.InternalMessageInfo

func (m *RacklotGroupsReq) GetGroupID() uint32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *RacklotGroupsReq) GetRacklotIDs() []uint32 {
	if m != nil {
		return m.RacklotIDs
	}
	return nil
}

type Parameter struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}
func (*Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{21}
}

func (m *Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter.Unmarshal(m, b)
}
func (m *Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter.Marshal(b, m, deterministic)
}
func (m *Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter.Merge(m, src)
}
func (m *Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameter.Size(m)
}
func (m *Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter proto.InternalMessageInfo

func (m *Parameter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Parameter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type RacklotQuery struct {
	Limit                uint32         `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32         `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Page                 uint32         `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              uint32         `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Filter               *RacklotFilter `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RacklotQuery) Reset()         { *m = RacklotQuery{} }
func (m *RacklotQuery) String() string { return proto.CompactTextString(m) }
func (*RacklotQuery) ProtoMessage()    {}
func (*RacklotQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{22}
}

func (m *RacklotQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotQuery.Unmarshal(m, b)
}
func (m *RacklotQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotQuery.Marshal(b, m, deterministic)
}
func (m *RacklotQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotQuery.Merge(m, src)
}
func (m *RacklotQuery) XXX_Size() int {
	return xxx_messageInfo_RacklotQuery.Size(m)
}
func (m *RacklotQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotQuery.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotQuery proto.InternalMessageInfo

func (m *RacklotQuery) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RacklotQuery) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *RacklotQuery) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *RacklotQuery) GetPerPage() uint32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *RacklotQuery) GetFilter() *RacklotFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type RacklotTypeQuery struct {
	Limit                uint32             `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32             `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Page                 uint32             `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              uint32             `protobuf:"varint,4,opt,name=perPage,proto3" json:"perPage,omitempty"`
	Filter               *RacklotTypeFilter `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RacklotTypeQuery) Reset()         { *m = RacklotTypeQuery{} }
func (m *RacklotTypeQuery) String() string { return proto.CompactTextString(m) }
func (*RacklotTypeQuery) ProtoMessage()    {}
func (*RacklotTypeQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{23}
}

func (m *RacklotTypeQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotTypeQuery.Unmarshal(m, b)
}
func (m *RacklotTypeQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotTypeQuery.Marshal(b, m, deterministic)
}
func (m *RacklotTypeQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotTypeQuery.Merge(m, src)
}
func (m *RacklotTypeQuery) XXX_Size() int {
	return xxx_messageInfo_RacklotTypeQuery.Size(m)
}
func (m *RacklotTypeQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotTypeQuery.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotTypeQuery proto.InternalMessageInfo

func (m *RacklotTypeQuery) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RacklotTypeQuery) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *RacklotTypeQuery) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *RacklotTypeQuery) GetPerPage() uint32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *RacklotTypeQuery) GetFilter() *RacklotTypeFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

//   id_in:[Int!]
//   rackID:Int
//   isValid:Boolean
//   isOccupied:Boolean
//   stationID:Int
//   multipleGroup:MultipleGroupFilter
//   type:RacklotTypeFilter
//   propertiesFilter:PropertiesFilter
//   isFetch:Boolean
//   isDeliv:Boolean
type MultipleGroupFilter struct {
	Group                *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Item                 *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MultipleGroupFilter) Reset()         { *m = MultipleGroupFilter{} }
func (m *MultipleGroupFilter) String() string { return proto.CompactTextString(m) }
func (*MultipleGroupFilter) ProtoMessage()    {}
func (*MultipleGroupFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{24}
}

func (m *MultipleGroupFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultipleGroupFilter.Unmarshal(m, b)
}
func (m *MultipleGroupFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultipleGroupFilter.Marshal(b, m, deterministic)
}
func (m *MultipleGroupFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultipleGroupFilter.Merge(m, src)
}
func (m *MultipleGroupFilter) XXX_Size() int {
	return xxx_messageInfo_MultipleGroupFilter.Size(m)
}
func (m *MultipleGroupFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_MultipleGroupFilter.DiscardUnknown(m)
}

var xxx_messageInfo_MultipleGroupFilter proto.InternalMessageInfo

func (m *MultipleGroupFilter) GetGroup() *wrappers.UInt32Value {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *MultipleGroupFilter) GetItem() *wrappers.UInt32Value {
	if m != nil {
		return m.Item
	}
	return nil
}

type RacklotFilter struct {
	And                  []*RacklotFilter      `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	Or                   []*RacklotFilter      `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	IdIn                 []uint32              `protobuf:"varint,3,rep,packed,name=idIn,proto3" json:"idIn,omitempty"`
	IdNotIn              []uint32              `protobuf:"varint,14,rep,packed,name=idNotIn,proto3" json:"idNotIn,omitempty"`
	RackIdNotIn          []uint32              `protobuf:"varint,15,rep,packed,name=rackIdNotIn,proto3" json:"rackIdNotIn,omitempty"`
	RackIdIn             []uint32              `protobuf:"varint,16,rep,packed,name=rackIdIn,proto3" json:"rackIdIn,omitempty"`
	StationID            *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=stationID,proto3" json:"stationID,omitempty"`
	StationIDIn          []uint32              `protobuf:"varint,10,rep,packed,name=stationIDIn,proto3" json:"stationIDIn,omitempty"`
	RackID               *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=rackID,proto3" json:"rackID,omitempty"`
	IsInbound            *wrappers.BoolValue   `protobuf:"bytes,6,opt,name=isInbound,proto3" json:"isInbound,omitempty"`
	IsOutbound           *wrappers.BoolValue   `protobuf:"bytes,7,opt,name=isOutbound,proto3" json:"isOutbound,omitempty"`
	IsValid              *wrappers.BoolValue   `protobuf:"bytes,8,opt,name=isValid,proto3" json:"isValid,omitempty"`
	IsOccupied           *wrappers.BoolValue   `protobuf:"bytes,9,opt,name=isOccupied,proto3" json:"isOccupied,omitempty"`
	Type                 *RacklotTypeFilter    `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	Properties           []*PropertyFilter     `protobuf:"bytes,12,rep,name=properties,proto3" json:"properties,omitempty"`
	Group                *MultipleGroupFilter  `protobuf:"bytes,13,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RacklotFilter) Reset()         { *m = RacklotFilter{} }
func (m *RacklotFilter) String() string { return proto.CompactTextString(m) }
func (*RacklotFilter) ProtoMessage()    {}
func (*RacklotFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{25}
}

func (m *RacklotFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotFilter.Unmarshal(m, b)
}
func (m *RacklotFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotFilter.Marshal(b, m, deterministic)
}
func (m *RacklotFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotFilter.Merge(m, src)
}
func (m *RacklotFilter) XXX_Size() int {
	return xxx_messageInfo_RacklotFilter.Size(m)
}
func (m *RacklotFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotFilter.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotFilter proto.InternalMessageInfo

func (m *RacklotFilter) GetAnd() []*RacklotFilter {
	if m != nil {
		return m.And
	}
	return nil
}

func (m *RacklotFilter) GetOr() []*RacklotFilter {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *RacklotFilter) GetIdIn() []uint32 {
	if m != nil {
		return m.IdIn
	}
	return nil
}

func (m *RacklotFilter) GetIdNotIn() []uint32 {
	if m != nil {
		return m.IdNotIn
	}
	return nil
}

func (m *RacklotFilter) GetRackIdNotIn() []uint32 {
	if m != nil {
		return m.RackIdNotIn
	}
	return nil
}

func (m *RacklotFilter) GetRackIdIn() []uint32 {
	if m != nil {
		return m.RackIdIn
	}
	return nil
}

func (m *RacklotFilter) GetStationID() *wrappers.UInt32Value {
	if m != nil {
		return m.StationID
	}
	return nil
}

func (m *RacklotFilter) GetStationIDIn() []uint32 {
	if m != nil {
		return m.StationIDIn
	}
	return nil
}

func (m *RacklotFilter) GetRackID() *wrappers.UInt32Value {
	if m != nil {
		return m.RackID
	}
	return nil
}

func (m *RacklotFilter) GetIsInbound() *wrappers.BoolValue {
	if m != nil {
		return m.IsInbound
	}
	return nil
}

func (m *RacklotFilter) GetIsOutbound() *wrappers.BoolValue {
	if m != nil {
		return m.IsOutbound
	}
	return nil
}

func (m *RacklotFilter) GetIsValid() *wrappers.BoolValue {
	if m != nil {
		return m.IsValid
	}
	return nil
}

func (m *RacklotFilter) GetIsOccupied() *wrappers.BoolValue {
	if m != nil {
		return m.IsOccupied
	}
	return nil
}

func (m *RacklotFilter) GetType() *RacklotTypeFilter {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *RacklotFilter) GetProperties() []*PropertyFilter {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *RacklotFilter) GetGroup() *MultipleGroupFilter {
	if m != nil {
		return m.Group
	}
	return nil
}

type RacklotTypeFilter struct {
	And                  []*RacklotTypeFilter  `protobuf:"bytes,1,rep,name=and,proto3" json:"and,omitempty"`
	Or                   []*RacklotTypeFilter  `protobuf:"bytes,2,rep,name=or,proto3" json:"or,omitempty"`
	IdIn                 []uint32              `protobuf:"varint,3,rep,packed,name=idIn,proto3" json:"idIn,omitempty"`
	NameIn               []string              `protobuf:"bytes,4,rep,name=nameIn,proto3" json:"nameIn,omitempty"`
	Id                   *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RacklotTypeFilter) Reset()         { *m = RacklotTypeFilter{} }
func (m *RacklotTypeFilter) String() string { return proto.CompactTextString(m) }
func (*RacklotTypeFilter) ProtoMessage()    {}
func (*RacklotTypeFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{26}
}

func (m *RacklotTypeFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotTypeFilter.Unmarshal(m, b)
}
func (m *RacklotTypeFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotTypeFilter.Marshal(b, m, deterministic)
}
func (m *RacklotTypeFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotTypeFilter.Merge(m, src)
}
func (m *RacklotTypeFilter) XXX_Size() int {
	return xxx_messageInfo_RacklotTypeFilter.Size(m)
}
func (m *RacklotTypeFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotTypeFilter.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotTypeFilter proto.InternalMessageInfo

func (m *RacklotTypeFilter) GetAnd() []*RacklotTypeFilter {
	if m != nil {
		return m.And
	}
	return nil
}

func (m *RacklotTypeFilter) GetOr() []*RacklotTypeFilter {
	if m != nil {
		return m.Or
	}
	return nil
}

func (m *RacklotTypeFilter) GetIdIn() []uint32 {
	if m != nil {
		return m.IdIn
	}
	return nil
}

func (m *RacklotTypeFilter) GetNameIn() []string {
	if m != nil {
		return m.NameIn
	}
	return nil
}

func (m *RacklotTypeFilter) GetId() *wrappers.UInt32Value {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RacklotTypeFilter) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

type PropertyFilter struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropertyFilter) Reset()         { *m = PropertyFilter{} }
func (m *PropertyFilter) String() string { return proto.CompactTextString(m) }
func (*PropertyFilter) ProtoMessage()    {}
func (*PropertyFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{27}
}

func (m *PropertyFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyFilter.Unmarshal(m, b)
}
func (m *PropertyFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyFilter.Marshal(b, m, deterministic)
}
func (m *PropertyFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyFilter.Merge(m, src)
}
func (m *PropertyFilter) XXX_Size() int {
	return xxx_messageInfo_PropertyFilter.Size(m)
}
func (m *PropertyFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyFilter.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyFilter proto.InternalMessageInfo

func (m *PropertyFilter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PropertyFilter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *PropertyFilter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Property struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Property) Reset()         { *m = Property{} }
func (m *Property) String() string { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()    {}
func (*Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{28}
}

func (m *Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Property.Unmarshal(m, b)
}
func (m *Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Property.Marshal(b, m, deterministic)
}
func (m *Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Property.Merge(m, src)
}
func (m *Property) XXX_Size() int {
	return xxx_messageInfo_Property.Size(m)
}
func (m *Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Property.DiscardUnknown(m)
}

var xxx_messageInfo_Property proto.InternalMessageInfo

func (m *Property) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Property) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type FlagReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Flag                 bool     `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlagReq) Reset()         { *m = FlagReq{} }
func (m *FlagReq) String() string { return proto.CompactTextString(m) }
func (*FlagReq) ProtoMessage()    {}
func (*FlagReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{29}
}

func (m *FlagReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlagReq.Unmarshal(m, b)
}
func (m *FlagReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlagReq.Marshal(b, m, deterministic)
}
func (m *FlagReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlagReq.Merge(m, src)
}
func (m *FlagReq) XXX_Size() int {
	return xxx_messageInfo_FlagReq.Size(m)
}
func (m *FlagReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FlagReq.DiscardUnknown(m)
}

var xxx_messageInfo_FlagReq proto.InternalMessageInfo

func (m *FlagReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FlagReq) GetFlag() bool {
	if m != nil {
		return m.Flag
	}
	return false
}

type TypeReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 uint32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TypeReq) Reset()         { *m = TypeReq{} }
func (m *TypeReq) String() string { return proto.CompactTextString(m) }
func (*TypeReq) ProtoMessage()    {}
func (*TypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{30}
}

func (m *TypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeReq.Unmarshal(m, b)
}
func (m *TypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeReq.Marshal(b, m, deterministic)
}
func (m *TypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeReq.Merge(m, src)
}
func (m *TypeReq) XXX_Size() int {
	return xxx_messageInfo_TypeReq.Size(m)
}
func (m *TypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_TypeReq proto.InternalMessageInfo

func (m *TypeReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TypeReq) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *TypeReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PropertiesReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Properties           string   `protobuf:"bytes,2,opt,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropertiesReq) Reset()         { *m = PropertiesReq{} }
func (m *PropertiesReq) String() string { return proto.CompactTextString(m) }
func (*PropertiesReq) ProtoMessage()    {}
func (*PropertiesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{31}
}

func (m *PropertiesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertiesReq.Unmarshal(m, b)
}
func (m *PropertiesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertiesReq.Marshal(b, m, deterministic)
}
func (m *PropertiesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertiesReq.Merge(m, src)
}
func (m *PropertiesReq) XXX_Size() int {
	return xxx_messageInfo_PropertiesReq.Size(m)
}
func (m *PropertiesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertiesReq.DiscardUnknown(m)
}

var xxx_messageInfo_PropertiesReq proto.InternalMessageInfo

func (m *PropertiesReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PropertiesReq) GetProperties() string {
	if m != nil {
		return m.Properties
	}
	return ""
}

func init() {
	proto.RegisterType((*IDReq)(nil), "go.micro.srv.racklot.IDReq")
	proto.RegisterType((*RacklotType)(nil), "go.micro.srv.racklot.RacklotType")
	proto.RegisterType((*UpdateRacklotType)(nil), "go.micro.srv.racklot.UpdateRacklotType")
	proto.RegisterType((*UpdateRacklotTypeReq)(nil), "go.micro.srv.racklot.UpdateRacklotTypeReq")
	proto.RegisterType((*RacklotTypes)(nil), "go.micro.srv.racklot.RacklotTypes")
	proto.RegisterType((*MultipleGroup)(nil), "go.micro.srv.racklot.MultipleGroup")
	proto.RegisterType((*Racklot)(nil), "go.micro.srv.racklot.Racklot")
	proto.RegisterType((*UpdateRacklotReq)(nil), "go.micro.srv.racklot.UpdateRacklotReq")
	proto.RegisterType((*UpdateRacklot)(nil), "go.micro.srv.racklot.UpdateRacklot")
	proto.RegisterType((*UpdateRacklotsReq)(nil), "go.micro.srv.racklot.UpdateRacklotsReq")
	proto.RegisterType((*DeleteRacklotsReq)(nil), "go.micro.srv.racklot.DeleteRacklotsReq")
	proto.RegisterType((*Response)(nil), "go.micro.srv.racklot.Response")
	proto.RegisterType((*AddResp)(nil), "go.micro.srv.racklot.AddResp")
	proto.RegisterType((*RacklotIDReq)(nil), "go.micro.srv.racklot.RacklotIDReq")
	proto.RegisterType((*DeleteResp)(nil), "go.micro.srv.racklot.DeleteResp")
	proto.RegisterType((*UpdateResp)(nil), "go.micro.srv.racklot.UpdateResp")
	proto.RegisterType((*Racklots)(nil), "go.micro.srv.racklot.Racklots")
	proto.RegisterType((*RackIDReq)(nil), "go.micro.srv.racklot.RackIDReq")
	proto.RegisterType((*RackIDsReq)(nil), "go.micro.srv.racklot.RackIDsReq")
	proto.RegisterType((*RacklotIDsReq)(nil), "go.micro.srv.racklot.RacklotIDsReq")
	proto.RegisterType((*RacklotGroupsReq)(nil), "go.micro.srv.racklot.RacklotGroupsReq")
	proto.RegisterType((*Parameter)(nil), "go.micro.srv.racklot.Parameter")
	proto.RegisterType((*RacklotQuery)(nil), "go.micro.srv.racklot.RacklotQuery")
	proto.RegisterType((*RacklotTypeQuery)(nil), "go.micro.srv.racklot.RacklotTypeQuery")
	proto.RegisterType((*MultipleGroupFilter)(nil), "go.micro.srv.racklot.MultipleGroupFilter")
	proto.RegisterType((*RacklotFilter)(nil), "go.micro.srv.racklot.RacklotFilter")
	proto.RegisterType((*RacklotTypeFilter)(nil), "go.micro.srv.racklot.RacklotTypeFilter")
	proto.RegisterType((*PropertyFilter)(nil), "go.micro.srv.racklot.PropertyFilter")
	proto.RegisterType((*Property)(nil), "go.micro.srv.racklot.Property")
	proto.RegisterType((*FlagReq)(nil), "go.micro.srv.racklot.FlagReq")
	proto.RegisterType((*TypeReq)(nil), "go.micro.srv.racklot.TypeReq")
	proto.RegisterType((*PropertiesReq)(nil), "go.micro.srv.racklot.PropertiesReq")
}

func init() { proto.RegisterFile("proto/racklot/racklot.proto", fileDescriptor_ed2705d6df90f82d) }

var fileDescriptor_ed2705d6df90f82d = []byte{
	// 1678 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xdd, 0x92, 0xd3, 0xc6,
	0x12, 0x2e, 0xd9, 0xbb, 0xfe, 0x69, 0xff, 0xac, 0x77, 0xd8, 0xe2, 0xe8, 0x2c, 0xb0, 0x18, 0xed,
	0x29, 0xd8, 0x43, 0x25, 0x86, 0x78, 0xa1, 0x08, 0x50, 0xc9, 0x16, 0xc4, 0x0b, 0xe5, 0x00, 0x61,
	0xd1, 0xb2, 0x4b, 0x72, 0x91, 0x54, 0x69, 0xad, 0x59, 0xa3, 0x42, 0x96, 0x14, 0x49, 0x06, 0x5c,
	0x79, 0x8b, 0xe4, 0x32, 0x57, 0xb9, 0xe2, 0x22, 0x17, 0x79, 0x82, 0x3c, 0x45, 0x1e, 0x28, 0xa9,
	0xf9, 0x91, 0x34, 0xb2, 0x65, 0x6b, 0x9c, 0x40, 0xae, 0xa4, 0x9e, 0xe9, 0xee, 0xe9, 0xee, 0xe9,
	0x9e, 0xaf, 0x67, 0xe0, 0x9c, 0xe7, 0xbb, 0xa1, 0x7b, 0xcd, 0x37, 0x06, 0xaf, 0x6c, 0x37, 0x8c,
	0xbe, 0x1d, 0x3a, 0x8a, 0x36, 0x86, 0x6e, 0x67, 0x64, 0x0d, 0x7c, 0xb7, 0x13, 0xf8, 0xaf, 0x3b,
	0x7c, 0x6e, 0x73, 0x6b, 0xe8, 0xba, 0x43, 0x1b, 0x5f, 0xa3, 0x3c, 0x27, 0xe3, 0xd3, 0x6b, 0x6f,
	0x7c, 0xc3, 0xf3, 0xb0, 0x1f, 0x30, 0x29, 0xed, 0x3f, 0xb0, 0xda, 0xef, 0xe9, 0xf8, 0x7b, 0xd4,
	0x84, 0x82, 0x65, 0xaa, 0x4a, 0x5b, 0xd9, 0x69, 0xe8, 0x05, 0xcb, 0xd4, 0x7e, 0x51, 0xa0, 0xa6,
	0x33, 0x25, 0xcf, 0x27, 0x1e, 0x9e, 0x9e, 0x47, 0x08, 0x56, 0x1c, 0x63, 0x84, 0xd5, 0x42, 0x5b,
	0xd9, 0xa9, 0xea, 0xf4, 0x1f, 0xb5, 0xa1, 0x66, 0xe2, 0x60, 0xe0, 0x5b, 0x5e, 0x68, 0xb9, 0x8e,
	0x5a, 0xa4, 0x53, 0xe2, 0x10, 0x3a, 0x0b, 0x25, 0x1b, 0x3b, 0xc3, 0xf0, 0xa5, 0xba, 0x42, 0x35,
	0x71, 0x0a, 0x6d, 0xc0, 0xea, 0x1b, 0xcb, 0x0c, 0x5f, 0xaa, 0xab, 0x74, 0x98, 0x11, 0x68, 0x0b,
	0xc0, 0xf3, 0x5d, 0x0f, 0xfb, 0xa1, 0x85, 0x03, 0xb5, 0x44, 0xd5, 0x09, 0x23, 0xda, 0xef, 0x05,
	0x58, 0x3f, 0xf2, 0x4c, 0x23, 0xc4, 0xa2, 0xa5, 0x1f, 0xc5, 0x96, 0xd6, 0xba, 0xe7, 0x3b, 0xcc,
	0xff, 0x4e, 0xe4, 0x7f, 0xe7, 0xa8, 0xef, 0x84, 0xbb, 0xdd, 0x63, 0xc3, 0x1e, 0x63, 0xea, 0xc7,
	0x75, 0xc1, 0x8f, 0x2c, 0xfe, 0xc3, 0xd0, 0xb7, 0x9c, 0x21, 0xe3, 0x67, 0x5e, 0x7e, 0x3e, 0xeb,
	0x65, 0x9e, 0x60, 0x2a, 0x06, 0x37, 0x52, 0x31, 0xc8, 0xb3, 0x31, 0x8a, 0x50, 0x57, 0x8c, 0x50,
	0x9e, 0x90, 0x64, 0xfc, 0x86, 0xb0, 0x31, 0x13, 0xbe, 0x8c, 0x5c, 0x40, 0x7b, 0x50, 0x1a, 0x53,
	0x3e, 0x1e, 0xa5, 0x2b, 0x9d, 0xac, 0x5c, 0xeb, 0xcc, 0xea, 0xe2, 0x62, 0xda, 0xaf, 0x0a, 0xd4,
	0x85, 0xf1, 0x00, 0xed, 0x43, 0xdd, 0x17, 0x68, 0x55, 0x69, 0x17, 0x77, 0x6a, 0xdd, 0x4b, 0xd9,
	0x7a, 0x45, 0x8d, 0x29, 0x31, 0x92, 0x4e, 0xa1, 0x1b, 0x1a, 0x76, 0x10, 0xa5, 0x13, 0xa3, 0x88,
	0xe3, 0xf4, 0xcf, 0x33, 0x86, 0x38, 0xa0, 0x46, 0x37, 0x74, 0x61, 0x04, 0x9d, 0x87, 0xea, 0x60,
	0xec, 0xfb, 0x6c, 0xba, 0x48, 0xa7, 0x93, 0x01, 0xed, 0x05, 0x34, 0x9e, 0x8c, 0xed, 0xd0, 0xf2,
	0x6c, 0xfc, 0xd0, 0x77, 0xc7, 0x1e, 0x61, 0xe7, 0xcb, 0xf6, 0x7b, 0x3c, 0x2c, 0xc9, 0x00, 0xc9,
	0xdd, 0x21, 0x61, 0xe3, 0xeb, 0x30, 0x82, 0xd4, 0x87, 0x15, 0xe2, 0x11, 0xd7, 0x4e, 0xff, 0xb5,
	0x3f, 0x8b, 0x50, 0xe6, 0xce, 0xcc, 0xc4, 0xf8, 0x26, 0xac, 0x84, 0x13, 0x2f, 0x8a, 0xb0, 0x44,
	0x24, 0x28, 0x3b, 0xaa, 0x83, 0xf2, 0x96, 0xaf, 0xa1, 0xbc, 0x25, 0xd4, 0x84, 0x87, 0x42, 0x99,
	0x10, 0xc3, 0x0c, 0x67, 0x68, 0x63, 0x9a, 0x32, 0x05, 0x9d, 0x11, 0x42, 0x09, 0x96, 0xb2, 0x4b,
	0xb0, 0x2c, 0x96, 0xe0, 0x17, 0x00, 0x23, 0x12, 0x0b, 0x1a, 0x08, 0xb5, 0x42, 0x8d, 0xdb, 0xce,
	0x36, 0x2e, 0x15, 0x33, 0x5d, 0x10, 0x9b, 0x3e, 0x17, 0x60, 0xf6, 0x5c, 0x50, 0xa1, 0x6c, 0x05,
	0xc7, 0x86, 0x6d, 0x99, 0x6a, 0xad, 0xad, 0xec, 0x54, 0xf4, 0x88, 0x24, 0xe6, 0x92, 0x05, 0xfa,
	0x3d, 0xb5, 0xce, 0xcc, 0x65, 0x14, 0xd9, 0x62, 0x2b, 0x78, 0x3a, 0x18, 0x8c, 0x3d, 0x0b, 0x9b,
	0x6a, 0x83, 0x0a, 0x09, 0x23, 0x64, 0xcf, 0x82, 0xd0, 0x20, 0xca, 0xfb, 0x3d, 0x75, 0x8d, 0xed,
	0x59, 0x3c, 0x40, 0x66, 0xad, 0xa0, 0xef, 0x9c, 0xb8, 0x63, 0xc7, 0x54, 0x5b, 0x54, 0x38, 0x19,
	0xe0, 0xba, 0xc7, 0x21, 0x9b, 0x5e, 0x8f, 0x75, 0xf3, 0x11, 0x62, 0xad, 0xe1, 0x63, 0xa3, 0xdf,
	0x0b, 0x54, 0xd4, 0x2e, 0xee, 0x34, 0xf4, 0x88, 0x9c, 0xaa, 0xb8, 0x33, 0x33, 0x15, 0x67, 0x40,
	0x2b, 0x55, 0x25, 0x59, 0xd5, 0xf6, 0x19, 0x94, 0x79, 0x48, 0x79, 0x32, 0x6c, 0x4b, 0x94, 0x9b,
	0x1e, 0xc9, 0x68, 0x3f, 0x96, 0xa1, 0x91, 0x9a, 0xe2, 0x07, 0xe2, 0x86, 0xe4, 0x81, 0x78, 0x95,
	0x64, 0x94, 0xcc, 0xe9, 0xa9, 0xbc, 0x25, 0xbc, 0x93, 0xb9, 0x27, 0x67, 0x8a, 0x77, 0x82, 0x3e,
	0x89, 0xb2, 0x91, 0x1d, 0x98, 0xe7, 0x66, 0xf8, 0x1f, 0xd8, 0xae, 0x11, 0xf2, 0xf3, 0x8b, 0xa5,
	0xea, 0xbf, 0x77, 0x52, 0x76, 0xa3, 0x1a, 0x2e, 0xcb, 0xc8, 0xb0, 0x0a, 0xbf, 0xce, 0x2b, 0xbc,
	0x22, 0x21, 0x42, 0x39, 0x09, 0x72, 0x08, 0xc7, 0x97, 0xaa, 0x4a, 0x08, 0x8a, 0x02, 0xe8, 0x8e,
	0x98, 0xd3, 0xff, 0x95, 0x90, 0x16, 0x32, 0xfe, 0x46, 0x5c, 0x47, 0x9b, 0x32, 0xb1, 0xe4, 0x55,
	0x76, 0x23, 0xa9, 0xcb, 0x73, 0x54, 0x6c, 0x73, 0x46, 0xec, 0xbe, 0xeb, 0xda, 0x4c, 0x28, 0xae,
	0xd9, 0x4f, 0xc5, 0xea, 0x3a, 0x9f, 0x2b, 0x27, 0x54, 0xde, 0x9d, 0x54, 0xe5, 0x5d, 0xc8, 0x15,
	0x15, 0xab, 0xf2, 0x4e, 0xea, 0x44, 0xb8, 0x28, 0x25, 0x1b, 0x9d, 0x16, 0x53, 0x98, 0xbe, 0xb5,
	0x2c, 0xa6, 0xe7, 0x21, 0xed, 0xc9, 0x54, 0xa3, 0x12, 0x90, 0xc2, 0x6f, 0x41, 0xd1, 0x32, 0x19,
	0xf6, 0x35, 0x74, 0xf2, 0x8b, 0xee, 0x4e, 0x01, 0xad, 0x54, 0xe5, 0x47, 0x20, 0xbb, 0x0f, 0xeb,
	0x3d, 0x6c, 0xe3, 0xbc, 0x35, 0xb6, 0x00, 0xe2, 0xac, 0x20, 0xd8, 0x48, 0x26, 0x84, 0x11, 0x0d,
	0xa0, 0xa2, 0xe3, 0xc0, 0x73, 0x9d, 0x00, 0x6b, 0x55, 0x28, 0xdf, 0x33, 0x4d, 0x42, 0x6a, 0x5b,
	0x31, 0x82, 0x67, 0xf7, 0x8b, 0x75, 0x00, 0xbe, 0x3a, 0xe1, 0xae, 0x03, 0x70, 0x23, 0x09, 0xf5,
	0xb3, 0x02, 0x95, 0xc8, 0x28, 0x74, 0x1b, 0x2a, 0xdc, 0x8f, 0x08, 0xf6, 0x2f, 0x2c, 0x04, 0x3b,
	0x3d, 0x66, 0xff, 0x40, 0x70, 0xbf, 0x0b, 0x55, 0x9d, 0x66, 0x7b, 0xd6, 0x61, 0x9c, 0xc0, 0x4f,
	0x41, 0x84, 0x1f, 0x6d, 0x1f, 0x80, 0x09, 0xd1, 0x28, 0xdf, 0x8a, 0xb9, 0x98, 0x47, 0x17, 0xe7,
	0x7b, 0x44, 0x97, 0x89, 0xd5, 0x5c, 0x82, 0x46, 0x1c, 0xd5, 0xec, 0xfd, 0xd2, 0x1e, 0x43, 0x8b,
	0xb3, 0x50, 0x30, 0xa5, 0x5c, 0x2a, 0x94, 0xe9, 0x19, 0x14, 0xb7, 0x23, 0x11, 0x49, 0x42, 0x11,
	0x77, 0x26, 0xf1, 0xee, 0x26, 0x23, 0xc4, 0xd9, 0x03, 0xc3, 0x37, 0x46, 0x38, 0xc4, 0x3e, 0x59,
	0xec, 0x15, 0x9e, 0x50, 0x15, 0x55, 0x9d, 0xfc, 0x92, 0x26, 0xe0, 0x35, 0xc9, 0x6e, 0xde, 0xd6,
	0x33, 0x42, 0x7b, 0x97, 0xb4, 0x6f, 0xcf, 0xc6, 0xd8, 0xa7, 0x6c, 0xb6, 0x35, 0xb2, 0x42, 0xbe,
	0x3a, 0x23, 0x48, 0xac, 0xdc, 0xd3, 0xd3, 0x00, 0x87, 0x51, 0xac, 0x18, 0x45, 0x5a, 0x21, 0x12,
	0xe9, 0xa8, 0x15, 0x22, 0xff, 0xc4, 0x03, 0x0f, 0xfb, 0x07, 0x64, 0x98, 0xed, 0x65, 0x44, 0x92,
	0x1a, 0x38, 0xb5, 0xec, 0x10, 0xfb, 0xfc, 0x2c, 0xde, 0x5e, 0x98, 0x1d, 0x0f, 0x28, 0xab, 0xce,
	0x45, 0xb4, 0xdf, 0x94, 0x38, 0x5a, 0xe4, 0xc4, 0xfc, 0xf0, 0xd6, 0xee, 0x4d, 0x59, 0x7b, 0x25,
	0xb7, 0x71, 0x9b, 0xb2, 0xf8, 0x07, 0x38, 0x93, 0x6a, 0x9c, 0xd8, 0x74, 0x02, 0x48, 0xca, 0xf2,
	0x80, 0x54, 0x90, 0x05, 0x24, 0xed, 0x5d, 0x29, 0xce, 0x3f, 0xbe, 0xee, 0x4d, 0x28, 0x1a, 0x8e,
	0xc9, 0xd3, 0x58, 0x2a, 0xf4, 0x84, 0x1f, 0xed, 0x42, 0xc1, 0xf5, 0x69, 0xba, 0x49, 0x4a, 0x15,
	0x5c, 0x9f, 0xb6, 0xc8, 0x66, 0x9f, 0xdc, 0xa0, 0x8a, 0xb4, 0x45, 0x36, 0xfb, 0xac, 0x11, 0x34,
	0xbf, 0x72, 0xc3, 0xbe, 0xa3, 0x36, 0x59, 0x6b, 0xc5, 0x49, 0xd2, 0x44, 0xd2, 0xa2, 0xe1, 0xb3,
	0x6b, 0x74, 0x56, 0x1c, 0x42, 0x9b, 0xec, 0x64, 0xe9, 0x13, 0x9d, 0x2d, 0x3a, 0x1d, 0xd3, 0x69,
	0xe8, 0x5c, 0x59, 0x0e, 0x3a, 0xdb, 0x50, 0x8b, 0x89, 0x3e, 0x69, 0x5f, 0xe9, 0xca, 0xc2, 0x90,
	0x00, 0xae, 0xab, 0x4b, 0x80, 0x6b, 0x0a, 0x26, 0x4b, 0x7f, 0x1f, 0x26, 0xcb, 0x4b, 0xc1, 0xa4,
	0x00, 0xe9, 0x15, 0x79, 0x48, 0x4f, 0x83, 0x6b, 0x75, 0x29, 0x70, 0xbd, 0xcb, 0xaf, 0x36, 0xb5,
	0xe5, 0x2a, 0x84, 0x5d, 0x70, 0x7a, 0x29, 0x64, 0xad, 0xd3, 0x0c, 0xfb, 0x5f, 0xb6, 0x8a, 0x03,
	0xc6, 0x37, 0xe1, 0xf2, 0x82, 0x1c, 0xda, 0x8b, 0xca, 0xa9, 0x41, 0x6d, 0xf8, 0xbf, 0xc4, 0x0d,
	0x86, 0x6b, 0x61, 0x72, 0xda, 0x4f, 0x05, 0x58, 0x9f, 0x31, 0x11, 0xdd, 0x16, 0xab, 0x45, 0xda,
	0x31, 0x5a, 0x31, 0xb7, 0x84, 0x8a, 0x91, 0x96, 0x9c, 0x57, 0x35, 0x67, 0xa1, 0xe4, 0x18, 0x23,
	0xdc, 0x77, 0xd4, 0x95, 0x76, 0x71, 0xa7, 0xaa, 0x73, 0x8a, 0x77, 0xfe, 0xab, 0x4b, 0x3e, 0x85,
	0x94, 0x64, 0x9f, 0x42, 0xb4, 0xc7, 0xd0, 0x4c, 0x07, 0x5d, 0x16, 0x52, 0x88, 0x17, 0x34, 0x27,
	0xd8, 0x1b, 0x11, 0xfd, 0xd7, 0xba, 0x50, 0x89, 0xb4, 0x49, 0x43, 0xd3, 0xc7, 0x50, 0x7e, 0x60,
	0x1b, 0xc3, 0x2c, 0xe8, 0x46, 0xb0, 0x72, 0x6a, 0x1b, 0x43, 0xca, 0x5f, 0xd1, 0xe9, 0xbf, 0x76,
	0x0f, 0xca, 0xf3, 0x1e, 0x39, 0x90, 0x70, 0x01, 0x6f, 0xf0, 0xe4, 0x8b, 0x1e, 0xb9, 0x8a, 0xc9,
	0x23, 0x97, 0xb6, 0x07, 0x8d, 0x83, 0x38, 0xb1, 0xb2, 0x14, 0xa5, 0x7b, 0xc1, 0xc2, 0x74, 0x2f,
	0xd8, 0xfd, 0x63, 0x0d, 0x9a, 0x7c, 0x6b, 0x0f, 0xb1, 0xff, 0xda, 0x1a, 0x60, 0xf4, 0x0c, 0x6a,
	0x0f, 0x71, 0x18, 0xb7, 0x48, 0xda, 0xc2, 0x7c, 0xa0, 0xa0, 0xb6, 0xb9, 0xb5, 0x90, 0x27, 0x40,
	0x4f, 0x01, 0x12, 0x95, 0x39, 0x1a, 0x69, 0x4f, 0xb2, 0xb9, 0xb8, 0x0d, 0x43, 0xdf, 0xc2, 0x5a,
	0xa2, 0x90, 0x3d, 0xbf, 0x5c, 0xce, 0xcd, 0x5b, 0x66, 0xab, 0x96, 0xcb, 0x17, 0xa0, 0x17, 0xd0,
	0x4c, 0xab, 0x97, 0xb2, 0x39, 0xff, 0x9d, 0x04, 0x7d, 0x09, 0x40, 0x7a, 0x58, 0xee, 0xc5, 0x62,
	0x27, 0xe7, 0xc5, 0x80, 0x37, 0xc1, 0x48, 0x87, 0xd6, 0x7d, 0x23, 0x1c, 0xbc, 0x4c, 0x14, 0x06,
	0x28, 0x67, 0x23, 0xe6, 0x6e, 0x14, 0xef, 0xb1, 0xd1, 0x11, 0x34, 0x52, 0x6d, 0xbb, 0x94, 0xdf,
	0xed, 0x6c, 0x9e, 0xa4, 0x03, 0x47, 0xdf, 0xc1, 0x19, 0x6a, 0x6a, 0xfa, 0x4a, 0x80, 0xae, 0x2c,
	0x14, 0x4c, 0x2e, 0x0e, 0xb9, 0x66, 0x7f, 0x33, 0xfd, 0xca, 0x70, 0x59, 0xe6, 0xae, 0x32, 0xdf,
	0xf4, 0xe4, 0xba, 0x10, 0x9b, 0x9e, 0xbe, 0x31, 0x21, 0x99, 0x57, 0x47, 0x29, 0xd3, 0x75, 0x68,
	0x26, 0x1b, 0x48, 0x73, 0x24, 0x3f, 0x8d, 0xf2, 0x32, 0xc3, 0xc8, 0x7a, 0x89, 0xbe, 0x2a, 0xfb,
	0x4e, 0x2a, 0x15, 0x96, 0xaf, 0xa7, 0xee, 0x77, 0xb2, 0x96, 0xe7, 0xe7, 0xca, 0x0b, 0x68, 0x1d,
	0xe2, 0x30, 0xfd, 0xe6, 0x29, 0xf3, 0xc8, 0x97, 0x1b, 0xe9, 0x47, 0x50, 0xb9, 0x6f, 0x39, 0x34,
	0xd4, 0x28, 0xef, 0x4e, 0x94, 0xab, 0xec, 0x09, 0xc0, 0x91, 0x73, 0xf2, 0xde, 0xd4, 0x1d, 0xc3,
	0x5a, 0xcf, 0x0a, 0x8c, 0x13, 0x3b, 0xc9, 0xb0, 0xed, 0x9c, 0xca, 0x93, 0xca, 0xae, 0x23, 0x68,
	0xee, 0x3b, 0x1f, 0x44, 0x2d, 0x6d, 0xa8, 0x26, 0xef, 0x57, 0xed, 0x31, 0xac, 0xe9, 0xd8, 0xc6,
	0x46, 0xf0, 0x9e, 0xcd, 0x7d, 0x04, 0x70, 0x88, 0xc3, 0xa8, 0x5f, 0x9d, 0x53, 0x3c, 0x1c, 0xb9,
	0x73, 0x95, 0x3d, 0x86, 0xda, 0x21, 0x0e, 0xe3, 0x0e, 0xf6, 0x1f, 0x6a, 0x7b, 0x0e, 0x8d, 0x7b,
	0xa6, 0x99, 0x60, 0xf8, 0x3c, 0x87, 0x53, 0x28, 0x9f, 0xa7, 0xf5, 0xa4, 0x44, 0xdb, 0xa4, 0xdd,
	0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x02, 0x86, 0xc3, 0xa4, 0x1b, 0x00, 0x00,
}
