// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/racklot/racklot.proto

package go_micro_srv_racklot

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IDReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IDReq) Reset()         { *m = IDReq{} }
func (m *IDReq) String() string { return proto.CompactTextString(m) }
func (*IDReq) ProtoMessage()    {}
func (*IDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{0}
}

func (m *IDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDReq.Unmarshal(m, b)
}
func (m *IDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDReq.Marshal(b, m, deterministic)
}
func (m *IDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDReq.Merge(m, src)
}
func (m *IDReq) XXX_Size() int {
	return xxx_messageInfo_IDReq.Size(m)
}
func (m *IDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IDReq.DiscardUnknown(m)
}

var xxx_messageInfo_IDReq proto.InternalMessageInfo

func (m *IDReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// RacklotType 货位类型
type RacklotType struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Length               int32    `protobuf:"varint,4,opt,name=Length,proto3" json:"Length,omitempty"`
	Width                int32    `protobuf:"varint,5,opt,name=Width,proto3" json:"Width,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotType) Reset()         { *m = RacklotType{} }
func (m *RacklotType) String() string { return proto.CompactTextString(m) }
func (*RacklotType) ProtoMessage()    {}
func (*RacklotType) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{1}
}

func (m *RacklotType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotType.Unmarshal(m, b)
}
func (m *RacklotType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotType.Marshal(b, m, deterministic)
}
func (m *RacklotType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotType.Merge(m, src)
}
func (m *RacklotType) XXX_Size() int {
	return xxx_messageInfo_RacklotType.Size(m)
}
func (m *RacklotType) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotType.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotType proto.InternalMessageInfo

func (m *RacklotType) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RacklotType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RacklotType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RacklotType) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *RacklotType) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

type RacklotTypes struct {
	RacklotTypes         []*RacklotType `protobuf:"bytes,1,rep,name=racklotTypes,proto3" json:"racklotTypes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RacklotTypes) Reset()         { *m = RacklotTypes{} }
func (m *RacklotTypes) String() string { return proto.CompactTextString(m) }
func (*RacklotTypes) ProtoMessage()    {}
func (*RacklotTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{2}
}

func (m *RacklotTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotTypes.Unmarshal(m, b)
}
func (m *RacklotTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotTypes.Marshal(b, m, deterministic)
}
func (m *RacklotTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotTypes.Merge(m, src)
}
func (m *RacklotTypes) XXX_Size() int {
	return xxx_messageInfo_RacklotTypes.Size(m)
}
func (m *RacklotTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotTypes.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotTypes proto.InternalMessageInfo

func (m *RacklotTypes) GetRacklotTypes() []*RacklotType {
	if m != nil {
		return m.RacklotTypes
	}
	return nil
}

// MultipleGroup 货位重列组
type MultipleGroup struct {
	RacklotID            int32    `protobuf:"varint,1,opt,name=racklotID,proto3" json:"racklotID,omitempty"`
	Group                int32    `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	Item                 int32    `protobuf:"varint,3,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultipleGroup) Reset()         { *m = MultipleGroup{} }
func (m *MultipleGroup) String() string { return proto.CompactTextString(m) }
func (*MultipleGroup) ProtoMessage()    {}
func (*MultipleGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{3}
}

func (m *MultipleGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultipleGroup.Unmarshal(m, b)
}
func (m *MultipleGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultipleGroup.Marshal(b, m, deterministic)
}
func (m *MultipleGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultipleGroup.Merge(m, src)
}
func (m *MultipleGroup) XXX_Size() int {
	return xxx_messageInfo_MultipleGroup.Size(m)
}
func (m *MultipleGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MultipleGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MultipleGroup proto.InternalMessageInfo

func (m *MultipleGroup) GetRacklotID() int32 {
	if m != nil {
		return m.RacklotID
	}
	return 0
}

func (m *MultipleGroup) GetGroup() int32 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *MultipleGroup) GetItem() int32 {
	if m != nil {
		return m.Item
	}
	return 0
}

// RacklotGroup 货位组
type RacklotGroup struct {
	RacklotID            int32    `protobuf:"varint,1,opt,name=racklotID,proto3" json:"racklotID,omitempty"`
	Group                int32    `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotGroup) Reset()         { *m = RacklotGroup{} }
func (m *RacklotGroup) String() string { return proto.CompactTextString(m) }
func (*RacklotGroup) ProtoMessage()    {}
func (*RacklotGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{4}
}

func (m *RacklotGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotGroup.Unmarshal(m, b)
}
func (m *RacklotGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotGroup.Marshal(b, m, deterministic)
}
func (m *RacklotGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotGroup.Merge(m, src)
}
func (m *RacklotGroup) XXX_Size() int {
	return xxx_messageInfo_RacklotGroup.Size(m)
}
func (m *RacklotGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotGroup.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotGroup proto.InternalMessageInfo

func (m *RacklotGroup) GetRacklotID() int32 {
	if m != nil {
		return m.RacklotID
	}
	return 0
}

func (m *RacklotGroup) GetGroup() int32 {
	if m != nil {
		return m.Group
	}
	return 0
}

// RacklotGroup 货位组
type RacklotsGroup struct {
	RacklotIDs           []int32  `protobuf:"varint,1,rep,packed,name=racklotIDs,proto3" json:"racklotIDs,omitempty"`
	Group                int32    `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotsGroup) Reset()         { *m = RacklotsGroup{} }
func (m *RacklotsGroup) String() string { return proto.CompactTextString(m) }
func (*RacklotsGroup) ProtoMessage()    {}
func (*RacklotsGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{5}
}

func (m *RacklotsGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotsGroup.Unmarshal(m, b)
}
func (m *RacklotsGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotsGroup.Marshal(b, m, deterministic)
}
func (m *RacklotsGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotsGroup.Merge(m, src)
}
func (m *RacklotsGroup) XXX_Size() int {
	return xxx_messageInfo_RacklotsGroup.Size(m)
}
func (m *RacklotsGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotsGroup.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotsGroup proto.InternalMessageInfo

func (m *RacklotsGroup) GetRacklotIDs() []int32 {
	if m != nil {
		return m.RacklotIDs
	}
	return nil
}

func (m *RacklotsGroup) GetGroup() int32 {
	if m != nil {
		return m.Group
	}
	return 0
}

// Racklot 货位
type Racklot struct {
	Id     int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type   *RacklotType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	X      int32        `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	Y      int32        `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	Angle  float32      `protobuf:"fixed32,5,opt,name=angle,proto3" json:"angle,omitempty"`
	Length int32        `protobuf:"varint,6,opt,name=length,proto3" json:"length,omitempty"`
	Width  int32        `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	// 站台重列分组信息
	MultiGroup *MultipleGroup `protobuf:"bytes,8,opt,name=multiGroup,proto3" json:"multiGroup,omitempty"`
	// 站台分组的ID
	GroupID     int32  `protobuf:"varint,9,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	// 站台是否有效，被禁用则无效，启用则有效，默认为有效
	Valid bool `protobuf:"varint,11,opt,name=valid,proto3" json:"valid,omitempty"`
	// 关联的货架ID，在货位上没有放置货架时为空
	RackID int32 `protobuf:"varint,12,opt,name=rackID,proto3" json:"rackID,omitempty"`
	//是否被占用
	IsOccupied           bool     `protobuf:"varint,13,opt,name=IsOccupied,proto3" json:"IsOccupied,omitempty"`
	AreaID               int32    `protobuf:"varint,14,opt,name=areaID,proto3" json:"areaID,omitempty"`
	StationID            int32    `protobuf:"varint,15,opt,name=stationID,proto3" json:"stationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Racklot) Reset()         { *m = Racklot{} }
func (m *Racklot) String() string { return proto.CompactTextString(m) }
func (*Racklot) ProtoMessage()    {}
func (*Racklot) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{6}
}

func (m *Racklot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Racklot.Unmarshal(m, b)
}
func (m *Racklot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Racklot.Marshal(b, m, deterministic)
}
func (m *Racklot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Racklot.Merge(m, src)
}
func (m *Racklot) XXX_Size() int {
	return xxx_messageInfo_Racklot.Size(m)
}
func (m *Racklot) XXX_DiscardUnknown() {
	xxx_messageInfo_Racklot.DiscardUnknown(m)
}

var xxx_messageInfo_Racklot proto.InternalMessageInfo

func (m *Racklot) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Racklot) GetType() *RacklotType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Racklot) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Racklot) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Racklot) GetAngle() float32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

func (m *Racklot) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Racklot) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Racklot) GetMultiGroup() *MultipleGroup {
	if m != nil {
		return m.MultiGroup
	}
	return nil
}

func (m *Racklot) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *Racklot) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Racklot) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *Racklot) GetRackID() int32 {
	if m != nil {
		return m.RackID
	}
	return 0
}

func (m *Racklot) GetIsOccupied() bool {
	if m != nil {
		return m.IsOccupied
	}
	return false
}

func (m *Racklot) GetAreaID() int32 {
	if m != nil {
		return m.AreaID
	}
	return 0
}

func (m *Racklot) GetStationID() int32 {
	if m != nil {
		return m.StationID
	}
	return 0
}

type UpdateRacklotReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RacklotType          int32    `protobuf:"varint,2,opt,name=racklotType,proto3" json:"racklotType,omitempty"`
	X                    int32    `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int32    `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	Angle                float32  `protobuf:"fixed32,5,opt,name=angle,proto3" json:"angle,omitempty"`
	Length               int32    `protobuf:"varint,6,opt,name=length,proto3" json:"length,omitempty"`
	Width                int32    `protobuf:"varint,7,opt,name=width,proto3" json:"width,omitempty"`
	Description          string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	StationID            int32    `protobuf:"varint,15,opt,name=stationID,proto3" json:"stationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRacklotReq) Reset()         { *m = UpdateRacklotReq{} }
func (m *UpdateRacklotReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRacklotReq) ProtoMessage()    {}
func (*UpdateRacklotReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{7}
}

func (m *UpdateRacklotReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRacklotReq.Unmarshal(m, b)
}
func (m *UpdateRacklotReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRacklotReq.Marshal(b, m, deterministic)
}
func (m *UpdateRacklotReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRacklotReq.Merge(m, src)
}
func (m *UpdateRacklotReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRacklotReq.Size(m)
}
func (m *UpdateRacklotReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRacklotReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRacklotReq proto.InternalMessageInfo

func (m *UpdateRacklotReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRacklotReq) GetRacklotType() int32 {
	if m != nil {
		return m.RacklotType
	}
	return 0
}

func (m *UpdateRacklotReq) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *UpdateRacklotReq) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *UpdateRacklotReq) GetAngle() float32 {
	if m != nil {
		return m.Angle
	}
	return 0
}

func (m *UpdateRacklotReq) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *UpdateRacklotReq) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *UpdateRacklotReq) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateRacklotReq) GetStationID() int32 {
	if m != nil {
		return m.StationID
	}
	return 0
}

type UpdateRacklotsReq struct {
	Ids                  []int32  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	RacklotType          int32    `protobuf:"varint,2,opt,name=racklotType,proto3" json:"racklotType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRacklotsReq) Reset()         { *m = UpdateRacklotsReq{} }
func (m *UpdateRacklotsReq) String() string { return proto.CompactTextString(m) }
func (*UpdateRacklotsReq) ProtoMessage()    {}
func (*UpdateRacklotsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{8}
}

func (m *UpdateRacklotsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRacklotsReq.Unmarshal(m, b)
}
func (m *UpdateRacklotsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRacklotsReq.Marshal(b, m, deterministic)
}
func (m *UpdateRacklotsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRacklotsReq.Merge(m, src)
}
func (m *UpdateRacklotsReq) XXX_Size() int {
	return xxx_messageInfo_UpdateRacklotsReq.Size(m)
}
func (m *UpdateRacklotsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRacklotsReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRacklotsReq proto.InternalMessageInfo

func (m *UpdateRacklotsReq) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *UpdateRacklotsReq) GetRacklotType() int32 {
	if m != nil {
		return m.RacklotType
	}
	return 0
}

type DeleteRacklotsReq struct {
	Ids                  []int32  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	StationIDs           []int32  `protobuf:"varint,2,rep,packed,name=stationIDs,proto3" json:"stationIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRacklotsReq) Reset()         { *m = DeleteRacklotsReq{} }
func (m *DeleteRacklotsReq) String() string { return proto.CompactTextString(m) }
func (*DeleteRacklotsReq) ProtoMessage()    {}
func (*DeleteRacklotsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{9}
}

func (m *DeleteRacklotsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRacklotsReq.Unmarshal(m, b)
}
func (m *DeleteRacklotsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRacklotsReq.Marshal(b, m, deterministic)
}
func (m *DeleteRacklotsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRacklotsReq.Merge(m, src)
}
func (m *DeleteRacklotsReq) XXX_Size() int {
	return xxx_messageInfo_DeleteRacklotsReq.Size(m)
}
func (m *DeleteRacklotsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRacklotsReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRacklotsReq proto.InternalMessageInfo

func (m *DeleteRacklotsReq) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *DeleteRacklotsReq) GetStationIDs() []int32 {
	if m != nil {
		return m.StationIDs
	}
	return nil
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{10}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type AddResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResp) Reset()         { *m = AddResp{} }
func (m *AddResp) String() string { return proto.CompactTextString(m) }
func (*AddResp) ProtoMessage()    {}
func (*AddResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{11}
}

func (m *AddResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResp.Unmarshal(m, b)
}
func (m *AddResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResp.Marshal(b, m, deterministic)
}
func (m *AddResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResp.Merge(m, src)
}
func (m *AddResp) XXX_Size() int {
	return xxx_messageInfo_AddResp.Size(m)
}
func (m *AddResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddResp proto.InternalMessageInfo

type RacklotIDReq struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotIDReq) Reset()         { *m = RacklotIDReq{} }
func (m *RacklotIDReq) String() string { return proto.CompactTextString(m) }
func (*RacklotIDReq) ProtoMessage()    {}
func (*RacklotIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{12}
}

func (m *RacklotIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotIDReq.Unmarshal(m, b)
}
func (m *RacklotIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotIDReq.Marshal(b, m, deterministic)
}
func (m *RacklotIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotIDReq.Merge(m, src)
}
func (m *RacklotIDReq) XXX_Size() int {
	return xxx_messageInfo_RacklotIDReq.Size(m)
}
func (m *RacklotIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotIDReq proto.InternalMessageInfo

func (m *RacklotIDReq) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResp) Reset()         { *m = DeleteResp{} }
func (m *DeleteResp) String() string { return proto.CompactTextString(m) }
func (*DeleteResp) ProtoMessage()    {}
func (*DeleteResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{13}
}

func (m *DeleteResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResp.Unmarshal(m, b)
}
func (m *DeleteResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResp.Marshal(b, m, deterministic)
}
func (m *DeleteResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResp.Merge(m, src)
}
func (m *DeleteResp) XXX_Size() int {
	return xxx_messageInfo_DeleteResp.Size(m)
}
func (m *DeleteResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResp proto.InternalMessageInfo

type UpdateResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResp) Reset()         { *m = UpdateResp{} }
func (m *UpdateResp) String() string { return proto.CompactTextString(m) }
func (*UpdateResp) ProtoMessage()    {}
func (*UpdateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{14}
}

func (m *UpdateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResp.Unmarshal(m, b)
}
func (m *UpdateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResp.Marshal(b, m, deterministic)
}
func (m *UpdateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResp.Merge(m, src)
}
func (m *UpdateResp) XXX_Size() int {
	return xxx_messageInfo_UpdateResp.Size(m)
}
func (m *UpdateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResp proto.InternalMessageInfo

type Query struct {
	Limit                uint32       `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32       `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Page                 uint32       `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PerPage              uint32       `protobuf:"varint,4,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	QueryString          string       `protobuf:"bytes,5,opt,name=queryString,proto3" json:"queryString,omitempty"`
	QueryParams          []*Parameter `protobuf:"bytes,6,rep,name=queryParams,proto3" json:"queryParams,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{15}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Query) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *Query) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Query) GetPerPage() uint32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *Query) GetQueryString() string {
	if m != nil {
		return m.QueryString
	}
	return ""
}

func (m *Query) GetQueryParams() []*Parameter {
	if m != nil {
		return m.QueryParams
	}
	return nil
}

type GraphqlQuery struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphqlQuery) Reset()         { *m = GraphqlQuery{} }
func (m *GraphqlQuery) String() string { return proto.CompactTextString(m) }
func (*GraphqlQuery) ProtoMessage()    {}
func (*GraphqlQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{16}
}

func (m *GraphqlQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphqlQuery.Unmarshal(m, b)
}
func (m *GraphqlQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphqlQuery.Marshal(b, m, deterministic)
}
func (m *GraphqlQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphqlQuery.Merge(m, src)
}
func (m *GraphqlQuery) XXX_Size() int {
	return xxx_messageInfo_GraphqlQuery.Size(m)
}
func (m *GraphqlQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphqlQuery.DiscardUnknown(m)
}

var xxx_messageInfo_GraphqlQuery proto.InternalMessageInfo

func (m *GraphqlQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type GraphqlRacklots struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GraphqlRacklots) Reset()         { *m = GraphqlRacklots{} }
func (m *GraphqlRacklots) String() string { return proto.CompactTextString(m) }
func (*GraphqlRacklots) ProtoMessage()    {}
func (*GraphqlRacklots) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{17}
}

func (m *GraphqlRacklots) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphqlRacklots.Unmarshal(m, b)
}
func (m *GraphqlRacklots) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphqlRacklots.Marshal(b, m, deterministic)
}
func (m *GraphqlRacklots) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphqlRacklots.Merge(m, src)
}
func (m *GraphqlRacklots) XXX_Size() int {
	return xxx_messageInfo_GraphqlRacklots.Size(m)
}
func (m *GraphqlRacklots) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphqlRacklots.DiscardUnknown(m)
}

var xxx_messageInfo_GraphqlRacklots proto.InternalMessageInfo

func (m *GraphqlRacklots) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type Racklots struct {
	Racklots             []*Racklot `protobuf:"bytes,1,rep,name=racklots,proto3" json:"racklots,omitempty"`
	Totals               uint32     `protobuf:"varint,4,opt,name=totals,proto3" json:"totals,omitempty"`
	Totalpages           uint32     `protobuf:"varint,2,opt,name=totalpages,proto3" json:"totalpages,omitempty"`
	Currpages            uint32     `protobuf:"varint,3,opt,name=currpages,proto3" json:"currpages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Racklots) Reset()         { *m = Racklots{} }
func (m *Racklots) String() string { return proto.CompactTextString(m) }
func (*Racklots) ProtoMessage()    {}
func (*Racklots) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{18}
}

func (m *Racklots) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Racklots.Unmarshal(m, b)
}
func (m *Racklots) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Racklots.Marshal(b, m, deterministic)
}
func (m *Racklots) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Racklots.Merge(m, src)
}
func (m *Racklots) XXX_Size() int {
	return xxx_messageInfo_Racklots.Size(m)
}
func (m *Racklots) XXX_DiscardUnknown() {
	xxx_messageInfo_Racklots.DiscardUnknown(m)
}

var xxx_messageInfo_Racklots proto.InternalMessageInfo

func (m *Racklots) GetRacklots() []*Racklot {
	if m != nil {
		return m.Racklots
	}
	return nil
}

func (m *Racklots) GetTotals() uint32 {
	if m != nil {
		return m.Totals
	}
	return 0
}

func (m *Racklots) GetTotalpages() uint32 {
	if m != nil {
		return m.Totalpages
	}
	return 0
}

func (m *Racklots) GetCurrpages() uint32 {
	if m != nil {
		return m.Currpages
	}
	return 0
}

type RackIDReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RackID               int32    `protobuf:"varint,2,opt,name=rackID,proto3" json:"rackID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RackIDReq) Reset()         { *m = RackIDReq{} }
func (m *RackIDReq) String() string { return proto.CompactTextString(m) }
func (*RackIDReq) ProtoMessage()    {}
func (*RackIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{19}
}

func (m *RackIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackIDReq.Unmarshal(m, b)
}
func (m *RackIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackIDReq.Marshal(b, m, deterministic)
}
func (m *RackIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackIDReq.Merge(m, src)
}
func (m *RackIDReq) XXX_Size() int {
	return xxx_messageInfo_RackIDReq.Size(m)
}
func (m *RackIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RackIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_RackIDReq proto.InternalMessageInfo

func (m *RackIDReq) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RackIDReq) GetRackID() int32 {
	if m != nil {
		return m.RackID
	}
	return 0
}

type RackIDsReq struct {
	RackID               []*RackIDReq `protobuf:"bytes,1,rep,name=rackID,proto3" json:"rackID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RackIDsReq) Reset()         { *m = RackIDsReq{} }
func (m *RackIDsReq) String() string { return proto.CompactTextString(m) }
func (*RackIDsReq) ProtoMessage()    {}
func (*RackIDsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{20}
}

func (m *RackIDsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RackIDsReq.Unmarshal(m, b)
}
func (m *RackIDsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RackIDsReq.Marshal(b, m, deterministic)
}
func (m *RackIDsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RackIDsReq.Merge(m, src)
}
func (m *RackIDsReq) XXX_Size() int {
	return xxx_messageInfo_RackIDsReq.Size(m)
}
func (m *RackIDsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RackIDsReq.DiscardUnknown(m)
}

var xxx_messageInfo_RackIDsReq proto.InternalMessageInfo

func (m *RackIDsReq) GetRackID() []*RackIDReq {
	if m != nil {
		return m.RackID
	}
	return nil
}

type RacklotIDsReq struct {
	Ids                  []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotIDsReq) Reset()         { *m = RacklotIDsReq{} }
func (m *RacklotIDsReq) String() string { return proto.CompactTextString(m) }
func (*RacklotIDsReq) ProtoMessage()    {}
func (*RacklotIDsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{21}
}

func (m *RacklotIDsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotIDsReq.Unmarshal(m, b)
}
func (m *RacklotIDsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotIDsReq.Marshal(b, m, deterministic)
}
func (m *RacklotIDsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotIDsReq.Merge(m, src)
}
func (m *RacklotIDsReq) XXX_Size() int {
	return xxx_messageInfo_RacklotIDsReq.Size(m)
}
func (m *RacklotIDsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotIDsReq.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotIDsReq proto.InternalMessageInfo

func (m *RacklotIDsReq) GetIds() []uint32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type RacklotGroupsReq struct {
	GroupID              int32    `protobuf:"varint,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	RacklotIDs           []int32  `protobuf:"varint,2,rep,packed,name=racklotIDs,proto3" json:"racklotIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacklotGroupsReq) Reset()         { *m = RacklotGroupsReq{} }
func (m *RacklotGroupsReq) String() string { return proto.CompactTextString(m) }
func (*RacklotGroupsReq) ProtoMessage()    {}
func (*RacklotGroupsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{22}
}

func (m *RacklotGroupsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacklotGroupsReq.Unmarshal(m, b)
}
func (m *RacklotGroupsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacklotGroupsReq.Marshal(b, m, deterministic)
}
func (m *RacklotGroupsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacklotGroupsReq.Merge(m, src)
}
func (m *RacklotGroupsReq) XXX_Size() int {
	return xxx_messageInfo_RacklotGroupsReq.Size(m)
}
func (m *RacklotGroupsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RacklotGroupsReq.DiscardUnknown(m)
}

var xxx_messageInfo_RacklotGroupsReq proto.InternalMessageInfo

func (m *RacklotGroupsReq) GetGroupID() int32 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *RacklotGroupsReq) GetRacklotIDs() []int32 {
	if m != nil {
		return m.RacklotIDs
	}
	return nil
}

type Parameter struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}
func (*Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed2705d6df90f82d, []int{23}
}

func (m *Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter.Unmarshal(m, b)
}
func (m *Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter.Marshal(b, m, deterministic)
}
func (m *Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter.Merge(m, src)
}
func (m *Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameter.Size(m)
}
func (m *Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter proto.InternalMessageInfo

func (m *Parameter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Parameter) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*IDReq)(nil), "go.micro.srv.racklot.IDReq")
	proto.RegisterType((*RacklotType)(nil), "go.micro.srv.racklot.RacklotType")
	proto.RegisterType((*RacklotTypes)(nil), "go.micro.srv.racklot.RacklotTypes")
	proto.RegisterType((*MultipleGroup)(nil), "go.micro.srv.racklot.MultipleGroup")
	proto.RegisterType((*RacklotGroup)(nil), "go.micro.srv.racklot.RacklotGroup")
	proto.RegisterType((*RacklotsGroup)(nil), "go.micro.srv.racklot.RacklotsGroup")
	proto.RegisterType((*Racklot)(nil), "go.micro.srv.racklot.Racklot")
	proto.RegisterType((*UpdateRacklotReq)(nil), "go.micro.srv.racklot.UpdateRacklotReq")
	proto.RegisterType((*UpdateRacklotsReq)(nil), "go.micro.srv.racklot.UpdateRacklotsReq")
	proto.RegisterType((*DeleteRacklotsReq)(nil), "go.micro.srv.racklot.DeleteRacklotsReq")
	proto.RegisterType((*Response)(nil), "go.micro.srv.racklot.Response")
	proto.RegisterType((*AddResp)(nil), "go.micro.srv.racklot.AddResp")
	proto.RegisterType((*RacklotIDReq)(nil), "go.micro.srv.racklot.RacklotIDReq")
	proto.RegisterType((*DeleteResp)(nil), "go.micro.srv.racklot.DeleteResp")
	proto.RegisterType((*UpdateResp)(nil), "go.micro.srv.racklot.UpdateResp")
	proto.RegisterType((*Query)(nil), "go.micro.srv.racklot.Query")
	proto.RegisterType((*GraphqlQuery)(nil), "go.micro.srv.racklot.GraphqlQuery")
	proto.RegisterType((*GraphqlRacklots)(nil), "go.micro.srv.racklot.GraphqlRacklots")
	proto.RegisterType((*Racklots)(nil), "go.micro.srv.racklot.Racklots")
	proto.RegisterType((*RackIDReq)(nil), "go.micro.srv.racklot.RackIDReq")
	proto.RegisterType((*RackIDsReq)(nil), "go.micro.srv.racklot.RackIDsReq")
	proto.RegisterType((*RacklotIDsReq)(nil), "go.micro.srv.racklot.RacklotIDsReq")
	proto.RegisterType((*RacklotGroupsReq)(nil), "go.micro.srv.racklot.RacklotGroupsReq")
	proto.RegisterType((*Parameter)(nil), "go.micro.srv.racklot.Parameter")
}

func init() { proto.RegisterFile("proto/racklot/racklot.proto", fileDescriptor_ed2705d6df90f82d) }

var fileDescriptor_ed2705d6df90f82d = []byte{
	// 1178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdf, 0x72, 0xdb, 0x44,
	0x17, 0x1f, 0x39, 0x71, 0x6c, 0x1f, 0x5b, 0x4e, 0xb2, 0x5f, 0xe6, 0x43, 0xa4, 0x10, 0x5c, 0x15,
	0x4a, 0x6e, 0x30, 0x33, 0xed, 0x30, 0x0c, 0x97, 0x09, 0xf6, 0x64, 0x5c, 0x9a, 0x69, 0xb2, 0x69,
	0x08, 0x9d, 0x61, 0x60, 0x14, 0x6b, 0xeb, 0x68, 0x2a, 0x5b, 0x8a, 0x56, 0x0e, 0xf1, 0x25, 0xcf,
	0xc1, 0x1d, 0xef, 0xc0, 0x43, 0xf0, 0x1e, 0x3c, 0x08, 0xb3, 0x67, 0xd7, 0xd2, 0xca, 0xb1, 0x25,
	0x01, 0xee, 0x55, 0x75, 0xce, 0x9e, 0xfd, 0xed, 0x39, 0xe7, 0x77, 0xfe, 0xd4, 0x81, 0x47, 0x61,
	0x14, 0xc4, 0xc1, 0x97, 0x91, 0x33, 0x7c, 0xe7, 0x07, 0xf1, 0xfc, 0xdf, 0x2e, 0x6a, 0xc9, 0xde,
	0x28, 0xe8, 0x8e, 0xbd, 0x61, 0x14, 0x74, 0x79, 0x74, 0xd7, 0x55, 0x67, 0xf6, 0x07, 0x50, 0x1d,
	0xf4, 0x28, 0xbb, 0x25, 0x6d, 0xa8, 0x78, 0xae, 0x65, 0x74, 0x8c, 0xc3, 0x2a, 0xad, 0x78, 0xae,
	0xfd, 0xab, 0x01, 0x4d, 0x2a, 0x8d, 0x5e, 0xcf, 0x42, 0xb6, 0x78, 0x4e, 0x08, 0x6c, 0x4e, 0x9c,
	0x31, 0xb3, 0x2a, 0x1d, 0xe3, 0xb0, 0x41, 0xf1, 0x9b, 0x74, 0xa0, 0xe9, 0x32, 0x3e, 0x8c, 0xbc,
	0x30, 0xf6, 0x82, 0x89, 0xb5, 0x81, 0x47, 0xba, 0x8a, 0xfc, 0x1f, 0xb6, 0x5e, 0xb2, 0xc9, 0x28,
	0xbe, 0xb1, 0x36, 0x11, 0x49, 0x49, 0x64, 0x0f, 0xaa, 0x57, 0x9e, 0x1b, 0xdf, 0x58, 0x55, 0x54,
	0x4b, 0xc1, 0xbe, 0x84, 0x96, 0xe6, 0x02, 0x27, 0x7d, 0x68, 0x45, 0x9a, 0x6c, 0x19, 0x9d, 0x8d,
	0xc3, 0xe6, 0xb3, 0xc7, 0xdd, 0x65, 0x91, 0x75, 0xb5, 0x9b, 0x34, 0x73, 0xcd, 0xbe, 0x02, 0xf3,
	0x74, 0xea, 0xc7, 0x5e, 0xe8, 0xb3, 0x93, 0x28, 0x98, 0x86, 0xe4, 0x23, 0x68, 0x28, 0x83, 0x41,
	0x4f, 0x85, 0x98, 0x2a, 0x84, 0x6f, 0x23, 0x61, 0x86, 0xa1, 0x56, 0xa9, 0x14, 0x44, 0xfc, 0x5e,
	0xcc, 0xc6, 0x18, 0x64, 0x95, 0xe2, 0xb7, 0x7d, 0x9c, 0xf8, 0xfb, 0xaf, 0x71, 0xed, 0x3e, 0x98,
	0x0a, 0x83, 0x4b, 0x90, 0x03, 0x80, 0xe4, 0x8e, 0x0c, 0xb9, 0x4a, 0x35, 0xcd, 0x0a, 0x98, 0x3f,
	0x36, 0xa0, 0xa6, 0x70, 0x1e, 0x50, 0xf7, 0x15, 0x6c, 0xc6, 0xb3, 0x50, 0x52, 0x57, 0x2a, 0x7d,
	0x68, 0x4e, 0x5a, 0x60, 0xdc, 0xab, 0x70, 0x8d, 0x7b, 0x21, 0xcd, 0x14, 0x89, 0xc6, 0x4c, 0x38,
	0xe1, 0x4c, 0x46, 0x3e, 0x43, 0xfe, 0x2a, 0x54, 0x0a, 0x82, 0x6d, 0x5f, 0xb2, 0xbd, 0x25, 0xd9,
	0xf6, 0x13, 0xb6, 0x7f, 0x41, 0xb6, 0x6b, 0xd2, 0x65, 0x14, 0xc8, 0xb7, 0x00, 0x63, 0x41, 0x0b,
	0x86, 0x6d, 0xd5, 0xd1, 0xb9, 0x27, 0xcb, 0x9d, 0xcb, 0xd0, 0x47, 0xb5, 0x6b, 0xc4, 0x82, 0x1a,
	0x26, 0x60, 0xd0, 0xb3, 0x1a, 0x08, 0x3e, 0x17, 0x17, 0x8b, 0x13, 0x1e, 0x16, 0xe7, 0x1e, 0x54,
	0xef, 0x1c, 0xdf, 0x73, 0xad, 0x66, 0xc7, 0x38, 0xac, 0x53, 0x29, 0x88, 0x20, 0xc4, 0xb3, 0x83,
	0x9e, 0xd5, 0x92, 0x41, 0x48, 0x49, 0xf0, 0x32, 0xe0, 0xaf, 0x86, 0xc3, 0x69, 0xe8, 0x31, 0xd7,
	0x32, 0xf1, 0x8a, 0xa6, 0x11, 0xf7, 0x9c, 0x88, 0x39, 0x83, 0x9e, 0xd5, 0x96, 0xf7, 0xa4, 0x24,
	0x8a, 0x82, 0xc7, 0x8e, 0x78, 0x70, 0xd0, 0xb3, 0xb6, 0x65, 0x51, 0x24, 0x0a, 0xfb, 0x2f, 0x03,
	0x76, 0x2e, 0x43, 0xd7, 0x89, 0x99, 0x22, 0x60, 0x49, 0x6f, 0x8a, 0x50, 0xb4, 0x82, 0x56, 0xc4,
	0xeb, 0xaa, 0xf7, 0xce, 0xd5, 0x42, 0x32, 0xeb, 0x0f, 0x93, 0x99, 0x1f, 0xe6, 0x09, 0xec, 0x66,
	0xa2, 0xe4, 0x22, 0xcc, 0x1d, 0xd8, 0xf0, 0xdc, 0x79, 0x89, 0x8b, 0xcf, 0xe2, 0x40, 0xed, 0x3e,
	0xec, 0xf6, 0x98, 0xcf, 0x8a, 0x80, 0x0e, 0x00, 0x92, 0xc7, 0xb9, 0x55, 0x91, 0x4d, 0x94, 0x6a,
	0x6c, 0x80, 0x3a, 0x65, 0x3c, 0x0c, 0x26, 0x9c, 0xd9, 0x0d, 0xa8, 0x1d, 0xb9, 0xae, 0x10, 0xed,
	0x83, 0xa4, 0xa1, 0x17, 0x87, 0xa4, 0x89, 0x43, 0xb2, 0x05, 0xa0, 0x5e, 0x17, 0xd6, 0x2d, 0x00,
	0x15, 0x94, 0x90, 0xfe, 0x34, 0xa0, 0x7a, 0x3e, 0x65, 0x11, 0x26, 0xdc, 0xf7, 0xc6, 0x5e, 0xac,
	0x2e, 0x4a, 0x41, 0x24, 0x3c, 0x78, 0xfb, 0x96, 0xb3, 0x18, 0xc3, 0x32, 0xa9, 0x92, 0xc4, 0x60,
	0x09, 0x9d, 0x11, 0x43, 0xf6, 0x4c, 0x8a, 0xdf, 0xe4, 0x43, 0xa8, 0x87, 0x2c, 0xfa, 0x19, 0xf5,
	0x9b, 0xa8, 0xaf, 0x85, 0x2c, 0x3a, 0x13, 0x47, 0x1d, 0x68, 0xde, 0x8a, 0x57, 0x2e, 0xe2, 0xc8,
	0x9b, 0x8c, 0x90, 0xd3, 0x06, 0xd5, 0x55, 0xe4, 0x48, 0x59, 0x9c, 0x39, 0x91, 0x33, 0xe6, 0xd6,
	0x16, 0x0e, 0xcd, 0x4f, 0x96, 0x37, 0x16, 0xda, 0xb0, 0x98, 0x45, 0x54, 0xbf, 0x63, 0x7f, 0x0a,
	0xad, 0x93, 0xc8, 0x09, 0x6f, 0x6e, 0xfd, 0x24, 0x22, 0x3c, 0xc6, 0x88, 0x1a, 0x54, 0x0a, 0xf6,
	0x17, 0xb0, 0xad, 0xac, 0xe6, 0x64, 0x90, 0x7d, 0xa8, 0x47, 0x2a, 0xaf, 0xca, 0x36, 0x91, 0xed,
	0xdf, 0x0c, 0xa8, 0x27, 0x86, 0xdf, 0x40, 0x5d, 0xf9, 0x30, 0x1f, 0xeb, 0x1f, 0xe7, 0xce, 0x25,
	0x9a, 0x98, 0x8b, 0x44, 0xc6, 0x41, 0xec, 0xf8, 0x5c, 0xa5, 0x46, 0x49, 0x82, 0x73, 0xfc, 0x12,
	0x59, 0xe3, 0x2a, 0xc9, 0x9a, 0x46, 0x54, 0xe8, 0x70, 0x1a, 0x45, 0xf2, 0x58, 0x66, 0x3b, 0x55,
	0xd8, 0xcf, 0xa1, 0x41, 0xb1, 0xd1, 0x97, 0x35, 0x60, 0x3a, 0x13, 0x2a, 0xfa, 0x4c, 0xb0, 0xfb,
	0x00, 0xf2, 0x12, 0x96, 0xe1, 0xd7, 0x89, 0x95, 0x91, 0x97, 0xf3, 0xe4, 0x99, 0x04, 0xe6, 0x71,
	0xb2, 0x03, 0x14, 0x92, 0x56, 0xd0, 0x26, 0x16, 0xb4, 0xfd, 0x12, 0x76, 0xf4, 0x55, 0x83, 0x56,
	0xda, 0xec, 0x33, 0xb2, 0xb3, 0x2f, 0xbb, 0x43, 0x2a, 0x8b, 0x3b, 0x44, 0x04, 0x9b, 0x30, 0x2f,
	0x1e, 0x7b, 0xc7, 0xe6, 0xd4, 0x8a, 0x4f, 0x35, 0x18, 0xa7, 0xf3, 0x65, 0x2f, 0x85, 0x67, 0xbf,
	0x13, 0x68, 0x2b, 0x1f, 0x2e, 0x58, 0x74, 0xe7, 0x0d, 0x19, 0xa1, 0xd0, 0x16, 0xad, 0xa3, 0x0d,
	0xa2, 0xe2, 0xed, 0xb2, 0xbf, 0x82, 0x68, 0xd5, 0x83, 0xe4, 0x87, 0x85, 0x51, 0x51, 0x16, 0xb6,
	0xb3, 0xdc, 0x24, 0xed, 0x50, 0x81, 0x9c, 0x99, 0x1d, 0xff, 0x11, 0x39, 0x9d, 0x04, 0xe4, 0x1c,
	0xda, 0x27, 0x2c, 0xd6, 0x61, 0x1f, 0x2d, 0xbf, 0x83, 0xed, 0xb4, 0x6f, 0x17, 0xbe, 0xc9, 0xc9,
	0x0b, 0x80, 0x34, 0xb5, 0x24, 0xbf, 0x39, 0x8a, 0x52, 0x4a, 0x61, 0xe7, 0xd8, 0x89, 0x87, 0x37,
	0x29, 0x20, 0x27, 0x07, 0xb9, 0x88, 0x7c, 0x7f, 0xd5, 0xb9, 0xea, 0x66, 0x72, 0x09, 0x66, 0x26,
	0x99, 0x24, 0x3f, 0x28, 0x2c, 0xf8, 0x12, 0x99, 0xfc, 0x09, 0xfe, 0x87, 0xae, 0x66, 0x87, 0x3c,
	0xf9, 0x3c, 0xf7, 0x62, 0xba, 0x0a, 0x0a, 0xdd, 0x7e, 0x03, 0x66, 0xa6, 0xba, 0xc8, 0xd3, 0xdc,
	0xb2, 0x49, 0x76, 0x72, 0x89, 0xf2, 0x9a, 0xbb, 0x9e, 0x5d, 0x74, 0xab, 0x5c, 0x7f, 0xb0, 0x0e,
	0x0b, 0x5d, 0x7f, 0x01, 0xcd, 0xb4, 0xc8, 0x78, 0x7e, 0x85, 0x15, 0xb0, 0x4b, 0xce, 0x60, 0x57,
	0xc3, 0x3a, 0x9e, 0x15, 0xd7, 0x6c, 0x11, 0xa2, 0x03, 0x7b, 0x19, 0x44, 0xb5, 0x19, 0x56, 0x95,
	0x85, 0xbe, 0x5e, 0xf6, 0x3f, 0xcb, 0xb5, 0x49, 0x9e, 0x78, 0x05, 0x90, 0x3e, 0x51, 0xaa, 0xde,
	0xf2, 0xdb, 0x86, 0x5c, 0xc1, 0xce, 0x05, 0x8b, 0xb3, 0xbf, 0x0d, 0xca, 0xfc, 0x0f, 0xb4, 0x44,
	0x73, 0x6c, 0x5f, 0x24, 0x9e, 0x4a, 0xdc, 0x7c, 0x77, 0xcb, 0xc1, 0x7e, 0x07, 0xf5, 0x63, 0x6f,
	0x82, 0x3d, 0x4c, 0x8a, 0x96, 0x4b, 0x21, 0xd8, 0x29, 0xc0, 0xe5, 0xe4, 0x7a, 0x6d, 0x70, 0xdf,
	0xc3, 0x76, 0xcf, 0xe3, 0xce, 0xb5, 0x9f, 0x56, 0xfe, 0x93, 0x02, 0x86, 0x4a, 0x55, 0xfd, 0x25,
	0xb4, 0xfb, 0x93, 0xf5, 0xc3, 0xbe, 0x81, 0xed, 0x74, 0x1a, 0x4a, 0x86, 0x9e, 0x16, 0x33, 0x54,
	0x0a, 0xfa, 0x47, 0x20, 0x94, 0x8d, 0x83, 0x3b, 0xf6, 0x5e, 0xd0, 0x2f, 0xc0, 0xc4, 0x9f, 0x1c,
	0xb3, 0x7f, 0xd2, 0x07, 0x45, 0xa0, 0xaf, 0xa1, 0x4d, 0x99, 0xcf, 0x1c, 0xce, 0xd6, 0x89, 0x7a,
	0x0a, 0xb5, 0x01, 0xef, 0xdf, 0x7b, 0x7c, 0x3d, 0x70, 0xe7, 0xd0, 0x1c, 0xf0, 0xa3, 0x3b, 0xc7,
	0xf3, 0x45, 0x39, 0xac, 0x05, 0xf2, 0x0c, 0xcc, 0x13, 0x16, 0x8b, 0x9e, 0x62, 0xb2, 0x0d, 0xca,
	0x80, 0xae, 0x18, 0x93, 0x78, 0x78, 0xbd, 0x85, 0x7f, 0x7c, 0x79, 0xfe, 0x77, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xb8, 0xe2, 0x45, 0xef, 0x9b, 0x11, 0x00, 0x00,
}
