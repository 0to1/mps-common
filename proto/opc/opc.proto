syntax = "proto3";

package go.micro.srv.opc;

service OpcService {
	rpc AddServer(Server) returns (Response);
	rpc UpdateServer(Server) returns (Response);
	rpc DeleteServer(Server) returns (Response);

	rpc GetServer(SrvReq) returns (Server);
	rpc GetServers(SrvQuery) returns (Servers);

	rpc GetGroup(GrpReq) returns (Group);
	rpc GetGroups(GrpQuery) returns (Groups);

	rpc AddGroup(Group) returns (Response);
	rpc UpdateGroup(Group) returns (Response);
	rpc DeleteGroup(Group) returns (Response);

	rpc GetItem(ItemReq) returns (Item);
	rpc GetItems(ItemQuery) returns (Items);

	rpc AddItem(Item) returns (Response);
	rpc UpdateItem(Item) returns (Response);
	rpc DeleteItem(Item) returns (Response);

	rpc WriteItem(ItemValueReq) returns (Response);
	rpc ReadItem(ItemReq) returns (ItemValueResp);

	rpc UpdateFile(FileReq) returns (Response);
}

message Response {}

message SrvReq {
	
}

message SrvQuery {
	uint32 page = 1;
	uint32 perPage = 2;	
}

message FileReq {
	uint32 groupID = 1;
	bytes filebytes = 2;
}

message GrpReq {
	uint32 groupID = 1;
}

message GrpQuery {
	uint32 page = 1;
	uint32 perPage = 2;	
}

message Group {
	uint32 groupID = 1;
	string name = 2;
	string tag = 3;
}

message Groups { 
	repeated Group group = 1;
	uint32 totalCount = 2; 
}

message ItemReq {
	uint32 groupID = 1;
	uint32 itemID = 2;
}

message ItemValueReq {
	uint32 groupID = 1;
	uint32 itemID = 2;
	uint32 value = 3;
}

message ItemValueResp {
	uint32 value = 1;
	bool quality = 2;
}

message ItemQuery {
	uint32 page = 1;
  	uint32 perPage = 2;
  	ItemFilter filter = 3;
}

message ItemFilter {
	repeated ItemFilter and = 1;
	repeated ItemFilter or = 2;
	repeated uint32 groupIn = 3;
	repeated uint32 itemIn = 4;
	repeated string nameLike = 5;
	repeated string addressLike = 6;
}

message Item {
	uint32 groupID = 1;
	uint32 itemID = 2;
	string name = 3;
	string address = 4;
	string datatype = 5;
	uint32 respectDataType = 6;
	string clientAccess = 7;
	uint32 scanRate = 8;
}

message Items { 
	repeated Item item = 1;
	uint32 totalCount = 2; 
}

message Server {
	string name = 1;
	string ip = 2;
	string tag = 3;
}

message Servers { 
	repeated Server server = 1;
	uint32 totalCount = 2; 
}